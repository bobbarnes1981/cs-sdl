Mezzanine Command ReferenceGameplay Related Console Commands
The following commands can be applied in the game by pressing T, and then typing 
/commandname. The backquote key (`) is a shortcut for having the / typed for 
you. To have these commands applied automatically before the game starts open 
the autoexec.cfg file and add them there, without the /. Name and team in 
particular should be changed there. 
map MLoads a map. If connected to a multiplayer server, votes to load this map 
(others will have to type "map M" as well to agree with loading this map). To 
vote for a map with a specific mode, set the mode before you issue the map 
command (see multiplayer menu). See also map in the editref. 
name yournameUsed for multiplayer, sets the name other players will know you as. 
team teamnameDetermines who are your teammates in any team game mode (truncated to 4 
characters, case sensitive). 
say text...Outputs text to all players, as if you typed it. 
echo text...Outputs text to the console. Most useful for scripts. 
saycommand P...This puts a prompt on screen where you can type stuff into, which will capture 
all keystrokes until you press return (or esc to cancel). You may press tab to 
autocomplete commands/aliases/variables, and up/down keys to browse the command 
history. If what you typed started with a "/", the rest of it will be executed 
as a command, otherwise its something you "say" to all players. default key = T 
for talk, ` for commands. If P is prefix to insert to the buffer, (default key ` 
inserts a /). 
connect serveripConnects to a server, e.g. "connect fov120.com". You can paste an address from 
the clipboard with ctrl+v. A master server browser will soon follow. 
lanconnectConnects to any server on the local area network by broadcasting the connection 
request. 
disconnectLeave the server. 
rate NSets your clients maximum downstream bandwidth to N bytes per second. Leaving it 
at 0 (the default) means the server will dynamically try to do the best thing, 
this is recommended for players who don't have a clue what their bandwidth is 
(setting your rate unoptimally is worse than not setting it all). Modem players 
(56k) could try rate 4000 and tweak from there, dsl players can try rate 
6000-10000. Note that the more players on a server, the more critical the effect 
of your rate. 
showscores+showscores turns display of scores (name/frags/network) on and -showscores 
turns it off. Default key = tab 
conskip NAllows you to browse through the console history, by offsetting the console 
output by N. Default key keypad - scrolls into the history (conskip 1) and 
keypad + resets the history (conskip -1000). 
toggleconsoleToggle between a more permanent and bigger console display and default, scroll 
off the screen variety. Unlike other games, you can play the game normally with 
the larger console on. 
weapon a b cTries to select weapons a, b & c, in that order, if they have ammo (0 = fist, 1 
= sg, 2 = cg, 3 = rl, 4 = rifle, 5 = gl). If none of the 3 indicated have any 
ammo, it will try the remaining weapons for one with ammo (in order 3/2/1/4/0) 
(the fist needs no ammo). You can use the weapon command with 0 to 3 arguments. 
examples: 
weapon 2 1 0     // close up selection
weapon 4 3 2     // far away selection
weapon 3 2 1     // medium distance selection
weapon 0         // humiliate selection :)
weapon           // just switch to anything with ammo
In any selection, it will skip whichever weapon you have currently selected, so 
executing a weapon command repeatedly toggles between the two best weapons with 
ammo within a given selection. default keys 0 to 4 select the corresponding 
weapons, with sensible default alternatives, middle mouse button is a simple 
weapon switch. 
maxfps NSets the max number of fps. Default 200. Useful if you have a recent machine 
that can run the engine at close to 1000 fps, or if you want to test. If you set 
maxfps to exactly or a simple ratio of your monitor's refresh rate, you may 
experience tearing. maxfps is not a replacement for vsync. 
gamespeed PSets the gamespeed in percent, i.e. 50 is playing in slowmotion at half the 
speed. does not work in multiplayer. for entertainment purposes only :) 
mode NSet gameplay mode to N for the next game played (next map load). N can be: 
  0: "ffa" / "default" mode. This is the default normal ffa game, and can also 
  be used as "prewar" while setting up teams / voting for the next game.  
  1: coop edit mode. This simply enables map editing in multiplayer, otherwise 
  identical to mode 0. 
  2: a standard non teamplay game, meant for FFA and duel games. 
  3: a standard teamplay game. will work with any number of teams with any 
  number of players: you are allied with all players whose "team" setting is the 
  same as yours. In general, all odd numbered modes (3/5/7/9) are the teamplay 
  variant of the even mode preceding it. 
  4/5: instagib mode. No items will spawn, but everyone will have 100 rifle 
  rounds and 1 health. 
  6/7: efficiency mode. No items will spawn, but everyone will get all weapons 
  with full ammo, and a yellow armour + boost on respawn. 
  8/9: arena mode. as efficiency mode, but now when you die you stay dead until 
  one player remains. [note: this mode doesn't fully work yet] 
  -1, -2: single player, see single player mode section below. 
Frag counting is the same for all modes: 1 for a frag, -1 for a suicide or a 
teamkill. Timelimit for all games is 10 minutes, or 15 minutes for teamplay, and 
no timelimit for mode 1 (and mode 0 in a local game). 
skill NSets the skill level (1-10) for single player modes. Default = 3. Affects number 
of monsters in DMSP mode, and general monster AI in all SP modes. 
Items / Gameplay
Official game storyline: "You kill stuff. The End." All of the following is 
assumed to be highly in flux. Once things settled down the document will reflect 
the changes. 

There are initially 5 weapons: 

      numnamedamagereloaddam/sectechnically similar to
            
      0fist500.25sec200quake3 gauntlet
      ?pistol250.550quake SG, but more precise
      1shotgun20x101.4sec143doom2 SSG (wide angle, but less than in doom2)
      2chaingun300.1sec300quake LG (mild spread at distance)
      3rocket launcher1200.8sec150quake RL (splash damage)
      4rifle1001.5sec66quake2 RG
      grenade launcher750.5sec100any quake GL, except faster but less damaging

The player has available all weapons when he spawns, but no ammo for them 
(except 5 shells), 100 health, and 50 weak armour (20% absorbtion). 

Items that can be picked up: 
  4 types of ammo (10 shells, 5 rockets, 20 bullets, 5 rifle rounds, 10 
  grenades, 30 pistol ammo) (to a max of 30/15/60/15/30/120, respawn 12/9/6 
  seconds) 
  health (adds 25 to a max of MAXHEALTH (initially 100), respawn 20/15/10 
  seconds) 
  health boost (adds 10 to your MAXHEALTH until the end of the current map, 
  respawn 60 seconds)
  light armour (100, absorbs 40% of damage, respawn 20 seconds) 
  heavy armour (200, absorbs 60% of damage, respawn 20 seconds) 
  quad powerup (4x damage for 20 seconds, respawn 60 seconds) 
Health and ammo respawn depends on number of players in the game, the numbers 
given are for 1-2, 3-4, and 5+ player games respectively. 
Multiplayer
Quick start to multiplayer gaming with Mezzanine: 
  Open up autoexec.cfg with an editor and make sure you have your name set to 
  something unique. 
  Start Mezzanine 
  go to the multiplayer menu and select "update from master server", this will 
  get you the lastest server list (you only need to do this once every day of 
  multiplayer gaming or so). 
  select the server browser in the multiplayer menu. see how all servers get 
  pinged automatically and information on player/map/game mode are displayed. 
  select a server with a good ping (near the top of the list, below 200 is very 
  playable, above may give noticable delays on gameplay events but is still 
  playable). 
  run, shoot and enjoy! 
  you may want to get familiar with the various game modes Mezzanine has, and 
  how to vote for other maps and modes (again, easily done using the multiplayer 
  menu) Be cooperative with the other players on the server, and vote. Remember, 
  press T to talk to others. 
Setting up a LAN game: 
  One of the computers on the LAN has to run server.bat. It really doesn't 
  matter which. 
  The simplest way for all players to connect is for them to type "lanconnect" 
  (if there is only one server on the LAN) or "connect servername" (if there are 
  multiple servers) in the Mezzanine console (press ` to get in the console), 
  where servername is the network name or ip address of the machine running 
  server.bat. if all went well you should now be in the game together, as above. 

  If your LAN is connected to the internet, by default your server will register 
  with the masterserver, and players could thus follow the procedure above to 
  join the game: your server will show up in the list, and may thus be joined by 
  people over the internet! If you want to avoid your server to contact the 
  master server, you can start it with -mblah or something. 
Multiplayer : capture mode
This is the most complicated multiplayer mode so some explanation is required. 
This mode is centered around the idea of capturing and holding bases, and has 
similarities to the game "battlefield 1942" and the "onslaught" mode of unreal 
2004: 
"bases" are placed thruout the map 
A base can be in 2 states: captured or neutral. When captured, it is captured by 
a certain team. This is shown by the texture its rendered with (red means enemy 
captured, blue means your team, grey means neutral). The model can be a flag, or 
whatever. 
A neutral base can be converted to your team by standing next to it for N 
seconds (N = 10 or so) within a certain radius. Multiple players speed up the 
process proportionally. The time accumulated to N is counted by the server as 
soon as the first player enters the radius, and reset to 0 immediately once all 
players of the initial team leave the radius. 
A base of the enemy color can be converted to neutral in exactly the same way. 
(so often it is a 2 step process to take over a base). 
Current team name and capture status is shown above the base using a text 
particle. 
At the spawn of a map, all bases are neutral, and all players spawn at normal 
player spawns, and try to capture whatever they can. Once bases are captured, 
players will spawn at spawnpoints close to whichever of their bases is closest 
to an enemy base. spawning will be preferred at bases which are not currently 
being captured by an enemy. 
If a player dies, they wait M seconds before they can respawn again (M = 20 or 
so). If you have no bases left (the enemy has captured yours, or at least made 
em neutral) you will spawn at random spawnpoints. 
If all bases are captured by one team, then that team wins the game 
automaticaly. Alternatively, if this doesn't happen, at the timelimit the team 
that wins is the team that has held the most bases for the most amount of time 
(1 point per X seconds for every base in your color). 
No points are awarded for kills or self-deaths. Infact, no individual score is 
ever displayed, your score is the same as the team's score. 
When you spawn, you are given a certain amount of ammo for randomly 2 weapons 
out of the 5 main ones, + pistol ammo. You will not be able to get more ammo 
unless it is placed in the map, or if given to you by another player. Any other 
player can replenish your ammo of types of ammo he doesn't have. I.e. if you 
have RL/MG and he has GL/MG, you can replenish his GL ammo, and he can give you 
RL ammo. 
A simple HUD shows bases relative to your current position in red or blue (can 
be a sphere with blips on it, with blips on the border for faraway bases). 
There may be additional powerups needed, to emulate the functionality of 
vehicles in BF, but maybe without its already good enough. 
Single Player Modes
There are two single player modes: 
  a classical progress-based monsters-wake-up-when-they-see-you mode which is 
  very similar to Doom & Quake, and is played on maps specifically designed for 
  SP. Items don't respawn. 
  an arena style SP mode (akin to my "DMSP" mod for quake) which you play on DM 
  maps: 10 seconds after the game starts monsters start spawning in (currently 
  about 1 per second), which will immediately be angry at you. The map ends when 
  they all have spawned and they are all killed (either by you or by their 
  buddies ;). The number of monsters depends on the "skill" variable. Items 
  respawn as in DM. 
The mode numbers for these are -2 and -1 respectively, but can most conveniently 
be set over the singleplayer menu. In both cases, the map ends when all monsters 
are killed. Coop play is not supported yet. 

There are currently 5 monsters, with the following properties (sorted roughly in 
order of "threat" they pose: 

      gun usedmodeldamagestaminaspeedfreqlagrateloyalty
            
      fireballogro51001430101
      chaingunrhino7701827012
      shotgunratamahatta50120121100304
      rifleslith2520012180404
      rocket launcherbauul305001010206
      bitehellpig12502230101
      iceballknight1025081016
      slimeballgoblin71001210202

The models are just temp until I find some real monster models. 

The damage given is for a single shot, where damage is simply a quarter of the 
equivalent player gun. For the shotgun this is if he hits you at point blank 
range, but is a lot less at distance. RL guy of course deals out splash damage 
too. 

Stamina is the amount of damage taken before dying, speed is their movement 
speed in Mezzanines/sec (player = 24), and freq is their relative frequency of 
spawning in DMSP mode. 

"lag" is how long it takes them to press fire after they have decided they will 
shoot in a particular direction, which means you can out-strafe their bullets 
(but still get hit when standing still or moving towards them). The number is in 
msec on skill 0, and half as big on skill 10. 

"rate" indicates how often they will attempt to shoot you while they have you in 
their sights. It is not an absolute fire rate measure, as fire rate is lower 
with distance and has some absolute minimum. Again, it is also dependant on 
skill (skill 10 fires twice as often as skill 0). "loyalty" indicates how often 
they have to be hit by another monster in a row before they fight back. 

Other important parameters: monsters will at most jump down 4 Mezzanines in 
height, unless their health is 100 or less, in which case they allways jump 
down. 

As you can summise from the above, the keys to surviving in Mezzanine SP are: 
keep moving, preferably perpendicular to the monster line of sight, frequently 
move behind walls and back (this makes monsters search for you again, which 
delays them), and use monster infighting to your advantage. 
Effects of network code on gameplay
You will notice that Mezzanine plays better on a high ping connection than most 
games out there. The reason for this is that just about everything in Mezzanine 
is done clientside, not just movement (as is common in games today) but also aim 
(the fat client / thin server model). 

The benefits of this are that the effects of lag are minimised, and someone on a 
200 ping can compete on an almost even playing field with someone with a 20 
ping, the disadvantages are mainly in that its harder to combat cheating. 
Further advantages for server admins are that Mezzanine servers use virtually no 
cpu, and very little bandwidth for a lot of clients (you can host a 4 player 
game on a modem!). 

It is impossible to completely hide lag however, and these are some of the 
effects that can still show lag if you or someone you play with has a high ping 
/ bad connection: 
  if the connection has packetloss. There is no direct indicator of packetloss, 
  instead the "packet jump" figure is provided on the hud (use "showscores"). 
  Packet jump says as much as the amount of milliseconds that pass between 
  updates from the indicated player. If it is extremely variable, or is 
  high(>80) then your gameplay may be hampered (players jumping from place to 
  place). Ideally it is a steady 40 or lower. A consistent packet jump is more 
  vital to gameplay than ping. 

  Mezzanine uses player prediction based on extrapolation using the physics 
  model, in an attempt to be both as up to date as possible w.r.t. to the game 
  state, and as realistic w.r.t. to physics. However, under packet loss this 
  model breaks down and player movement becomes choppy. 
  if ping is high (either yours or someone you play with), some actions may 
  appear lagged. The effect of ping is generally that the players in a game are 
  effectively playing more and more seperate games, as someone with a high ping 
  is "playing in the past". The local effects of this are masked out by client 
  side movement & aim, but may become noticable across players: 
    you may get hit by someone even though you are already out of his view. This 
    is because he is aiming at your movements of a while ago, and his hits take 
    a while to arrive back at you. You may therefore be hit by gunfire up to his 
    lag + your lag milliseconds after you leave his FOV. 
    item pickup: you may be denied an item if you try to pick it up at virtually 
    the same time as someone else (server decides who was "first"). Item pickup 
    is server side, only when you hear the sound effect have you actually picked 
    up the item. 
    players dying appears lagged. This will improve. 
  if a player is severely lagged (or you are) he temporarily becomes a "ghost" 
  that cannot be hit (if >1sec packet jump). 
Cheating & Multiplayer
Besides the abovementioned client-side gameplay, Mezzanine is also open source, 
which makes it too easy to cheat with. Anyone can modify the source to add 
cheats, recompile, and join multiplayer games. There is no real trivial way to 
combat this: 
  Moving the gameplay entirely serverside makes things a lot more complicated, 
  hurts smoothness of gameplay, and still doesn't really solve the cheating 
  problem 
  Mezzanine's predecessor Cube had "official binaries" which differed from the 
  Open Source version in a different network protocol. This helped combat 
  cheating somewhat, but still not entirely. 
  A social solution, "Trusted Communities" was proposed, that would give players 
  an identity, and only allow you to play on trusted servers if you were trusted 
  by other players. This system could work well but requires a lot of 
  infrastructure and organization 
Cube and Mezzanine are small communities sofar, and the main issue is not 
necessarily to combat cheating (a lost battle to start with), but more to allow 
non-cheaters to have undisturbed games together. Hence Mezzanine multiplayer has 
a very simple solution: There is no cheat protection at all. Nada. Servers 
operate in a so called "master mode" which allows people to easily and 
painlessly have games with people they know, without being disturbed by 
cheaters. The way it works is very simple: the first person to enter a server 
becomes the "master" of that server. The master has 2 commands at his disposal 
which other players have not: 
mastermode NSets the server to master mode N. N can be (ranging from very open to very 
private): 
  0 (open): anyone can enter the server. This is the default mode. It is good 
  for games with random people, if no cheaters appear to be around. 
  1 (veto): as 0, but now the master can force map changes. This is good when 
  playing with new players who may not understand how to vote for map changes. 
  2 (locked): as 1, but anyone joining after this mode has been set will be 
  forced to be spectator only. This mode is ideal for tournament play, or games 
  with friends only. 
  3 (private): as 2, but now noone can join the server anymore. Good for games 
  with friends when cheaters are around, cheaters wont even connect, so wont 
  have the chance to try and screw things up. 
kick NKick's the player with client number N (displayed in parentheses next to name) 
off the server, and bans his ip until 4 hours or the server is empty. You can't 
kick yourself. N may also just be the player's name. This command is useful when 
you started playing an open game, and a cheater joins. Additionally you can move 
to a higher mastermode for additional protection. Don't use this command for 
anything other than cheaters or people otherwise obstructing games. 
spectator B
spectator B NSets whether a player is a spectator (B=1 to enable, 0 to disable). N is 
specified as for kick. A player can voluntarily make himself a spectator, but 
only the current master can make other players spectators. 
The important thing to see about these commands is that they don't prevent 
cheating, nor are necessarily a fair way of adminning a server. They just make 
it real easy to have fun games with friends without being disturbed by cheaters 
or people you don't want to play with. 
In the event that a cheater is the master, or someone is being abusive with his 
masters powers, you can simply leave the server and start a game somewhere else. 
There are usually more servers than players anyway, and more players than 
cheaters. 
If the current master leaves the server, the next player in line will 
automatically be made the master. Mastermode will be reset to 0 when this 
happens (also when the server clears). At any time, all players will see who is 
the master in a game because his name is marked in a different colour on the 
scoreboard. 