{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment Tao  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
svn101114 \par
}}Tao}
{\comment Generated byDoxgyen. }
{\creatim \yr2010\mo11\dy14\hr13\min6\sec16}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version svn101114\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Bind} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.GL2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Glu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Glx} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Wgl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Cg} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.DevIl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeGlut} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.GlBindGen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.GlBindGen.Properties} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Glfw} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Lua} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenAl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Bind} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Bind.Properties} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.PhysFs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Tao.Ode.Ode.Aabb\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XKeyBoardState.AutoRepeats\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVBitStreamFilter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVClass\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVCodec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVCodecContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVCodecParser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVCodecParserContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVFormatContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVFormatParameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVFrac\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVFrame\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVImageFormat\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVImageInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVIndexEntry\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVInputFormat\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVOption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVOutputFormat\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVPacket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVPacketList\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVPaletteControl\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVPanScan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVPicture\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVProbeData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVRational\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAART \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVSubtitle\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.AVSubtitleRect\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Bind.Properties.Bind\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.GlBindGen.Properties.Bind\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.BindStreamWriter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.ByteIOContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Structures.Constant\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.Constants\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dContact\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dContactGeom\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Structures.Delegate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Bind.Structures.Function\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Bind.Structures.DelegateCollection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Gdi.DEVMODE\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dGeomClass\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dJointFeedback\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dMass\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dMatrix3\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dMatrix4\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dQuaternion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.DriverRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dSurfaceParameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dVector3\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Ode.Ode.dVector4\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Structures.Enum\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Structures.EnumCollection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.Face_InternalRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlGfx.FPSmanager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_BBox\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Bitmap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Bitmap_Size\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_CharMapRec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Data\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_FaceRec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Generic\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Glyph_Metrics\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_GlyphSlotRec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_ListNodeRec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_ListRec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Matrix\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Open_Args\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Outline\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Outline_Funcs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Parameter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Raster_Funcs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Raster_Params\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Size_Metrics\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_SizeRec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Span\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_StreamDesc\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_StreamRec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_UnitVector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.FT_Vector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FtGl.FtGl.FTFont\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Tao.FtGl.FtGl.FTGLBitmapFont\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FtGl.FtGl.FTGLExtrudeFont\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FtGl.FtGl.FTGLOutlineFont\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FtGl.FtGl.FTGLPixmapFont\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FtGl.FtGl.FTGLPolygonFont\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FtGl.FtGl.FTGLTextureFont\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Tao.FtGl.FtGl.FTLayout\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Tao.FtGl.FtGl.FTSimpleLayout\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Bind.Structures.FunctionBody\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Structures.FunctionCollection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.GlExtensionLoader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Glfw.Glfw.GLFWimage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Glfw.Glfw.GLFWvidmode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Glu.GLUnurbs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Glu.GLUnurbsObj\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Glu.GLUquadric\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Glu.GLUquadricObj\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Glu.GLUtesselator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Glu.GLUtesselatorObj\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.Glu.GLUtriangulatorObj\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.Glx\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.IlasmAttribute\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.DevIl.ILinfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.DevIl.ILpointf\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.DevIl.ILpointi\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlNet.IPaddress\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.ISpecReader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Bind.IBind\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Bind.GL2.Generator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Bind.Glu.Generator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Glx.Generator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Wgl.Generator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}\par
Bind.ISpecWriter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVG \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Bind.IBind\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Tao.Platform.Windows.Winmm.JOYCAPS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Winmm.JOYINFO\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Winmm.JOYINFOEX\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.LibraryRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Lua.Lua.lua_Debug\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Lua.Lua.luaL_Buffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Lua.Lua.luaL_Reg\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.MemoryRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Kernel.MEMORYSTATUS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Mix_Chunk\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.ModuleRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.MotifWmHints\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.OpenGl.OpenGLExtensionImport\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Structures.ParameterCollection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.PhysFs.Fs.PHYSFS_ArchiveInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.PhysFs.Fs.PHYSFS_File\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.PhysFs.Fs.PHYSFS_Version\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Gdi.POINTFLOAT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.RasterRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FFmpeg.FFmpeg.RcOverride\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.SizeHints.Rectangle\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.RendererRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_ActiveEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_AudioCVT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_AudioSpec\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_CD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_CDtrack\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_CDTrackData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_Color\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_Cursor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SDL_Event\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_ExposeEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_JoyAxisEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_JoyBallEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_JoyButtonEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_JoyHatEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_KeyboardEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SDL_keysym\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_MouseButtonEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_MouseMotionEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_Overlay\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_Palette\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_PixelFormat\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_QuitEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_Rect\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_ResizeEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_Surface\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SDL_SysWMEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMinfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMinfo_RiscOS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMinfo_Unix\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMinfo_Windows\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMmsg\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMmsg_RiscOS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMmsg_Unix\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_SysWMmsg_Windows\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_TimerID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Sdl.SDL_UserEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_version\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SDL_VideoInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlNet.SDLNet_GenericSocket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlNet.SDLNet_SocketSet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.SetWindowAttributes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.SimpleOpenGlControl\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.Size_InternalRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.SizeHints\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.Slot_InternalRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Smpeg.SMPEG_Filter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Smpeg.SMPEG_FilterInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Smpeg.SMPEG_Info\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.Smpeg.SMPEG_version\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.FreeType.SubGlyphRec_\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Kernel.SYSTEM_INFO\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.Windows.Kernel.SYSTEM_INFO_UNION\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlGfx.tColorRGBA\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlGfx.tColorY\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlNet.TCPsocket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlTtf.TTF_Font\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Bind.Structures.Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Bind.Structures.Parameter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Tao.Sdl.SdlNet.UDPpacket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Sdl.SdlNet.UDPsocket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.VisualInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XAnyEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XButtonEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XCirculateEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XCirculateRequestEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XClientMessageEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XColor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XColormapEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XConfigureEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XConfigureRequestEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XCreateWindowEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XCrossingEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XDestroyWindowEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XErrorEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XEventPad\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XExposeEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XFocusChangeEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XGCValues\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XGraphicsExposeEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XGravityEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XIconSize\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XKeyBoardState\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XKeyEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XKeymapEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XMapEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XMappingEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XMapRequestEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XModifierKeymap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XMotionEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XNoExposeEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XPropertyEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XReparentEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XResizeRequestEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XScreen\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XSelectionClearEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XSelectionEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XSelectionRequestEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XSetWindowAttributes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XSizeHints\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XStandardColormap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XTextProperty\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XUnmapEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XVisibilityEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XVisualInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XWindowAttributes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XWindowChanges\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tao.Platform.X11.XWMHints\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Tao.Ode.Ode.Aabb} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XKeyBoardState.AutoRepeats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVClass} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVCodec} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVCodecContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVCodecParser} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVFormatContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVFormatParameters} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVFrac} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVFrame} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVImageFormat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVImageInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVIndexEntry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVInputFormat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVOption} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVOutputFormat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVPacket} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVPacketList} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVPaletteControl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVPanScan} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVPicture} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVProbeData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVRational} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAART \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVStream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVSubtitle} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Bind.Properties.Bind} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.GlBindGen.Properties.Bind} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.BindStreamWriter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.ByteIOContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.Constant} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl constant in C# format. Both the constant name and value can be retrieved or set. The value can be either a number, another constant or an alias to a constant })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.Constants} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dContact} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact structure used by contact joint })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dContactGeom} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact info set by collision functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.Delegate} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl function. The return value, function name, function parameters and opengl version can be retrieved or set })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.DelegateCollection} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Gdi.DEVMODE} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b DEVMODE}}  data structure contains information about the initialization and environment of a printer or a display device. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dGeomClass} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dJointFeedback} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
During the world time step, the forces that are applied by each joint are computed. These forces are added directly to the joined bodies, and the user normally has no way of telling which joint contributed how much force })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dMass} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Describes the mass parameters of a rigid body })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dMatrix3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dMatrix4} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dQuaternion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.DriverRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dSurfaceParameters} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the properties of the colliding surfaces })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dVector3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Ode.Ode.dVector4} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.Enum} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.EnumCollection} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.Face_InternalRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlGfx.FPSmanager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main {\b FreeType} method class. Call FT_Init_FreeType to initialise })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_BBox} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold an outline's bounding box, i.e., the coordinates of its extrema in the horizontal and vertical directions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Bitmap} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a bitmap or pixmap to the raster. Note that we now manage pixmaps of various depths through the \'91pixel_mode\'92 field })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Bitmap_Size} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure models the metrics of a bitmap strike (i.e., a set of glyphs for a given point size and resolution) in a bitmap font. It is used for the \'91available_sizes\'92 field of FT_Face })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_CharMapRec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base charmap structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Data} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read-only binary data represented as a pointer and a length })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_FaceRec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root face class structure. A face object models a typeface in a font file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Generic} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Client applications often need to associate their own data to a variety of {\b FreeType} core objects. For example, a text layout API might want to associate a glyph cache to a given size object. Most {\b FreeType} object contains a \'91generic\'92 field, of type {\b FT_Generic}, which usage is left to client applications and font servers. It can be used to store a pointer to client-specific data, as well as the address of a \'91finalizer\'92 function, which will be called by {\b FreeType} when the object is destroyed (for example, the previous client example would put the address of the glyph cache destructor in the \'91finalizer\'92 field) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Glyph_Metrics} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model the metrics of a single glyph. The values are expressed in 26.6 fractional pixel format; if the flag FT_LOAD_NO_SCALE has been used while loading the glyph, values are expressed in font units instead })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_GlyphSlotRec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root glyph slot class structure. A glyph slot is a container where individual glyphs can be loaded, be they in outline or bitmap format })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_ListNodeRec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a single list element })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_ListRec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a simple double-linked list. These are used in many parts of {\b FreeType} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Matrix} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2x2 matrix. Coefficients are in 16.16 fixed float format. The computation performed is: x' = x*xx + y*xy y' = x*yx + y*yy })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Open_Args} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to indicate how to open a new font file or stream. A pointer to such a structure can be used as a parameter for the functions FT_Open_Face and FT_Attach_Stream })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Outline} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure is used to describe an outline to the scan-line converter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Outline_Funcs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold various function pointers used during outline decomposition in order to emit segments, conic, and cubic B\'E9ziers, as well as \'91move to\'92 and \'91close to\'92 operations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to pass more or less generic parameters to FT_Open_Face })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Raster_Funcs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a given raster class to the library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Raster_Params} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold the arguments used by a raster's render functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Size_Metrics} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size metrics structure gives the metrics of a size object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_SizeRec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root size class structure. A size object models a face object at a given size })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Span} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model a single span of gray (or black) pixels when rendering a monochrome or anti-aliased bitmap })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_StreamDesc} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union type used to store either a long or a pointer. This is used to store a file descriptor or a \'91FILE*\'92 in an input stream })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_StreamRec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe an input stream })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_UnitVector} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector unit vector })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.FT_Vector} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector; coordinates are of the FT_Pos type })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTFont} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Font abstract class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTGLBitmapFont} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTGLExtrudeFont} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTGLOutlineFont} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTGLPixmapFont} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTGLPolygonFont} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTGLTextureFont} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTLayout} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Layout abstract class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FtGl.FtGl.FTSimpleLayout} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.Function} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.FunctionBody} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.FunctionCollection} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.Functions} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.GL2.Generator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Glu.Generator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Glx.Generator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Wgl.Generator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.GlExtensionLoader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Glfw.Glfw.GLFWimage} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Glfw.Glfw.GLFWvidmode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video mode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Glu.GLUnurbs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Glu.GLUnurbsObj} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Glu.GLUquadric} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Glu.GLUquadricObj} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Glu.GLUtesselator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Glu.GLUtesselatorObj} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.Glu.GLUtriangulatorObj} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU triangulator object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.Glx} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLX (OpenGL XWindow Extensions) binding for .NET, implementing GLX 1.4 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b GLYPHMETRICSFLOAT}}  structure contains information about the placement and orientation of a glyph in a character cell })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.IBind} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.IlasmAttribute} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Injects supplied MSIL into the method's body })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.DevIl.ILinfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.DevIl.ILpointf} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.DevIl.ILpointi} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlNet.IPaddress} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IP Address and Port number })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.ISpecReader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.ISpecWriter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Winmm.JOYCAPS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYCAPS} structure contains information about the joystick capabilities })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Winmm.JOYINFO} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFO} structure contains information about the joystick position and button state })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Winmm.JOYINFOEX} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFOEX} structure contains extended information about the joystick position, point-of-view position, and button state })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.LibraryRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Lua.Lua.lua_Debug} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to carry different pieces of information about an active function. lua_getstack fills only the private part of this structure, for later use. To fill the other fields of {\b lua_Debug} with useful information, call lua_getinfo })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Lua.Lua.luaL_Buffer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for a string buffer })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Lua.Lua.luaL_Reg} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for arrays of functions to be registered by luaL_register. name is the function name and func is a pointer to the function. Any array of {\b luaL_Reg} must end with an sentinel entry in which both name and func are NULL })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.MemoryRec_} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} 2 Binding for .NET })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b MEMORYSTATUS}}  structure contains information about the current state of both physical and virtual memory. \par
The GlobalMemoryStatus function stores information in a {\b {\b MEMORYSTATUS}}  structure. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Mix_Chunk} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.ModuleRec_} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.MotifWmHints} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.OpenGl.OpenGLExtensionImport} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.Parameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a single parameter of an opengl function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.ParameterCollection} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds the parameter list of an opengl function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.PhysFs.Fs.PHYSFS_ArchiveInfo} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information on various PhysicsFS-supported archives })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.PhysFs.Fs.PHYSFS_File} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PhysicsFS file handle })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.PhysFs.Fs.PHYSFS_Version} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information the version of PhysicsFS in use })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b PIXELFORMATDESCRIPTOR}}  structure describes the pixel format of a drawing surface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Gdi.POINTFLOAT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b POINTFLOAT}}  structure contains the x and y coordinates of a point })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.RasterRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FFmpeg.FFmpeg.RcOverride} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.SizeHints.Rectangle} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.RendererRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_ActiveEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application visibility event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_AudioCVT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Conversion Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_AudioSpec} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Specification Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_CD} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDROM Drive Information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_CDtrack} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CD Track Information Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_CDTrackData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_Color} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format independent color description })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_Cursor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SDL_Event} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_ExposeEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Screen redraw event })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_JoyAxisEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis motion event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_JoyBallEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick trackball motion event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_JoyButtonEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick button event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_JoyHatEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick hat position change event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_KeyboardEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keyboard event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SDL_keysym} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_keysym} structure describes a key press or a key release })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse button event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse motion event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_Overlay} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The YUV hardware video overlay })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_Palette} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Color palette for 8-bit pixel formats })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_PixelFormat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_QuitEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quit requested event })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_Rect} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a rectangular area })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_ResizeEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window resized event })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_Surface} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Graphical Surface Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SDL_SysWMEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMinfo} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom window manager information structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMinfo_RiscOS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RISCOS custom window manager information structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMinfo_Unix} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom window manager information structure. TODO })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMinfo_Windows} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom window manager information structure. TODO })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMmsg} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMmsg_RiscOS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISC OS custom event structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMmsg_Unix} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom event structure. TODO })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_SysWMmsg_Windows} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom event structure. TODO })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_TimerID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Sdl.SDL_UserEvent} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user-defined event type })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_version} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SDL library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SDL_VideoInfo} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video Target information. Useful for determining the video hardware capabilities. Not finished. The C struct uses a set of bit-fields that need to be marshalled. The vfmt IntPtr works and provided useful information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlNet.SDLNet_GenericSocket} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A generic type for UDP and TCP sockets })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlNet.SDLNet_SocketSet} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket Set type (opaque) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.SetWindowAttributes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.SimpleOpenGlControl} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple OpenGL control allowing quick development of {\b Windows} Forms-based OpenGL applications })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.Size_InternalRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.SizeHints} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.Slot_InternalRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Smpeg.SMPEG_Filter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The filter definition itself })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Smpeg.SMPEG_FilterInfo} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Filter info from SMPEG })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Smpeg.SMPEG_Info} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to get information about the SMPEG object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.Smpeg.SMPEG_version} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SMPEG library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.FreeType.SubGlyphRec_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b SYSTEM_INFO}}  structure contains information about the current computer system. This includes the architecture and type of the processor, the number of processors in the system, the page size, and other such information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO_UNION} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Union for the OemId, ProcessorArchitecture, and Reserved fields of the {\b SYSTEM_INFO} structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlGfx.tColorRGBA} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlGfx.tColorY} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlNet.TCPsocket} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCP socket type (opaque) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlTtf.TTF_Font} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The opaque holder of a loaded font })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Bind.Structures.Type} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlNet.UDPpacket} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP packet data encapsulation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Sdl.SdlNet.UDPsocket} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP socket type (opaque) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.VisualInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XAnyEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XButtonEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XCirculateEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XCirculateRequestEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XClientMessageEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XColor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XColormapEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XConfigureEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XConfigureRequestEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XCreateWindowEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XCrossingEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XDestroyWindowEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XErrorEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XEventPad} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XExposeEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XFocusChangeEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XGCValues} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XGraphicsExposeEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XGravityEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XIconSize} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XKeyBoardState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XKeyEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XKeymapEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XMapEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XMappingEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XMapRequestEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XModifierKeymap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XMotionEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XNoExposeEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XPropertyEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XReparentEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XResizeRequestEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XScreen} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XSelectionClearEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XSelectionEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XSelectionRequestEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XSetWindowAttributes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XSizeHints} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XStandardColormap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XTextProperty} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XUnmapEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XVisibilityEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XVisualInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XWindowAttributes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XWindowChanges} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tao.Platform.X11.XWMHints} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b src/Tao.Cg/{\b Cg.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Cg/{\b CgGl.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Cg/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.DevIl/{\b Il.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.DevIl/{\b Ilu.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.DevIl/{\b Ilut.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.DevIl/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FFmpeg/{\b AVCodec.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FFmpeg/{\b AVFormat.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FFmpeg/{\b AVSWScale.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FFmpeg/{\b AVUtil.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FFmpeg/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FreeGlut/{\b Glut.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FreeGlut/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FreeType/{\b FreeType.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FreeType/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FtGl/{\b FtGl.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.FtGl/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/{\b BindStreamWriter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/{\b IBind.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/{\b ISpecReader.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/{\b ISpecWriter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/{\b Main.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/{\b Settings.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/{\b Utilities.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/GL2/{\b Generator.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Glu/{\b Generator.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Glx/{\b Generator.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Properties/{\b Bind.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Properties/{\b Bind.Designer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Structures/{\b Constant.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Structures/{\b Delegate.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Structures/{\b Enum.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Structures/{\b Function.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Structures/{\b Parameter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Structures/{\b Type.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.GlBindGen/Wgl/{\b Generator.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Glfw/{\b Glfw.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Glfw/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Lua/{\b Lua.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Lua/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Ode/{\b Ode.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Ode/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenAl/{\b Al.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenAl/{\b Alc.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenAl/{\b ALDelegates.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenAl/{\b Alut.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenAl/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/{\b Gl.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/{\b GLCore.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/{\b GLDelegates.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/{\b GLEnums.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/{\b GlExtensionLoader.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/{\b GlHelper.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/{\b Glu.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.OpenGl/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.PhysFs/{\b Fs.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.PhysFs/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b Gdi.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b IlasmAttribute.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b Kernel.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b SimpleOpenGlControl.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b User.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b Wgl.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b WglCore.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b WglDelegates.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b WglEnums.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b WglHelper.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b Winmm.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/{\b WinNt.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.Windows/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.X11/{\b API.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.X11/{\b Functions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.X11/{\b Glx.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.X11/{\b Structs.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Platform.X11/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/{\b Sdl.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/{\b SdlGfx.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/{\b SdlImage.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/{\b SdlMixer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/{\b SdlNet.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/{\b SdlTtf.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/{\b Smpeg.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/Tao.Sdl/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Bind\par \pard\plain 
{\tc\tcl2 \v Bind}
{\xe \v Bind}
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b GL2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Glu}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Glx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Structures}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Wgl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BindStreamWriter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IBind}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b ISpecReader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b ISpecWriter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MainClass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Settings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Utilities}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GeneratorMode} \{ {\b Unknown}, 
{\b GL2}, 
{\b GL3}, 
{\b Wgl}, 
{\b Glx}, 
{\b Glu}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b WrapperTypes} \{ {\b None} =  0, 
{\b BoolParameter}, 
{\b GenericParameter}, 
{\b ArrayParameter}, 
{\b UncheckedParameter}, 
{\b PointerParameter}, 
{\b ReferenceParameter}, 
{\b StringReturnType}, 
{\b GenericReturnType}, 
{\b ArrayReturnType}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v GeneratorMode\:Bind}
{\xe \v Bind\:GeneratorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Bind::GeneratorMode}}
}\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Unknown\:Bind}
{\xe \v Bind\:Unknown}
{\b {\i Unknown{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
}}  \par
{\xe \v GL2\:Bind}
{\xe \v Bind\:GL2}
{\b {\i GL2{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
}}  \par
{\xe \v GL3\:Bind}
{\xe \v Bind\:GL3}
{\b {\i GL3{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
}}  \par
{\xe \v Wgl\:Bind}
{\xe \v Bind\:Wgl}
{\b {\i Wgl{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
}}  \par
{\xe \v Glx\:Bind}
{\xe \v Bind\:Glx}
{\b {\i Glx{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
}}  \par
{\xe \v Glu\:Bind}
{\xe \v Bind\:Glu}
{\b {\i Glu{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
}}  \par
}
}
{\xe \v WrapperTypes\:Bind}
{\xe \v Bind\:WrapperTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Bind::WrapperTypes}}
}\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v None\:Bind}
{\xe \v Bind\:None}
{\b {\i None{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No wrapper needed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v BoolParameter\:Bind}
{\xe \v Bind\:BoolParameter}
{\b {\i BoolParameter{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function takes bool parameter - C uses Int for bools, so we have to marshal. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v GenericParameter\:Bind}
{\xe \v Bind\:GenericParameter}
{\b {\i GenericParameter{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function takes generic parameters - add ref/out generic and generic overloads. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v ArrayParameter\:Bind}
{\xe \v Bind\:ArrayParameter}
{\b {\i ArrayParameter{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function takes arrays as parameters - add ref/out and ([Out]) array overloads. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v UncheckedParameter\:Bind}
{\xe \v Bind\:UncheckedParameter}
{\b {\i UncheckedParameter{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function with bitmask parameters. Bitmask parameters map to UInt, but since we can only use signed types (for CLS compliance), we must add the unchecked keyword. Usually found in bitmasks. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v PointerParameter\:Bind}
{\xe \v Bind\:PointerParameter}
{\b {\i PointerParameter{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function that takes (in/ref/out) a naked pointer as a parameter - we pass an IntPtr. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v ReferenceParameter\:Bind}
{\xe \v Bind\:ReferenceParameter}
{\b {\i ReferenceParameter{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function that takes a reference to a struct. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v StringReturnType\:Bind}
{\xe \v Bind\:StringReturnType}
{\b {\i StringReturnType{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function returns string - needs manual marshalling through IntPtr to prevent the managed GC from freeing memory allocated on the unmanaged side (e.g. glGetString). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v GenericReturnType\:Bind}
{\xe \v Bind\:GenericReturnType}
{\b {\i GenericReturnType{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function returns a void pointer - maps to IntPtr, and the user has to manually marshal the type. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v ArrayReturnType\:Bind}
{\xe \v Bind\:ArrayReturnType}
{\b {\i ArrayReturnType{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function returns a typed pointer - we have to copy the data to an array to protect it from the GC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Bind.GL2\par \pard\plain 
{\tc\tcl2 \v Bind.GL2}
{\xe \v Bind.GL2}
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Generator}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Bind.Glu\par \pard\plain 
{\tc\tcl2 \v Bind.Glu}
{\xe \v Bind.Glu}
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Generator}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Bind.Glx\par \pard\plain 
{\tc\tcl2 \v Bind.Glx}
{\xe \v Bind.Glx}
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Generator}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Bind.Structures\par \pard\plain 
{\tc\tcl2 \v Bind.Structures}
{\xe \v Bind.Structures}
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Constant}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl constant in C# format. Both the constant name and value can be retrieved or set. The value can be either a number, another constant or an alias to a constant. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Delegate}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl function. The return value, function name, function parameters and opengl version can be retrieved or set. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DelegateCollection}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Enum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EnumCollection}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Function}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionBody}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionCollection}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Parameter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a single parameter of an opengl function. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParameterCollection}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds the parameter list of an opengl function. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Type}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Bind.Wgl\par \pard\plain 
{\tc\tcl2 \v Bind.Wgl}
{\xe \v Bind.Wgl}
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Generator}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao\par \pard\plain 
{\tc\tcl2 \v Tao}
{\xe \v Tao}
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Cg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b DevIl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b FFmpeg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b FreeGlut}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b FreeType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b FtGl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b GlBindGen}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Glfw}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Lua}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Ode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b OpenAl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b OpenGl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b PhysFs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Platform}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Sdl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Cg\par \pard\plain 
{\tc\tcl2 \v Tao.Cg}
{\xe \v Tao.Cg}
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Cg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Cg} core runtime binding for .NET, implementing {\b Cg} 1.4.1. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CgGl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Cg} core runtime binding for .NET, implementing {\b Cg} 1.4.1. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.DevIl\par \pard\plain 
{\tc\tcl2 \v Tao.DevIl}
{\xe \v Tao.DevIl}
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Il}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DevIL (Developer's Image Library) IL binding for .NET, implementing DevIL 1.6.8 RC2. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ilu}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DevIL (Developer's Image Library) ILU binding for .NET. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ILinfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ILpointf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ILpointi}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ilut}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DevIL (Developer's Image Library) ILUT binding for .NET. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.FFmpeg\par \pard\plain 
{\tc\tcl2 \v Tao.FFmpeg}
{\xe \v Tao.FFmpeg}
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FFmpeg}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.FreeGlut\par \pard\plain 
{\tc\tcl2 \v Tao.FreeGlut}
{\xe \v Tao.FreeGlut}
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Glut}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FreeGLUT (OpenGL Utility Toolkit) binding for .NET, implementing {\b FreeGlut} 2.4.0. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.FreeType\par \pard\plain 
{\tc\tcl2 \v Tao.FreeType}
{\xe \v Tao.FreeType}
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MemoryRec_}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} 2 Binding for .NET. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_StreamRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe an input stream. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_StreamDesc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union type used to store either a long or a pointer. This is used to store a file descriptor or a \'91FILE*\'92 in an input stream. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Vector}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector; coordinates are of the FT_Pos type. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_BBox}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold an outline's bounding box, i.e., the coordinates of its extrema in the horizontal and vertical directions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Bitmap}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a bitmap or pixmap to the raster. Note that we now manage pixmaps of various depths through the \'91pixel_mode\'92 field. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Outline}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure is used to describe an outline to the scan-line converter. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Outline_Funcs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold various function pointers used during outline decomposition in order to emit segments, conic, and cubic B\'E9ziers, as well as \'91move to\'92 and \'91close to\'92 operations. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RasterRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Span}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model a single span of gray (or black) pixels when rendering a monochrome or anti-aliased bitmap. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Raster_Params}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold the arguments used by a raster's render functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Raster_Funcs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a given raster class to the library. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_UnitVector}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector unit vector. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Matrix}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2x2 matrix. Coefficients are in 16.16 fixed float format. The computation performed is: x' = x*xx + y*xy y' = x*yx + y*yy. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read-only binary data represented as a pointer and a length. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Generic}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Client applications often need to associate their own data to a variety of {\b FreeType} core objects. For example, a text layout API might want to associate a glyph cache to a given size object. Most {\b FreeType} object contains a \'91generic\'92 field, of type {\b FT_Generic}, which usage is left to client applications and font servers. It can be used to store a pointer to client-specific data, as well as the address of a \'91finalizer\'92 function, which will be called by {\b FreeType} when the object is destroyed (for example, the previous client example would put the address of the glyph cache destructor in the \'91finalizer\'92 field). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_ListNodeRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a single list element. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_ListRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a simple double-linked list. These are used in many parts of {\b FreeType}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Glyph_Metrics}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model the metrics of a single glyph. The values are expressed in 26.6 fractional pixel format; if the flag FT_LOAD_NO_SCALE has been used while loading the glyph, values are expressed in font units instead. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Bitmap_Size}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure models the metrics of a bitmap strike (i.e., a set of glyphs for a given point size and resolution) in a bitmap font. It is used for the \'91available_sizes\'92 field of FT_Face. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LibraryRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ModuleRec_}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DriverRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RendererRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_FaceRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root face class structure. A face object models a typeface in a font file. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_SizeRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root size class structure. A size object models a face object at a given size. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_GlyphSlotRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root glyph slot class structure. A glyph slot is a container where individual glyphs can be loaded, be they in outline or bitmap format. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_CharMapRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base charmap structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Face_InternalRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Size_InternalRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Size_Metrics}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size metrics structure gives the metrics of a size object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SubGlyphRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Slot_InternalRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Parameter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to pass more or less generic parameters to FT_Open_Face. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FT_Open_Args}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to indicate how to open a new font file or stream. A pointer to such a structure can be used as a parameter for the functions FT_Open_Face and FT_Attach_Stream. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main {\b FreeType} method class. Call FT_Init_FreeType to initialise. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FT_Pixel_Mode} \{ {\b FT_PIXEL_MODE_NONE} =  0, 
{\b FT_PIXEL_MODE_MONO}, 
{\b FT_PIXEL_MODE_GRAY}, 
{\b FT_PIXEL_MODE_GRAY2}, 
{\b FT_PIXEL_MODE_GRAY4}, 
{\b FT_PIXEL_MODE_LCD}, 
{\b FT_PIXEL_MODE_LCD_V}, 
{\b FT_PIXEL_MODE_MAX}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type used to describe the format of pixels in a given bitmap. Note that additional formats may be added in the future. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FT_Glyph_Format} \{ {\b FT_GLYPH_FORMAT_NONE} =  (int)((uint)0 << 24 | (uint)0 << 16 | (uint)0 << 8 | (uint)0), 
{\b FT_GLYPH_FORMAT_COMPOSITE} =  (int)((uint)'c' << 24 | (uint)'o' << 16 | (uint)'m' << 8 | (uint)'p'), 
{\b FT_GLYPH_FORMAT_BITMAP} =  (int)((uint)'b' << 24 | (uint)'i' << 16 | (uint)'t' << 8 | (uint)'s'), 
{\b FT_GLYPH_FORMAT_OUTLINE} =  (int)((uint)'o' << 24 | (uint)'u' << 16 | (uint)'t' << 8 | (uint)'l'), 
{\b FT_GLYPH_FORMAT_PLOTTER} =  (int)((uint)'p' << 24 | (uint)'l' << 16 | (uint)'o' << 8 | (uint)'t')
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type used to describe the format of a given glyph image. Note that this version of FreeType only supports two image formats, even though future font drivers will be able to register their own format. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FT_Encoding} \{ {\b FT_ENCODING_NONE} =  (int)((uint)0 << 24 | (uint)0 << 16 | (uint)0 << 8 | (uint)0), 
{\b FT_ENCODING_MS_SYMBOL} =  (int)((uint)'s' << 24 | (uint)'y' << 16 | (uint)'m' << 8 | (uint)'b'), 
{\b FT_ENCODING_UNICODE} =  (int)((uint)'u' << 24 | (uint)'n' << 16 | (uint)'i' << 8 | (uint)'c'), 
{\b FT_ENCODING_SJIS} =  (int)((uint)'s' << 24 | (uint)'j' << 16 | (uint)'i' << 8 | (uint)'s'), 
{\b FT_ENCODING_GB2312} =  (int)((uint)'g' << 24 | (uint)'b' << 16 | (uint)' ' << 8 | (uint)' '), 
{\b FT_ENCODING_BIG5} =  (int)((uint)'b' << 24 | (uint)'i' << 16 | (uint)'g' << 8 | (uint)'5'), 
{\b FT_ENCODING_WANSUNG} =  (int)((uint)'w' << 24 | (uint)'a' << 16 | (uint)'n' << 8 | (uint)'s'), 
{\b FT_ENCODING_JOHAB} =  (int)((uint)'j' << 24 | (uint)'o' << 16 | (uint)'h' << 8 | (uint)'a'), 
{\b FT_ENCODING_MS_SJIS} =  (int)(FT_Encoding.FT_ENCODING_SJIS), 
{\b FT_ENCODING_MS_GB2312} =  (int)(FT_Encoding.FT_ENCODING_GB2312), 
{\b FT_ENCODING_MS_BIG5} =  (int)(FT_Encoding.FT_ENCODING_BIG5), 
{\b FT_ENCODING_MS_WANSUNG} =  (int)(FT_Encoding.FT_ENCODING_WANSUNG), 
{\b FT_ENCODING_MS_JOHAB} =  (int)(FT_Encoding.FT_ENCODING_JOHAB), 
{\b FT_ENCODING_ADOBE_STANDARD} =  (int)((uint)'A' << 24 | (uint)'D' << 16 | (uint)'O' << 8 | (uint)'B'), 
{\b FT_ENCODING_ADOBE_EXPERT} =  (int)((uint)'A' << 24 | (uint)'D' << 16 | (uint)'B' << 8 | (uint)'E'), 
{\b FT_ENCODING_ADOBE_CUSTOM} =  (int)((uint)'A' << 24 | (uint)'D' << 16 | (uint)'B' << 8 | (uint)'C'), 
{\b FT_ENCODING_ADOBE_LATIN_1} =  (int)((uint)'l' << 24 | (uint)'a' << 16 | (uint)'t' << 8 | (uint)'1'), 
{\b FT_ENCODING_OLD_LATIN_2} =  (int)((uint)'l' << 24 | (uint)'a' << 16 | (uint)'t' << 8 | (uint)'2'), 
{\b FT_ENCODING_APPLE_ROMAN} =  (int)((uint)'a' << 24 | (uint)'r' << 16 | (uint)'m' << 8 | (uint)'n')
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration used to specify character sets supported by charmaps. Used in the FT_Select_Charmap API function. note: Despite the name, this enumeration lists specific character repertories (i.e., charsets), and not text encoding methods (e.g., UTF-8, UTF-16, GB2312_EUC, etc.). Because of 32-bit charcodes defined in Unicode (i.e., surrogates), all character codes must be expressed as FT_Longs. Other encodings might be defined in the future. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FT_Render_Mode} \{ {\b FT_RENDER_MODE_NORMAL} =  0, 
{\b FT_RENDER_MODE_LIGHT}, 
{\b FT_RENDER_MODE_MONO}, 
{\b FT_RENDER_MODE_LCD}, 
{\b FT_RENDER_MODE_LCD_V}, 
{\b FT_RENDER_MODE_MAX}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type that lists the render modes supported by FreeType 2. Each mode corresponds to a specific type of scanline conversion performed on the outline. For bitmap fonts the \'91bitmap->pixel_mode\'92 field in the FT_GlyphSlotRec structure gives the format of the returned bitmap. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FT_Kerning_Mode} \{ {\b FT_KERNING_DEFAULT} =  0, 
{\b FT_KERNING_UNFITTED}, 
{\b FT_KERNING_UNSCALED}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration used to specify which kerning values to return in FT_Get_Kerning. \par
}}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v FT_Encoding\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_Encoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::FreeType::FT_Encoding}}
}\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration used to specify character sets supported by charmaps. Used in the FT_Select_Charmap API function. note: Despite the name, this enumeration lists specific character repertories (i.e., charsets), and not text encoding methods (e.g., UTF-8, UTF-16, GB2312_EUC, etc.). Because of 32-bit charcodes defined in Unicode (i.e., surrogates), all character codes must be expressed as FT_Longs. Other encodings might be defined in the future. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v FT_ENCODING_NONE\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_NONE}
{\b {\i FT_ENCODING_NONE{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_MS_SYMBOL\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_MS_SYMBOL}
{\b {\i FT_ENCODING_MS_SYMBOL{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_UNICODE\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_UNICODE}
{\b {\i FT_ENCODING_UNICODE{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_SJIS\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_SJIS}
{\b {\i FT_ENCODING_SJIS{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_GB2312\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_GB2312}
{\b {\i FT_ENCODING_GB2312{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_BIG5\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_BIG5}
{\b {\i FT_ENCODING_BIG5{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_WANSUNG\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_WANSUNG}
{\b {\i FT_ENCODING_WANSUNG{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_JOHAB\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_JOHAB}
{\b {\i FT_ENCODING_JOHAB{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_MS_SJIS\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_MS_SJIS}
{\b {\i FT_ENCODING_MS_SJIS{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_MS_GB2312\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_MS_GB2312}
{\b {\i FT_ENCODING_MS_GB2312{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_MS_BIG5\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_MS_BIG5}
{\b {\i FT_ENCODING_MS_BIG5{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_MS_WANSUNG\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_MS_WANSUNG}
{\b {\i FT_ENCODING_MS_WANSUNG{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_MS_JOHAB\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_MS_JOHAB}
{\b {\i FT_ENCODING_MS_JOHAB{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_ADOBE_STANDARD\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_ADOBE_STANDARD}
{\b {\i FT_ENCODING_ADOBE_STANDARD{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_ADOBE_EXPERT\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_ADOBE_EXPERT}
{\b {\i FT_ENCODING_ADOBE_EXPERT{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_ADOBE_CUSTOM\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_ADOBE_CUSTOM}
{\b {\i FT_ENCODING_ADOBE_CUSTOM{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_ADOBE_LATIN_1\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_ADOBE_LATIN_1}
{\b {\i FT_ENCODING_ADOBE_LATIN_1{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_OLD_LATIN_2\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_OLD_LATIN_2}
{\b {\i FT_ENCODING_OLD_LATIN_2{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_ENCODING_APPLE_ROMAN\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_ENCODING_APPLE_ROMAN}
{\b {\i FT_ENCODING_APPLE_ROMAN{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
{\xe \v FT_Glyph_Format\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_Glyph_Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::FreeType::FT_Glyph_Format}}
}\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type used to describe the format of a given glyph image. Note that this version of {\b FreeType} only supports two image formats, even though future font drivers will be able to register their own format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v FT_GLYPH_FORMAT_NONE\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_GLYPH_FORMAT_NONE}
{\b {\i FT_GLYPH_FORMAT_NONE{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_GLYPH_FORMAT_COMPOSITE\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_GLYPH_FORMAT_COMPOSITE}
{\b {\i FT_GLYPH_FORMAT_COMPOSITE{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_GLYPH_FORMAT_BITMAP\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_GLYPH_FORMAT_BITMAP}
{\b {\i FT_GLYPH_FORMAT_BITMAP{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_GLYPH_FORMAT_OUTLINE\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_GLYPH_FORMAT_OUTLINE}
{\b {\i FT_GLYPH_FORMAT_OUTLINE{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_GLYPH_FORMAT_PLOTTER\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_GLYPH_FORMAT_PLOTTER}
{\b {\i FT_GLYPH_FORMAT_PLOTTER{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
{\xe \v FT_Kerning_Mode\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_Kerning_Mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::FreeType::FT_Kerning_Mode}}
}\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration used to specify which kerning values to return in FT_Get_Kerning. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v FT_KERNING_DEFAULT\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_KERNING_DEFAULT}
{\b {\i FT_KERNING_DEFAULT{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_KERNING_UNFITTED\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_KERNING_UNFITTED}
{\b {\i FT_KERNING_UNFITTED{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_KERNING_UNSCALED\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_KERNING_UNSCALED}
{\b {\i FT_KERNING_UNSCALED{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
{\xe \v FT_Pixel_Mode\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_Pixel_Mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::FreeType::FT_Pixel_Mode}}
}\par
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type used to describe the format of pixels in a given bitmap. Note that additional formats may be added in the future. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v FT_PIXEL_MODE_NONE\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_NONE}
{\b {\i FT_PIXEL_MODE_NONE{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_PIXEL_MODE_MONO\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_MONO}
{\b {\i FT_PIXEL_MODE_MONO{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_PIXEL_MODE_GRAY\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_GRAY}
{\b {\i FT_PIXEL_MODE_GRAY{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_PIXEL_MODE_GRAY2\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_GRAY2}
{\b {\i FT_PIXEL_MODE_GRAY2{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_PIXEL_MODE_GRAY4\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_GRAY4}
{\b {\i FT_PIXEL_MODE_GRAY4{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_PIXEL_MODE_LCD\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_LCD}
{\b {\i FT_PIXEL_MODE_LCD{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_PIXEL_MODE_LCD_V\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_LCD_V}
{\b {\i FT_PIXEL_MODE_LCD_V{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_PIXEL_MODE_MAX\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_PIXEL_MODE_MAX}
{\b {\i FT_PIXEL_MODE_MAX{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
{\xe \v FT_Render_Mode\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_Render_Mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::FreeType::FT_Render_Mode}}
}\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type that lists the render modes supported by {\b FreeType} 2. Each mode corresponds to a specific type of scanline conversion performed on the outline. For bitmap fonts the \'91bitmap->pixel_mode\'92 field in the {\b FT_GlyphSlotRec} structure gives the format of the returned bitmap. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v FT_RENDER_MODE_NORMAL\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_RENDER_MODE_NORMAL}
{\b {\i FT_RENDER_MODE_NORMAL{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_RENDER_MODE_LIGHT\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_RENDER_MODE_LIGHT}
{\b {\i FT_RENDER_MODE_LIGHT{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_RENDER_MODE_MONO\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_RENDER_MODE_MONO}
{\b {\i FT_RENDER_MODE_MONO{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_RENDER_MODE_LCD\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_RENDER_MODE_LCD}
{\b {\i FT_RENDER_MODE_LCD{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_RENDER_MODE_LCD_V\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_RENDER_MODE_LCD_V}
{\b {\i FT_RENDER_MODE_LCD_V{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v FT_RENDER_MODE_MAX\:Tao::FreeType}
{\xe \v Tao::FreeType\:FT_RENDER_MODE_MAX}
{\b {\i FT_RENDER_MODE_MAX{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.FtGl\par \pard\plain 
{\tc\tcl2 \v Tao.FtGl}
{\xe \v Tao.FtGl}
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FtGl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FTGL bindings for .NET, implementing FTGL 2.1.3.0. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.GlBindGen\par \pard\plain 
{\tc\tcl2 \v Tao.GlBindGen}
{\xe \v Tao.GlBindGen}
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Properties}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.GlBindGen.Properties\par \pard\plain 
{\tc\tcl2 \v Tao.GlBindGen.Properties}
{\xe \v Tao.GlBindGen.Properties}
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Glfw\par \pard\plain 
{\tc\tcl2 \v Tao.Glfw}
{\xe \v Tao.Glfw}
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Glfw}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLFW (OpenGL Framework) binding for .NET, implementing GLFW 2.6.0. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Lua\par \pard\plain 
{\tc\tcl2 \v Tao.Lua}
{\xe \v Tao.Lua}
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Lua}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Lua} bindings for .NET, implementing {\b Lua} 5.1.1 ({\f2 http://www.lua.org}). }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Ode\par \pard\plain 
{\tc\tcl2 \v Tao.Ode}
{\xe \v Tao.Ode}
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open Dynamics Engine (ODE - {\f2 http://ode.org}) bindings for .NET ODE Version: 0.9. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
During the time step any feedback structures that are attached to joints will be filled in with the joint s force and torque information.The {\b dJointGetFeedback} () function returns the current feedback structure pointer\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dVector3 {\b t1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the jointfeedback structure from the joint to get information about the forces applied by each joint. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dVector3 {\b f2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dVector3 {\b t2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v dJointGetFeedback\:Tao::Ode}
{\xe \v Tao::Ode\:dJointGetFeedback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
During the time step any feedback structures that are attached to joints will be filled in with the joint s force and torque information.The Tao.Ode.dJointGetFeedback ()}
}\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v f2\:Tao::Ode}
{\xe \v Tao::Ode\:f2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dVector3 {\b Tao::Ode.f2}}
}\par
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v t1\:Tao::Ode}
{\xe \v Tao::Ode\:t1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dVector3 {\b Tao::Ode.t1}}
}\par
{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the jointfeedback structure from the joint to get information about the forces applied by each joint. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The feedback information structure is defined as follows (NOTE: C# version listed here): public struct dJointFeedback \{ public dVector3 f1; /* force that joint applies to body 1 \par
}}
{\xe \v t2\:Tao::Ode}
{\xe \v Tao::Ode\:t2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dVector3 {\b Tao::Ode.t2}}
}\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.OpenAl\par \pard\plain 
{\tc\tcl2 \v Tao.OpenAl}
{\xe \v Tao.OpenAl}
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Al}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenAL binding for .NET, implementing AL 1.1. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Alc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenAL binding for .NET, implementing ALC 1.1. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Delegates}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Alut}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenAL binding for .NET, implementing ALUT 1.1. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.OpenGl\par \pard\plain 
{\tc\tcl2 \v Tao.OpenGl}
{\xe \v Tao.OpenGl}
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Gl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL binding for .NET, implementing OpenGL 2.1, plus extensions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OpenGLExtensionImport}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GlExtensionLoader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Glu}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLU (OpenGL Utility) binding for .NET, implementing GLU 1.3. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.OpenGl.Bind\par \pard\plain 
{\tc\tcl2 \v Tao.OpenGl.Bind}
{\xe \v Tao.OpenGl.Bind}
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Properties}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.OpenGl.Bind.Properties\par \pard\plain 
{\tc\tcl2 \v Tao.OpenGl.Bind.Properties}
{\xe \v Tao.OpenGl.Bind.Properties}
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.PhysFs\par \pard\plain 
{\tc\tcl2 \v Tao.PhysFs}
{\xe \v Tao.PhysFs}
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Fs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PhysFS bindings for .NET, implementing PhysFS 1.0.1 ({\f2 http://icculus.org/physfs/}). }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Platform\par \pard\plain 
{\tc\tcl2 \v Tao.Platform}
{\xe \v Tao.Platform}
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Windows}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b X11}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Platform.Windows\par \pard\plain 
{\tc\tcl2 \v Tao.Platform.Windows}
{\xe \v Tao.Platform.Windows}
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Gdi}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GDI binding for .NET, implementing Windows-specific GDI functionality. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IlasmAttribute}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Injects supplied MSIL into the method's body. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Kernel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel binding for .NET, implementing Windows-specific kernel functionality. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SimpleOpenGlControl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple OpenGL control allowing quick development of {\b Windows} Forms-based OpenGL applications. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b User}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User binding for .NET, implementing Windows-specific user functionality. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Wgl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Winmm}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Windows} Multimedia binding for .NET, implementing Windows-specific multimedia functionality. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WinNt}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WinNT binding for .NET, implementing {\b Windows} NT-specific functionality. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Platform.X11\par \pard\plain 
{\tc\tcl2 \v Tao.Platform.X11}
{\xe \v Tao.Platform.X11}
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b API}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VisualInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SetWindowAttributes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SizeHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Constants}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Functions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Glx}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLX (OpenGL XWindow Extensions) binding for .NET, implementing GLX 1.4. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XAnyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XKeyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XButtonEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XMotionEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XCrossingEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XFocusChangeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XKeymapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XGraphicsExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XNoExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XVisibilityEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XCreateWindowEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XDestroyWindowEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XUnmapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XMapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XMapRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XReparentEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XConfigureEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XGravityEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XResizeRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XConfigureRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XCirculateEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XCirculateRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XPropertyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XSelectionClearEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XSelectionRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XSelectionEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XColormapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XClientMessageEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XMappingEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XErrorEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XEventPad}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b XVisualInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XSetWindowAttributes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XWindowAttributes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XTextProperty}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XStandardColormap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XColor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XScreen}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XWindowChanges}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MotifWmHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XModifierKeymap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XKeyBoardState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XGCValues}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XSizeHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XWMHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b XIconSize}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ErrorCodes} \{ {\b Success} =  0, 
{\b BadRequest} =  1, 
{\b BadValue} =  2, 
{\b BadWindow} =  3, 
{\b BadPixmap} =  4, 
{\b BadAtom} =  5, 
{\b BadCursor} =  6, 
{\b BadFont} =  7, 
{\b BadMatch} =  8, 
{\b BadDrawable} =  9, 
{\b BadAccess} =  10, 
{\b BadAlloc} =  11, 
{\b BadColor} =  12, 
{\b BadGC} =  13, 
{\b BadIDChoice} =  14, 
{\b BadName} =  15, 
{\b BadLength} =  16, 
{\b BadImplementation} =  17
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CreateWindowMask} \{ {\b CWBackPixmap} =  (1L<<0), 
{\b CWBackPixel} =  (1L<<1), 
{\b CWSaveUnder} =  (1L<<10), 
{\b CWEventMask} =  (1L<<11), 
{\b CWDontPropagate} =  (1L<<12), 
{\b CWColormap} =  (1L<<13), 
{\b CWCursor} =  (1L<<14), 
{\b CWBorderPixmap} =  (1L<<2), 
{\b CWBorderPixel} =  (1L<<3), 
{\b CWBitGravity} =  (1L<<4), 
{\b CWWinGravity} =  (1L<<5), 
{\b CWBackingStore} =  (1L<<6), 
{\b CWBackingPlanes} =  (1L<<7), 
{\b CWBackingPixel} =  (1L<<8), 
{\b CWOverrideRedirect} =  (1L<<9)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XKey} \{ {\b BackSpace} =  0xff08, 
{\b Tab} =  0xff09, 
{\b Linefeed} =  0xff0a, 
{\b Clear} =  0xff0b, 
{\b Return} =  0xff0d, 
{\b Pause} =  0xff13, 
{\b Scroll_Lock} =  0xff14, 
{\b Sys_Req} =  0xff15, 
{\b Escape} =  0xff1b, 
{\b Delete} =  0xffff, 
{\b Multi_key} =  0xff20, 
{\b Codeinput} =  0xff37, 
{\b SingleCandidate} =  0xff3c, 
{\b MultipleCandidate} =  0xff3d, 
{\b PreviousCandidate} =  0xff3e, 
{\b Kanji} =  0xff21, 
{\b Muhenkan} =  0xff22, 
{\b Henkan_Mode} =  0xff23, 
{\b Henkan} =  0xff23, 
{\b Romaji} =  0xff24, 
{\b Hiragana} =  0xff25, 
{\b Katakana} =  0xff26, 
{\b Hiragana_Katakana} =  0xff27, 
{\b Zenkaku} =  0xff28, 
{\b Hankaku} =  0xff29, 
{\b Zenkaku_Hankaku} =  0xff2a, 
{\b Touroku} =  0xff2b, 
{\b Massyo} =  0xff2c, 
{\b Kana_Lock} =  0xff2d, 
{\b Kana_Shift} =  0xff2e, 
{\b Eisu_Shift} =  0xff2f, 
{\b Eisu_toggle} =  0xff30, 
{\b Kanji_Bangou} =  0xff37, 
{\b Zen_Koho} =  0xff3d, 
{\b Mae_Koho} =  0xff3e, 
{\b Home} =  0xff50, 
{\b Left} =  0xff51, 
{\b Up} =  0xff52, 
{\b Right} =  0xff53, 
{\b Down} =  0xff54, 
{\b Prior} =  0xff55, 
{\b Page_Up} =  0xff55, 
{\b Next} =  0xff56, 
{\b Page_Down} =  0xff56, 
{\b End} =  0xff57, 
{\b Begin} =  0xff58, 
{\b Select} =  0xff60, 
{\b Print} =  0xff61, 
{\b Execute} =  0xff62, 
{\b Insert} =  0xff63, 
{\b Undo} =  0xff65, 
{\b Redo} =  0xff66, 
{\b Menu} =  0xff67, 
{\b Find} =  0xff68, 
{\b Cancel} =  0xff69, 
{\b Help} =  0xff6a, 
{\b Break} =  0xff6b, 
{\b Mode_switch} =  0xff7e, 
{\b script_switch} =  0xff7e, 
{\b Num_Lock} =  0xff7f, 
{\b KP_Space} =  0xff80, 
{\b KP_Tab} =  0xff89, 
{\b KP_Enter} =  0xff8d, 
{\b KP_F1} =  0xff91, 
{\b KP_F2} =  0xff92, 
{\b KP_F3} =  0xff93, 
{\b KP_F4} =  0xff94, 
{\b KP_Home} =  0xff95, 
{\b KP_Left} =  0xff96, 
{\b KP_Up} =  0xff97, 
{\b KP_Right} =  0xff98, 
{\b KP_Down} =  0xff99, 
{\b KP_Prior} =  0xff9a, 
{\b KP_Page_Up} =  0xff9a, 
{\b KP_Next} =  0xff9b, 
{\b KP_Page_Down} =  0xff9b, 
{\b KP_End} =  0xff9c, 
{\b KP_Begin} =  0xff9d, 
{\b KP_Insert} =  0xff9e, 
{\b KP_Delete} =  0xff9f, 
{\b KP_Equal} =  0xffbd, 
{\b KP_Multiply} =  0xffaa, 
{\b KP_Add} =  0xffab, 
{\b KP_Separator} =  0xffac, 
{\b KP_Subtract} =  0xffad, 
{\b KP_Decimal} =  0xffae, 
{\b KP_Divide} =  0xffaf, 
{\b KP_0} =  0xffb0, 
{\b KP_1} =  0xffb1, 
{\b KP_2} =  0xffb2, 
{\b KP_3} =  0xffb3, 
{\b KP_4} =  0xffb4, 
{\b KP_5} =  0xffb5, 
{\b KP_6} =  0xffb6, 
{\b KP_7} =  0xffb7, 
{\b KP_8} =  0xffb8, 
{\b KP_9} =  0xffb9, 
{\b F1} =  0xffbe, 
{\b F2} =  0xffbf, 
{\b F3} =  0xffc0, 
{\b F4} =  0xffc1, 
{\b F5} =  0xffc2, 
{\b F6} =  0xffc3, 
{\b F7} =  0xffc4, 
{\b F8} =  0xffc5, 
{\b F9} =  0xffc6, 
{\b F10} =  0xffc7, 
{\b F11} =  0xffc8, 
{\b L1} =  0xffc8, 
{\b F12} =  0xffc9, 
{\b L2} =  0xffc9, 
{\b F13} =  0xffca, 
{\b L3} =  0xffca, 
{\b F14} =  0xffcb, 
{\b L4} =  0xffcb, 
{\b F15} =  0xffcc, 
{\b L5} =  0xffcc, 
{\b F16} =  0xffcd, 
{\b L6} =  0xffcd, 
{\b F17} =  0xffce, 
{\b L7} =  0xffce, 
{\b F18} =  0xffcf, 
{\b L8} =  0xffcf, 
{\b F19} =  0xffd0, 
{\b L9} =  0xffd0, 
{\b F20} =  0xffd1, 
{\b L10} =  0xffd1, 
{\b F21} =  0xffd2, 
{\b R1} =  0xffd2, 
{\b F22} =  0xffd3, 
{\b R2} =  0xffd3, 
{\b F23} =  0xffd4, 
{\b R3} =  0xffd4, 
{\b F24} =  0xffd5, 
{\b R4} =  0xffd5, 
{\b F25} =  0xffd6, 
{\b R5} =  0xffd6, 
{\b F26} =  0xffd7, 
{\b R6} =  0xffd7, 
{\b F27} =  0xffd8, 
{\b R7} =  0xffd8, 
{\b F28} =  0xffd9, 
{\b R8} =  0xffd9, 
{\b F29} =  0xffda, 
{\b R9} =  0xffda, 
{\b F30} =  0xffdb, 
{\b R10} =  0xffdb, 
{\b F31} =  0xffdc, 
{\b R11} =  0xffdc, 
{\b F32} =  0xffdd, 
{\b R12} =  0xffdd, 
{\b F33} =  0xffde, 
{\b R13} =  0xffde, 
{\b F34} =  0xffdf, 
{\b R14} =  0xffdf, 
{\b F35} =  0xffe0, 
{\b R15} =  0xffe0, 
{\b Shift_L} =  0xffe1, 
{\b Shift_R} =  0xffe2, 
{\b Control_L} =  0xffe3, 
{\b Control_R} =  0xffe4, 
{\b Caps_Lock} =  0xffe5, 
{\b Shift_Lock} =  0xffe6, 
{\b Meta_L} =  0xffe7, 
{\b Meta_R} =  0xffe8, 
{\b Alt_L} =  0xffe9, 
{\b Alt_R} =  0xffea, 
{\b Super_L} =  0xffeb, 
{\b Super_R} =  0xffec, 
{\b Hyper_L} =  0xffed, 
{\b Hyper_R} =  0xffee, 
{\b space} =  0x0020, 
{\b exclam} =  0x0021, 
{\b quotedbl} =  0x0022, 
{\b numbersign} =  0x0023, 
{\b dollar} =  0x0024, 
{\b percent} =  0x0025, 
{\b ampersand} =  0x0026, 
{\b apostrophe} =  0x0027, 
{\b quoteright} =  0x0027, 
{\b parenleft} =  0x0028, 
{\b parenright} =  0x0029, 
{\b asterisk} =  0x002a, 
{\b plus} =  0x002b, 
{\b comma} =  0x002c, 
{\b minus} =  0x002d, 
{\b period} =  0x002e, 
{\b slash} =  0x002f, 
{\b Number0} =  0x0030, 
{\b Number1} =  0x0031, 
{\b Number2} =  0x0032, 
{\b Number3} =  0x0033, 
{\b Number4} =  0x0034, 
{\b Number5} =  0x0035, 
{\b Number6} =  0x0036, 
{\b Number7} =  0x0037, 
{\b Number8} =  0x0038, 
{\b Number9} =  0x0039, 
{\b colon} =  0x003a, 
{\b semicolon} =  0x003b, 
{\b less} =  0x003c, 
{\b equal} =  0x003d, 
{\b greater} =  0x003e, 
{\b question} =  0x003f, 
{\b at} =  0x0040, 
{\b A} =  0x0041, 
{\b B} =  0x0042, 
{\b C} =  0x0043, 
{\b D} =  0x0044, 
{\b E} =  0x0045, 
{\b F} =  0x0046, 
{\b G} =  0x0047, 
{\b H} =  0x0048, 
{\b I} =  0x0049, 
{\b J} =  0x004a, 
{\b K} =  0x004b, 
{\b L} =  0x004c, 
{\b M} =  0x004d, 
{\b N} =  0x004e, 
{\b O} =  0x004f, 
{\b P} =  0x0050, 
{\b Q} =  0x0051, 
{\b R} =  0x0052, 
{\b S} =  0x0053, 
{\b T} =  0x0054, 
{\b U} =  0x0055, 
{\b V} =  0x0056, 
{\b W} =  0x0057, 
{\b X} =  0x0058, 
{\b Y} =  0x0059, 
{\b Z} =  0x005a, 
{\b bracketleft} =  0x005b, 
{\b backslash} =  0x005c, 
{\b bracketright} =  0x005d, 
{\b asciicircum} =  0x005e, 
{\b underscore} =  0x005f, 
{\b grave} =  0x0060, 
{\b quoteleft} =  0x0060, 
{\b a} =  0x0061, 
{\b b} =  0x0062, 
{\b c} =  0x0063, 
{\b d} =  0x0064, 
{\b e} =  0x0065, 
{\b f} =  0x0066, 
{\b g} =  0x0067, 
{\b h} =  0x0068, 
{\b i} =  0x0069, 
{\b j} =  0x006a, 
{\b k} =  0x006b, 
{\b l} =  0x006c, 
{\b m} =  0x006d, 
{\b n} =  0x006e, 
{\b o} =  0x006f, 
{\b p} =  0x0070, 
{\b q} =  0x0071, 
{\b r} =  0x0072, 
{\b s} =  0x0073, 
{\b t} =  0x0074, 
{\b u} =  0x0075, 
{\b v} =  0x0076, 
{\b w} =  0x0077, 
{\b x} =  0x0078, 
{\b y} =  0x0079, 
{\b z} =  0x007a, 
{\b braceleft} =  0x007b, 
{\b bar} =  0x007c, 
{\b braceright} =  0x007d, 
{\b asciitilde} =  0x007e
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines LATIN-1 and miscellaneous keys. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XVisualClass} \{ {\b StaticGray} =  0, 
{\b GrayScale} =  1, 
{\b StaticColor} =  2, 
{\b PseudoColor} =  3, 
{\b TrueColor} =  4, 
{\b DirectColor} =  5
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XWindowClass} \{ {\b InputOutput} =  1, 
{\b InputOnly} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XEventName} \{ {\b KeyPress} =  2, 
{\b KeyRelease} =  3, 
{\b ButtonPress} =  4, 
{\b ButtonRelease} =  5, 
{\b MotionNotify} =  6, 
{\b EnterNotify} =  7, 
{\b LeaveNotify} =  8, 
{\b FocusIn} =  9, 
{\b FocusOut} =  10, 
{\b KeymapNotify} =  11, 
{\b Expose} =  12, 
{\b GraphicsExpose} =  13, 
{\b NoExpose} =  14, 
{\b VisibilityNotify} =  15, 
{\b CreateNotify} =  16, 
{\b DestroyNotify} =  17, 
{\b UnmapNotify} =  18, 
{\b MapNotify} =  19, 
{\b MapRequest} =  20, 
{\b ReparentNotify} =  21, 
{\b ConfigureNotify} =  22, 
{\b ConfigureRequest} =  23, 
{\b GravityNotify} =  24, 
{\b ResizeRequest} =  25, 
{\b CirculateNotify} =  26, 
{\b CirculateRequest} =  27, 
{\b PropertyNotify} =  28, 
{\b SelectionClear} =  29, 
{\b SelectionRequest} =  30, 
{\b SelectionNotify} =  31, 
{\b ColormapNotify} =  32, 
{\b ClientMessage} =  33, 
{\b MappingNotify} =  34, 
{\b LASTEvent}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SetWindowValuemask} \{ {\b Nothing} =  0, 
{\b BackPixmap} =  1, 
{\b BackPixel} =  2, 
{\b BorderPixmap} =  4, 
{\b BorderPixel} =  8, 
{\b BitGravity} =  16, 
{\b WinGravity} =  32, 
{\b BackingStore} =  64, 
{\b BackingPlanes} =  128, 
{\b BackingPixel} =  256, 
{\b OverrideRedirect} =  512, 
{\b SaveUnder} =  1024, 
{\b EventMask} =  2048, 
{\b DontPropagate} =  4096, 
{\b ColorMap} =  8192, 
{\b Cursor} =  16384
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CreateWindowArgs} \{ {\b CopyFromParent} =  0, 
{\b ParentRelative} =  1, 
{\b InputOutput} =  1, 
{\b InputOnly} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Gravity} \{ {\b ForgetGravity} =  0, 
{\b NorthWestGravity} =  1, 
{\b NorthGravity} =  2, 
{\b NorthEastGravity} =  3, 
{\b WestGravity} =  4, 
{\b CenterGravity} =  5, 
{\b EastGravity} =  6, 
{\b SouthWestGravity} =  7, 
{\b SouthGravity} =  8, 
{\b SouthEastGravity} =  9, 
{\b StaticGravity} =  10
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XKeySym} \{ {\b XK_BackSpace} =  0xFF08, 
{\b XK_Tab} =  0xFF09, 
{\b XK_Clear} =  0xFF0B, 
{\b XK_Return} =  0xFF0D, 
{\b XK_Home} =  0xFF50, 
{\b XK_Left} =  0xFF51, 
{\b XK_Up} =  0xFF52, 
{\b XK_Right} =  0xFF53, 
{\b XK_Down} =  0xFF54, 
{\b XK_Page_Up} =  0xFF55, 
{\b XK_Page_Down} =  0xFF56, 
{\b XK_End} =  0xFF57, 
{\b XK_Begin} =  0xFF58, 
{\b XK_Menu} =  0xFF67, 
{\b XK_Shift_L} =  0xFFE1, 
{\b XK_Shift_R} =  0xFFE2, 
{\b XK_Control_L} =  0xFFE3, 
{\b XK_Control_R} =  0xFFE4, 
{\b XK_Caps_Lock} =  0xFFE5, 
{\b XK_Shift_Lock} =  0xFFE6, 
{\b XK_Meta_L} =  0xFFE7, 
{\b XK_Meta_R} =  0xFFE8, 
{\b XK_Alt_L} =  0xFFE9, 
{\b XK_Alt_R} =  0xFFEA, 
{\b XK_Super_L} =  0xFFEB, 
{\b XK_Super_R} =  0xFFEC, 
{\b XK_Hyper_L} =  0xFFED, 
{\b XK_Hyper_R} =  0xFFEE
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EventMask} \{ {\b NoEventMask} =  0, 
{\b KeyPressMask} =  1 << 0, 
{\b KeyReleaseMask} =  1 << 1, 
{\b ButtonPressMask} =  1 << 2, 
{\b ButtonReleaseMask} =  1 << 3, 
{\b EnterWindowMask} =  1 << 4, 
{\b LeaveWindowMask} =  1 << 5, 
{\b PointerMotionMask} =  1 << 6, 
{\b PointerMotionHintMask} =  1 << 7, 
{\b Button1MotionMask} =  1 << 8, 
{\b Button2MotionMask} =  1 << 9, 
{\b Button3MotionMask} =  1 << 10, 
{\b Button4MotionMask} =  1 << 11, 
{\b Button5MotionMask} =  1 << 12, 
{\b ButtonMotionMask} =  1 << 13, 
{\b KeymapStateMask} =  1 << 14, 
{\b ExposureMask} =  1 << 15, 
{\b VisibilityChangeMask} =  1 << 16, 
{\b StructureNotifyMask} =  1 << 17, 
{\b ResizeRedirectMask} =  1 << 18, 
{\b SubstructureNotifyMask} =  1 << 19, 
{\b SubstructureRedirectMask} =  1 << 20, 
{\b FocusChangeMask} =  1 << 21, 
{\b PropertyChangeMask} =  1 << 22, 
{\b ColormapChangeMask} =  1 << 23, 
{\b OwnerGrabButtonMask} =  1 << 24
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GrabMode} \{ {\b GrabModeSync} =  0, 
{\b GrabModeAsync} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Atom} \{ {\b AnyPropertyType} =  0, 
{\b XA_PRIMARY} =  1, 
{\b XA_SECONDARY} =  2, 
{\b XA_ARC} =  3, 
{\b XA_ATOM} =  4, 
{\b XA_BITMAP} =  5, 
{\b XA_CARDINAL} =  6, 
{\b XA_COLORMAP} =  7, 
{\b XA_CURSOR} =  8, 
{\b XA_CUT_BUFFER0} =  9, 
{\b XA_CUT_BUFFER1} =  10, 
{\b XA_CUT_BUFFER2} =  11, 
{\b XA_CUT_BUFFER3} =  12, 
{\b XA_CUT_BUFFER4} =  13, 
{\b XA_CUT_BUFFER5} =  14, 
{\b XA_CUT_BUFFER6} =  15, 
{\b XA_CUT_BUFFER7} =  16, 
{\b XA_DRAWABLE} =  17, 
{\b XA_FONT} =  18, 
{\b XA_INTEGER} =  19, 
{\b XA_PIXMAP} =  20, 
{\b XA_POINT} =  21, 
{\b XA_RECTANGLE} =  22, 
{\b XA_RESOURCE_MANAGER} =  23, 
{\b XA_RGB_COLOR_MAP} =  24, 
{\b XA_RGB_BEST_MAP} =  25, 
{\b XA_RGB_BLUE_MAP} =  26, 
{\b XA_RGB_DEFAULT_MAP} =  27, 
{\b XA_RGB_GRAY_MAP} =  28, 
{\b XA_RGB_GREEN_MAP} =  29, 
{\b XA_RGB_RED_MAP} =  30, 
{\b XA_STRING} =  31, 
{\b XA_VISUALID} =  32, 
{\b XA_WINDOW} =  33, 
{\b XA_WM_COMMAND} =  34, 
{\b XA_WM_HINTS} =  35, 
{\b XA_WM_CLIENT_MACHINE} =  36, 
{\b XA_WM_ICON_NAME} =  37, 
{\b XA_WM_ICON_SIZE} =  38, 
{\b XA_WM_NAME} =  39, 
{\b XA_WM_NORMAL_HINTS} =  40, 
{\b XA_WM_SIZE_HINTS} =  41, 
{\b XA_WM_ZOOM_HINTS} =  42, 
{\b XA_MIN_SPACE} =  43, 
{\b XA_NORM_SPACE} =  44, 
{\b XA_MAX_SPACE} =  45, 
{\b XA_END_SPACE} =  46, 
{\b XA_SUPERSCRIPT_X} =  47, 
{\b XA_SUPERSCRIPT_Y} =  48, 
{\b XA_SUBSCRIPT_X} =  49, 
{\b XA_SUBSCRIPT_Y} =  50, 
{\b XA_UNDERLINE_POSITION} =  51, 
{\b XA_UNDERLINE_THICKNESS} =  52, 
{\b XA_STRIKEOUT_ASCENT} =  53, 
{\b XA_STRIKEOUT_DESCENT} =  54, 
{\b XA_ITALIC_ANGLE} =  55, 
{\b XA_X_HEIGHT} =  56, 
{\b XA_QUAD_WIDTH} =  57, 
{\b XA_WEIGHT} =  58, 
{\b XA_POINT_SIZE} =  59, 
{\b XA_RESOLUTION} =  60, 
{\b XA_COPYRIGHT} =  61, 
{\b XA_NOTICE} =  62, 
{\b XA_FONT_NAME} =  63, 
{\b XA_FAMILY_NAME} =  64, 
{\b XA_FULL_NAME} =  65, 
{\b XA_CAP_HEIGHT} =  66, 
{\b XA_WM_CLASS} =  67, 
{\b XA_WM_TRANSIENT_FOR} =  68, 
{\b XA_LAST_PREDEFINED} =  68
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ChangeWindowFlags} \{ {\b CWX} =  1 << 0, 
{\b CWY} =  1 << 1, 
{\b CWWidth} =  1 << 2, 
{\b CWHeight} =  1 << 3, 
{\b CWBorderWidth} =  1 << 4, 
{\b CWSibling} =  1 << 5, 
{\b CWStackMode} =  1 << 6
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b StackMode} \{ {\b Above} =  0, 
{\b Below} =  1, 
{\b TopIf} =  2, 
{\b BottomIf} =  3, 
{\b Opposite} =  4
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ColorFlags} \{ {\b DoRed} =  1 << 0, 
{\b DoGreen} =  1 << 1, 
{\b DoBlue} =  1 << 2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b NotifyMode} \{ {\b NotifyNormal} =  0, 
{\b NotifyGrab} =  1, 
{\b NotifyUngrab} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b NotifyDetail} \{ {\b NotifyAncestor} =  0, 
{\b NotifyVirtual} =  1, 
{\b NotifyInferior} =  2, 
{\b NotifyNonlinear} =  3, 
{\b NotifyNonlinearVirtual} =  4, 
{\b NotifyPointer} =  5, 
{\b NotifyPointerRoot} =  6, 
{\b NotifyDetailNone} =  7
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MotifFlags} \{ {\b Functions} =  1, 
{\b Decorations} =  2, 
{\b InputMode} =  4, 
{\b Status} =  8
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MotifFunctions} \{ {\b All} =  0x01, 
{\b Resize} =  0x02, 
{\b Move} =  0x04, 
{\b Minimize} =  0x08, 
{\b Maximize} =  0x10, 
{\b Close} =  0x20
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MotifDecorations} \{ {\b All} =  0x01, 
{\b Border} =  0x02, 
{\b ResizeH} =  0x04, 
{\b Title} =  0x08, 
{\b Menu} =  0x10, 
{\b Minimize} =  0x20, 
{\b Maximize} =  0x40
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MotifInputMode} \{ {\b Modeless} =  0, 
{\b ApplicationModal} =  1, 
{\b SystemModal} =  2, 
{\b FullApplicationModal} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b KeyMasks} \{ {\b ShiftMask} =  (1 << 0), 
{\b LockMask} =  (1 << 1), 
{\b ControlMask} =  (1 << 2), 
{\b Mod1Mask} =  (1 << 3), 
{\b Mod2Mask} =  (1 << 4), 
{\b Mod3Mask} =  (1 << 5), 
{\b Mod4Mask} =  (1 << 6), 
{\b Mod5Mask} =  (1 << 7), 
{\b ModMasks} =  Mod1Mask | Mod2Mask | Mod3Mask | Mod4Mask | Mod5Mask
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PropertyMode} \{ {\b Replace} =  0, 
{\b Prepend} =  1, 
{\b Append} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCFunction} \{ {\b GCFunction} =  1 << 0, 
{\b GCPlaneMask} =  1 << 1, 
{\b GCForeground} =  1 << 2, 
{\b GCBackground} =  1 << 3, 
{\b GCLineWidth} =  1 << 4, 
{\b GCLineStyle} =  1 << 5, 
{\b GCCapStyle} =  1 << 6, 
{\b GCJoinStyle} =  1 << 7, 
{\b GCFillStyle} =  1 << 8, 
{\b GCFillRule} =  1 << 9, 
{\b GCTile} =  1 << 10, 
{\b GCStipple} =  1 << 11, 
{\b GCTileStipXOrigin} =  1 << 12, 
{\b GCTileStipYOrigin} =  1 << 13, 
{\b GCFont} =  1 << 14, 
{\b GCSubwindowMode} =  1 << 15, 
{\b GCGraphicsExposures} =  1 << 16, 
{\b GCClipXOrigin} =  1 << 17, 
{\b GCClipYOrigin} =  1 << 18, 
{\b GCClipMask} =  1 << 19, 
{\b GCDashOffset} =  1 << 20, 
{\b GCDashList} =  1 << 21, 
{\b GCArcMode} =  1 << 22
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCJoinStyle} \{ {\b JoinMiter} =  0, 
{\b JoinRound} =  1, 
{\b JoinBevel} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCLineStyle} \{ {\b LineSolid} =  0, 
{\b LineOnOffDash} =  1, 
{\b LineDoubleDash} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCCapStyle} \{ {\b CapNotLast} =  0, 
{\b CapButt} =  1, 
{\b CapRound} =  2, 
{\b CapProjecting} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCFillStyle} \{ {\b FillSolid} =  0, 
{\b FillTiled} =  1, 
{\b FillStippled} =  2, 
{\b FillOpaqueStppled} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCFillRule} \{ {\b EvenOddRule} =  0, 
{\b WindingRule} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCArcMode} \{ {\b ArcChord} =  0, 
{\b ArcPieSlice} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GCSubwindowMode} \{ {\b ClipByChildren} =  0, 
{\b IncludeInferiors} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GXFunction} \{ {\b GXclear} =  0x0, 
{\b GXand} =  0x1, 
{\b GXandReverse} =  0x2, 
{\b GXcopy} =  0x3, 
{\b GXandInverted} =  0x4, 
{\b GXnoop} =  0x5, 
{\b GXxor} =  0x6, 
{\b GXor} =  0x7, 
{\b GXnor} =  0x8, 
{\b GXequiv} =  0x9, 
{\b GXinvert} =  0xa, 
{\b GXorReverse} =  0xb, 
{\b GXcopyInverted} =  0xc, 
{\b GXorInverted} =  0xd, 
{\b GXnand} =  0xe, 
{\b GXset} =  0xf
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b NetWindowManagerState} \{ {\b Remove} =  0, 
{\b Add} =  1, 
{\b Toggle} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RevertTo} \{ {\b None} =  0, 
{\b PointerRoot} =  1, 
{\b Parent} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MapState} \{ {\b IsUnmapped} =  0, 
{\b IsUnviewable} =  1, 
{\b IsViewable} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CursorFontShape} \{ {\b XC_X_cursor} =  0, 
{\b XC_arrow} =  2, 
{\b XC_based_arrow_down} =  4, 
{\b XC_based_arrow_up} =  6, 
{\b XC_boat} =  8, 
{\b XC_bogosity} =  10, 
{\b XC_bottom_left_corner} =  12, 
{\b XC_bottom_right_corner} =  14, 
{\b XC_bottom_side} =  16, 
{\b XC_bottom_tee} =  18, 
{\b XC_box_spiral} =  20, 
{\b XC_center_ptr} =  22, 
{\b XC_circle} =  24, 
{\b XC_clock} =  26, 
{\b XC_coffee_mug} =  28, 
{\b XC_cross} =  30, 
{\b XC_cross_reverse} =  32, 
{\b XC_crosshair} =  34, 
{\b XC_diamond_cross} =  36, 
{\b XC_dot} =  38, 
{\b XC_dotbox} =  40, 
{\b XC_double_arrow} =  42, 
{\b XC_draft_large} =  44, 
{\b XC_draft_small} =  46, 
{\b XC_draped_box} =  48, 
{\b XC_exchange} =  50, 
{\b XC_fleur} =  52, 
{\b XC_gobbler} =  54, 
{\b XC_gumby} =  56, 
{\b XC_hand1} =  58, 
{\b XC_hand2} =  60, 
{\b XC_heart} =  62, 
{\b XC_icon} =  64, 
{\b XC_iron_cross} =  66, 
{\b XC_left_ptr} =  68, 
{\b XC_left_side} =  70, 
{\b XC_left_tee} =  72, 
{\b XC_left_button} =  74, 
{\b XC_ll_angle} =  76, 
{\b XC_lr_angle} =  78, 
{\b XC_man} =  80, 
{\b XC_middlebutton} =  82, 
{\b XC_mouse} =  84, 
{\b XC_pencil} =  86, 
{\b XC_pirate} =  88, 
{\b XC_plus} =  90, 
{\b XC_question_arrow} =  92, 
{\b XC_right_ptr} =  94, 
{\b XC_right_side} =  96, 
{\b XC_right_tee} =  98, 
{\b XC_rightbutton} =  100, 
{\b XC_rtl_logo} =  102, 
{\b XC_sailboat} =  104, 
{\b XC_sb_down_arrow} =  106, 
{\b XC_sb_h_double_arrow} =  108, 
{\b XC_sb_left_arrow} =  110, 
{\b XC_sb_right_arrow} =  112, 
{\b XC_sb_up_arrow} =  114, 
{\b XC_sb_v_double_arrow} =  116, 
{\b XC_sb_shuttle} =  118, 
{\b XC_sizing} =  120, 
{\b XC_spider} =  122, 
{\b XC_spraycan} =  124, 
{\b XC_star} =  126, 
{\b XC_target} =  128, 
{\b XC_tcross} =  130, 
{\b XC_top_left_arrow} =  132, 
{\b XC_top_left_corner} =  134, 
{\b XC_top_right_corner} =  136, 
{\b XC_top_side} =  138, 
{\b XC_top_tee} =  140, 
{\b XC_trek} =  142, 
{\b XC_ul_angle} =  144, 
{\b XC_umbrella} =  146, 
{\b XC_ur_angle} =  148, 
{\b XC_watch} =  150, 
{\b XC_xterm} =  152, 
{\b XC_num_glyphs} =  154
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SystrayRequest} \{ {\b SYSTEM_TRAY_REQUEST_DOCK} =  0, 
{\b SYSTEM_TRAY_BEGIN_MESSAGE} =  1, 
{\b SYSTEM_TRAY_CANCEL_MESSAGE} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XSizeHintsFlags} \{ {\b USPosition} =  (1 << 0), 
{\b USSize} =  (1 << 1), 
{\b PPosition} =  (1 << 2), 
{\b PSize} =  (1 << 3), 
{\b PMinSize} =  (1 << 4), 
{\b PMaxSize} =  (1 << 5), 
{\b PResizeInc} =  (1 << 6), 
{\b PAspect} =  (1 << 7), 
{\b PAllHints} =  (PPosition | PSize | PMinSize | PMaxSize | PResizeInc | PAspect), 
{\b PBaseSize} =  (1 << 8), 
{\b PWinGravity} =  (1 << 9)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XWMHintsFlags} \{ {\b InputHint} =  (1 << 0), 
{\b StateHint} =  (1 << 1), 
{\b IconPixmapHint} =  (1 << 2), 
{\b IconWindowHint} =  (1 << 3), 
{\b IconPositionHint} =  (1 << 4), 
{\b IconMaskHint} =  (1 << 5), 
{\b WindowGroupHint} =  (1 << 6), 
{\b AllHints} =  (InputHint | StateHint | IconPixmapHint | IconWindowHint | IconPositionHint | IconMaskHint | WindowGroupHint)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XInitialState} \{ {\b DontCareState} =  0, 
{\b NormalState} =  1, 
{\b ZoomState} =  2, 
{\b IconicState} =  3, 
{\b InactiveState} =  4
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XRequest} \{ {\b X_CreateWindow} =  1, 
{\b X_ChangeWindowAttributes} =  2, 
{\b X_GetWindowAttributes} =  3, 
{\b X_DestroyWindow} =  4, 
{\b X_DestroySubwindows} =  5, 
{\b X_ChangeSaveSet} =  6, 
{\b X_ReparentWindow} =  7, 
{\b X_MapWindow} =  8, 
{\b X_MapSubwindows} =  9, 
{\b X_UnmapWindow} =  10, 
{\b X_UnmapSubwindows} =  11, 
{\b X_ConfigureWindow} =  12, 
{\b X_CirculateWindow} =  13, 
{\b X_GetGeometry} =  14, 
{\b X_QueryTree} =  15, 
{\b X_InternAtom} =  16, 
{\b X_GetAtomName} =  17, 
{\b X_ChangeProperty} =  18, 
{\b X_DeleteProperty} =  19, 
{\b X_GetProperty} =  20, 
{\b X_ListProperties} =  21, 
{\b X_SetSelectionOwner} =  22, 
{\b X_GetSelectionOwner} =  23, 
{\b X_ConvertSelection} =  24, 
{\b X_SendEvent} =  25, 
{\b X_GrabPointer} =  26, 
{\b X_UngrabPointer} =  27, 
{\b X_GrabButton} =  28, 
{\b X_UngrabButton} =  29, 
{\b X_ChangeActivePointerGrab} =  30, 
{\b X_GrabKeyboard} =  31, 
{\b X_UngrabKeyboard} =  32, 
{\b X_GrabKey} =  33, 
{\b X_UngrabKey} =  34, 
{\b X_AllowEvents} =  35, 
{\b X_GrabServer} =  36, 
{\b X_UngrabServer} =  37, 
{\b X_QueryPointer} =  38, 
{\b X_GetMotionEvents} =  39, 
{\b X_TranslateCoords} =  40, 
{\b X_WarpPointer} =  41, 
{\b X_SetInputFocus} =  42, 
{\b X_GetInputFocus} =  43, 
{\b X_QueryKeymap} =  44, 
{\b X_OpenFont} =  45, 
{\b X_CloseFont} =  46, 
{\b X_QueryFont} =  47, 
{\b X_QueryTextExtents} =  48, 
{\b X_ListFonts} =  49, 
{\b X_ListFontsWithInfo} =  50, 
{\b X_SetFontPath} =  51, 
{\b X_GetFontPath} =  52, 
{\b X_CreatePixmap} =  53, 
{\b X_FreePixmap} =  54, 
{\b X_CreateGC} =  55, 
{\b X_ChangeGC} =  56, 
{\b X_CopyGC} =  57, 
{\b X_SetDashes} =  58, 
{\b X_SetClipRectangles} =  59, 
{\b X_FreeGC} =  60, 
{\b X_ClearArea} =  61, 
{\b X_CopyArea} =  62, 
{\b X_CopyPlane} =  63, 
{\b X_PolyPoint} =  64, 
{\b X_PolyLine} =  65, 
{\b X_PolySegment} =  66, 
{\b X_PolyRectangle} =  67, 
{\b X_PolyArc} =  68, 
{\b X_FillPoly} =  69, 
{\b X_PolyFillRectangle} =  70, 
{\b X_PolyFillArc} =  71, 
{\b X_PutImage} =  72, 
{\b X_GetImage} =  73, 
{\b X_PolyText8} =  74, 
{\b X_PolyText16} =  75, 
{\b X_ImageText8} =  76, 
{\b X_ImageText16} =  77, 
{\b X_CreateColormap} =  78, 
{\b X_FreeColormap} =  79, 
{\b X_CopyColormapAndFree} =  80, 
{\b X_InstallColormap} =  81, 
{\b X_UninstallColormap} =  82, 
{\b X_ListInstalledColormaps} =  83, 
{\b X_AllocColor} =  84, 
{\b X_AllocNamedColor} =  85, 
{\b X_AllocColorCells} =  86, 
{\b X_AllocColorPlanes} =  87, 
{\b X_FreeColors} =  88, 
{\b X_StoreColors} =  89, 
{\b X_StoreNamedColor} =  90, 
{\b X_QueryColors} =  91, 
{\b X_LookupColor} =  92, 
{\b X_CreateCursor} =  93, 
{\b X_CreateGlyphCursor} =  94, 
{\b X_FreeCursor} =  95, 
{\b X_RecolorCursor} =  96, 
{\b X_QueryBestSize} =  97, 
{\b X_QueryExtension} =  98, 
{\b X_ListExtensions} =  99, 
{\b X_ChangeKeyboardMapping} =  100, 
{\b X_GetKeyboardMapping} =  101, 
{\b X_ChangeKeyboardControl} =  102, 
{\b X_GetKeyboardControl} =  103, 
{\b X_Bell} =  104, 
{\b X_ChangePointerControl} =  105, 
{\b X_GetPointerControl} =  106, 
{\b X_SetScreenSaver} =  107, 
{\b X_GetScreenSaver} =  108, 
{\b X_ChangeHosts} =  109, 
{\b X_ListHosts} =  110, 
{\b X_SetAccessControl} =  111, 
{\b X_SetCloseDownMode} =  112, 
{\b X_KillClient} =  113, 
{\b X_RotateProperties} =  114, 
{\b X_ForceScreenSaver} =  115, 
{\b X_SetPointerMapping} =  116, 
{\b X_GetPointerMapping} =  117, 
{\b X_SetModifierMapping} =  118, 
{\b X_GetModifierMapping} =  119, 
{\b X_NoOperation} =  127
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XIMProperties} \{ {\b XIMPreeditArea} =  0x0001, 
{\b XIMPreeditCallbacks} =  0x0002, 
{\b XIMPreeditPosition} =  0x0004, 
{\b XIMPreeditNothing} =  0x0008, 
{\b XIMPreeditNone} =  0x0010, 
{\b XIMStatusArea} =  0x0100, 
{\b XIMStatusCallbacks} =  0x0200, 
{\b XIMStatusNothing} =  0x0400, 
{\b XIMStatusNone} =  0x0800
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b WindowType} \{ {\b Client} =  1, 
{\b Whole} =  2, 
{\b Both} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b XEmbedMessage} \{ {\b EmbeddedNotify} =  0, 
{\b WindowActivate} =  1, 
{\b WindowDeactivate} =  2, 
{\b RequestFocus} =  3, 
{\b FocusIn} =  4, 
{\b FocusOut} =  5, 
{\b FocusNext} =  6, 
{\b FocusPrev} =  7, 
{\b ModalityOn} =  10, 
{\b ModalityOff} =  11, 
{\b RegisterAccelerator} =  12, 
{\b UnregisterAccelerator} =  13, 
{\b ActivateAccelerator} =  14
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal delegate int {\b XErrorHandler} (IntPtr DisplayHandle, ref {\b XErrorEvent} error_event)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Atom\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Atom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::Atom}}
}\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v AnyPropertyType\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:AnyPropertyType}
{\b {\i AnyPropertyType{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_PRIMARY\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_PRIMARY}
{\b {\i XA_PRIMARY{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_SECONDARY\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_SECONDARY}
{\b {\i XA_SECONDARY{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_ARC\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_ARC}
{\b {\i XA_ARC{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_ATOM\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_ATOM}
{\b {\i XA_ATOM{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_BITMAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_BITMAP}
{\b {\i XA_BITMAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CARDINAL\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CARDINAL}
{\b {\i XA_CARDINAL{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_COLORMAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_COLORMAP}
{\b {\i XA_COLORMAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CURSOR\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CURSOR}
{\b {\i XA_CURSOR{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER0\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER0}
{\b {\i XA_CUT_BUFFER0{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER1}
{\b {\i XA_CUT_BUFFER1{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER2}
{\b {\i XA_CUT_BUFFER2{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER3\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER3}
{\b {\i XA_CUT_BUFFER3{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER4\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER4}
{\b {\i XA_CUT_BUFFER4{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER5\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER5}
{\b {\i XA_CUT_BUFFER5{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER6\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER6}
{\b {\i XA_CUT_BUFFER6{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CUT_BUFFER7\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CUT_BUFFER7}
{\b {\i XA_CUT_BUFFER7{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_DRAWABLE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_DRAWABLE}
{\b {\i XA_DRAWABLE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_FONT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_FONT}
{\b {\i XA_FONT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_INTEGER\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_INTEGER}
{\b {\i XA_INTEGER{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_PIXMAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_PIXMAP}
{\b {\i XA_PIXMAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_POINT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_POINT}
{\b {\i XA_POINT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RECTANGLE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RECTANGLE}
{\b {\i XA_RECTANGLE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RESOURCE_MANAGER\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RESOURCE_MANAGER}
{\b {\i XA_RESOURCE_MANAGER{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RGB_COLOR_MAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RGB_COLOR_MAP}
{\b {\i XA_RGB_COLOR_MAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RGB_BEST_MAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RGB_BEST_MAP}
{\b {\i XA_RGB_BEST_MAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RGB_BLUE_MAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RGB_BLUE_MAP}
{\b {\i XA_RGB_BLUE_MAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RGB_DEFAULT_MAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RGB_DEFAULT_MAP}
{\b {\i XA_RGB_DEFAULT_MAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RGB_GRAY_MAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RGB_GRAY_MAP}
{\b {\i XA_RGB_GRAY_MAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RGB_GREEN_MAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RGB_GREEN_MAP}
{\b {\i XA_RGB_GREEN_MAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RGB_RED_MAP\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RGB_RED_MAP}
{\b {\i XA_RGB_RED_MAP{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_STRING\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_STRING}
{\b {\i XA_STRING{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_VISUALID\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_VISUALID}
{\b {\i XA_VISUALID{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WINDOW\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WINDOW}
{\b {\i XA_WINDOW{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_COMMAND\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_COMMAND}
{\b {\i XA_WM_COMMAND{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_HINTS\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_HINTS}
{\b {\i XA_WM_HINTS{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_CLIENT_MACHINE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_CLIENT_MACHINE}
{\b {\i XA_WM_CLIENT_MACHINE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_ICON_NAME\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_ICON_NAME}
{\b {\i XA_WM_ICON_NAME{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_ICON_SIZE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_ICON_SIZE}
{\b {\i XA_WM_ICON_SIZE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_NAME\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_NAME}
{\b {\i XA_WM_NAME{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_NORMAL_HINTS\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_NORMAL_HINTS}
{\b {\i XA_WM_NORMAL_HINTS{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_SIZE_HINTS\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_SIZE_HINTS}
{\b {\i XA_WM_SIZE_HINTS{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_ZOOM_HINTS\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_ZOOM_HINTS}
{\b {\i XA_WM_ZOOM_HINTS{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_MIN_SPACE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_MIN_SPACE}
{\b {\i XA_MIN_SPACE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_NORM_SPACE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_NORM_SPACE}
{\b {\i XA_NORM_SPACE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_MAX_SPACE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_MAX_SPACE}
{\b {\i XA_MAX_SPACE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_END_SPACE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_END_SPACE}
{\b {\i XA_END_SPACE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_SUPERSCRIPT_X\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_SUPERSCRIPT_X}
{\b {\i XA_SUPERSCRIPT_X{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_SUPERSCRIPT_Y\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_SUPERSCRIPT_Y}
{\b {\i XA_SUPERSCRIPT_Y{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_SUBSCRIPT_X\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_SUBSCRIPT_X}
{\b {\i XA_SUBSCRIPT_X{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_SUBSCRIPT_Y\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_SUBSCRIPT_Y}
{\b {\i XA_SUBSCRIPT_Y{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_UNDERLINE_POSITION\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_UNDERLINE_POSITION}
{\b {\i XA_UNDERLINE_POSITION{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_UNDERLINE_THICKNESS\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_UNDERLINE_THICKNESS}
{\b {\i XA_UNDERLINE_THICKNESS{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_STRIKEOUT_ASCENT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_STRIKEOUT_ASCENT}
{\b {\i XA_STRIKEOUT_ASCENT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_STRIKEOUT_DESCENT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_STRIKEOUT_DESCENT}
{\b {\i XA_STRIKEOUT_DESCENT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_ITALIC_ANGLE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_ITALIC_ANGLE}
{\b {\i XA_ITALIC_ANGLE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_X_HEIGHT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_X_HEIGHT}
{\b {\i XA_X_HEIGHT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_QUAD_WIDTH\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_QUAD_WIDTH}
{\b {\i XA_QUAD_WIDTH{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WEIGHT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WEIGHT}
{\b {\i XA_WEIGHT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_POINT_SIZE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_POINT_SIZE}
{\b {\i XA_POINT_SIZE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_RESOLUTION\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_RESOLUTION}
{\b {\i XA_RESOLUTION{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_COPYRIGHT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_COPYRIGHT}
{\b {\i XA_COPYRIGHT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_NOTICE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_NOTICE}
{\b {\i XA_NOTICE{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_FONT_NAME\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_FONT_NAME}
{\b {\i XA_FONT_NAME{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_FAMILY_NAME\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_FAMILY_NAME}
{\b {\i XA_FAMILY_NAME{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_FULL_NAME\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_FULL_NAME}
{\b {\i XA_FULL_NAME{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_CAP_HEIGHT\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_CAP_HEIGHT}
{\b {\i XA_CAP_HEIGHT{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_CLASS\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_CLASS}
{\b {\i XA_WM_CLASS{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_WM_TRANSIENT_FOR\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_WM_TRANSIENT_FOR}
{\b {\i XA_WM_TRANSIENT_FOR{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
{\xe \v XA_LAST_PREDEFINED\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XA_LAST_PREDEFINED}
{\b {\i XA_LAST_PREDEFINED{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
}}  \par
}
}
{\xe \v ChangeWindowFlags\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ChangeWindowFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::ChangeWindowFlags}}
}\par
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v CWX\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWX}
{\b {\i CWX{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
}}  \par
{\xe \v CWY\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWY}
{\b {\i CWY{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
}}  \par
{\xe \v CWWidth\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWWidth}
{\b {\i CWWidth{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
}}  \par
{\xe \v CWHeight\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWHeight}
{\b {\i CWHeight{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
}}  \par
{\xe \v CWBorderWidth\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBorderWidth}
{\b {\i CWBorderWidth{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
}}  \par
{\xe \v CWSibling\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWSibling}
{\b {\i CWSibling{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
}}  \par
{\xe \v CWStackMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWStackMode}
{\b {\i CWStackMode{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
}}  \par
}
}
{\xe \v ColorFlags\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ColorFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::ColorFlags}}
}\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v DoRed\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:DoRed}
{\b {\i DoRed{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
}}  \par
{\xe \v DoGreen\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:DoGreen}
{\b {\i DoGreen{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
}}  \par
{\xe \v DoBlue\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:DoBlue}
{\b {\i DoBlue{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
}}  \par
}
}
{\xe \v CreateWindowArgs\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CreateWindowArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::CreateWindowArgs}}
}\par
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v CopyFromParent\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CopyFromParent}
{\b {\i CopyFromParent{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
}}  \par
{\xe \v ParentRelative\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ParentRelative}
{\b {\i ParentRelative{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
}}  \par
{\xe \v InputOutput\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:InputOutput}
{\b {\i InputOutput{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
}}  \par
{\xe \v InputOnly\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:InputOnly}
{\b {\i InputOnly{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
}}  \par
}
}
{\xe \v CreateWindowMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CreateWindowMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::CreateWindowMask}}
}\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v CWBackPixmap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBackPixmap}
{\b {\i CWBackPixmap{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWBackPixel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBackPixel}
{\b {\i CWBackPixel{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWSaveUnder\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWSaveUnder}
{\b {\i CWSaveUnder{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWEventMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWEventMask}
{\b {\i CWEventMask{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWDontPropagate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWDontPropagate}
{\b {\i CWDontPropagate{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWColormap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWColormap}
{\b {\i CWColormap{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWCursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWCursor}
{\b {\i CWCursor{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWBorderPixmap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBorderPixmap}
{\b {\i CWBorderPixmap{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWBorderPixel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBorderPixel}
{\b {\i CWBorderPixel{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWBitGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBitGravity}
{\b {\i CWBitGravity{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWWinGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWWinGravity}
{\b {\i CWWinGravity{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWBackingStore\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBackingStore}
{\b {\i CWBackingStore{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWBackingPlanes\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBackingPlanes}
{\b {\i CWBackingPlanes{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWBackingPixel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWBackingPixel}
{\b {\i CWBackingPixel{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
{\xe \v CWOverrideRedirect\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CWOverrideRedirect}
{\b {\i CWOverrideRedirect{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
}}  \par
}
}
{\xe \v CursorFontShape\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CursorFontShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::CursorFontShape}}
}\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XC_X_cursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_X_cursor}
{\b {\i XC_X_cursor{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_arrow}
{\b {\i XC_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_based_arrow_down\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_based_arrow_down}
{\b {\i XC_based_arrow_down{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_based_arrow_up\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_based_arrow_up}
{\b {\i XC_based_arrow_up{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_boat\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_boat}
{\b {\i XC_boat{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_bogosity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_bogosity}
{\b {\i XC_bogosity{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_bottom_left_corner\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_bottom_left_corner}
{\b {\i XC_bottom_left_corner{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_bottom_right_corner\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_bottom_right_corner}
{\b {\i XC_bottom_right_corner{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_bottom_side\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_bottom_side}
{\b {\i XC_bottom_side{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_bottom_tee\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_bottom_tee}
{\b {\i XC_bottom_tee{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_box_spiral\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_box_spiral}
{\b {\i XC_box_spiral{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_center_ptr\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_center_ptr}
{\b {\i XC_center_ptr{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_circle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_circle}
{\b {\i XC_circle{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_clock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_clock}
{\b {\i XC_clock{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_coffee_mug\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_coffee_mug}
{\b {\i XC_coffee_mug{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_cross\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_cross}
{\b {\i XC_cross{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_cross_reverse\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_cross_reverse}
{\b {\i XC_cross_reverse{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_crosshair\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_crosshair}
{\b {\i XC_crosshair{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_diamond_cross\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_diamond_cross}
{\b {\i XC_diamond_cross{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_dot\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_dot}
{\b {\i XC_dot{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_dotbox\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_dotbox}
{\b {\i XC_dotbox{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_double_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_double_arrow}
{\b {\i XC_double_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_draft_large\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_draft_large}
{\b {\i XC_draft_large{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_draft_small\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_draft_small}
{\b {\i XC_draft_small{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_draped_box\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_draped_box}
{\b {\i XC_draped_box{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_exchange\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_exchange}
{\b {\i XC_exchange{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_fleur\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_fleur}
{\b {\i XC_fleur{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_gobbler\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_gobbler}
{\b {\i XC_gobbler{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_gumby\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_gumby}
{\b {\i XC_gumby{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_hand1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_hand1}
{\b {\i XC_hand1{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_hand2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_hand2}
{\b {\i XC_hand2{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_heart\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_heart}
{\b {\i XC_heart{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_icon\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_icon}
{\b {\i XC_icon{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_iron_cross\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_iron_cross}
{\b {\i XC_iron_cross{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_left_ptr\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_left_ptr}
{\b {\i XC_left_ptr{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_left_side\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_left_side}
{\b {\i XC_left_side{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_left_tee\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_left_tee}
{\b {\i XC_left_tee{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_left_button\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_left_button}
{\b {\i XC_left_button{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_ll_angle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_ll_angle}
{\b {\i XC_ll_angle{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_lr_angle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_lr_angle}
{\b {\i XC_lr_angle{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_man\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_man}
{\b {\i XC_man{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_middlebutton\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_middlebutton}
{\b {\i XC_middlebutton{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_mouse\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_mouse}
{\b {\i XC_mouse{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_pencil\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_pencil}
{\b {\i XC_pencil{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_pirate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_pirate}
{\b {\i XC_pirate{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_plus\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_plus}
{\b {\i XC_plus{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_question_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_question_arrow}
{\b {\i XC_question_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_right_ptr\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_right_ptr}
{\b {\i XC_right_ptr{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_right_side\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_right_side}
{\b {\i XC_right_side{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_right_tee\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_right_tee}
{\b {\i XC_right_tee{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_rightbutton\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_rightbutton}
{\b {\i XC_rightbutton{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_rtl_logo\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_rtl_logo}
{\b {\i XC_rtl_logo{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sailboat\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sailboat}
{\b {\i XC_sailboat{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sb_down_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sb_down_arrow}
{\b {\i XC_sb_down_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sb_h_double_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sb_h_double_arrow}
{\b {\i XC_sb_h_double_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sb_left_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sb_left_arrow}
{\b {\i XC_sb_left_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sb_right_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sb_right_arrow}
{\b {\i XC_sb_right_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sb_up_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sb_up_arrow}
{\b {\i XC_sb_up_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sb_v_double_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sb_v_double_arrow}
{\b {\i XC_sb_v_double_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sb_shuttle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sb_shuttle}
{\b {\i XC_sb_shuttle{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_sizing\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_sizing}
{\b {\i XC_sizing{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_spider\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_spider}
{\b {\i XC_spider{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_spraycan\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_spraycan}
{\b {\i XC_spraycan{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_star\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_star}
{\b {\i XC_star{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_target\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_target}
{\b {\i XC_target{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_tcross\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_tcross}
{\b {\i XC_tcross{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_top_left_arrow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_top_left_arrow}
{\b {\i XC_top_left_arrow{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_top_left_corner\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_top_left_corner}
{\b {\i XC_top_left_corner{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_top_right_corner\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_top_right_corner}
{\b {\i XC_top_right_corner{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_top_side\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_top_side}
{\b {\i XC_top_side{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_top_tee\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_top_tee}
{\b {\i XC_top_tee{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_trek\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_trek}
{\b {\i XC_trek{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_ul_angle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_ul_angle}
{\b {\i XC_ul_angle{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_umbrella\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_umbrella}
{\b {\i XC_umbrella{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_ur_angle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_ur_angle}
{\b {\i XC_ur_angle{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_watch\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_watch}
{\b {\i XC_watch{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_xterm\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_xterm}
{\b {\i XC_xterm{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
{\xe \v XC_num_glyphs\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XC_num_glyphs}
{\b {\i XC_num_glyphs{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
}}  \par
}
}
{\xe \v ErrorCodes\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ErrorCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::ErrorCodes}}
}\par
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Success\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Success}
{\b {\i Success{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadRequest}
{\b {\i BadRequest{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadValue\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadValue}
{\b {\i BadValue{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadWindow}
{\b {\i BadWindow{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadPixmap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadPixmap}
{\b {\i BadPixmap{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadAtom\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadAtom}
{\b {\i BadAtom{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadCursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadCursor}
{\b {\i BadCursor{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadFont\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadFont}
{\b {\i BadFont{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadMatch\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadMatch}
{\b {\i BadMatch{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadDrawable\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadDrawable}
{\b {\i BadDrawable{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadAccess\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadAccess}
{\b {\i BadAccess{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadAlloc\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadAlloc}
{\b {\i BadAlloc{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadColor}
{\b {\i BadColor{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadGC\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadGC}
{\b {\i BadGC{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadIDChoice\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadIDChoice}
{\b {\i BadIDChoice{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadName\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadName}
{\b {\i BadName{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadLength\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadLength}
{\b {\i BadLength{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
{\xe \v BadImplementation\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BadImplementation}
{\b {\i BadImplementation{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
}}  \par
}
}
{\xe \v EventMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:EventMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::EventMask}}
}\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v NoEventMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NoEventMask}
{\b {\i NoEventMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v KeyPressMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KeyPressMask}
{\b {\i KeyPressMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v KeyReleaseMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KeyReleaseMask}
{\b {\i KeyReleaseMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v ButtonPressMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ButtonPressMask}
{\b {\i ButtonPressMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v ButtonReleaseMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ButtonReleaseMask}
{\b {\i ButtonReleaseMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v EnterWindowMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:EnterWindowMask}
{\b {\i EnterWindowMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v LeaveWindowMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:LeaveWindowMask}
{\b {\i LeaveWindowMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v PointerMotionMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PointerMotionMask}
{\b {\i PointerMotionMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v PointerMotionHintMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PointerMotionHintMask}
{\b {\i PointerMotionHintMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v Button1MotionMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Button1MotionMask}
{\b {\i Button1MotionMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v Button2MotionMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Button2MotionMask}
{\b {\i Button2MotionMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v Button3MotionMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Button3MotionMask}
{\b {\i Button3MotionMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v Button4MotionMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Button4MotionMask}
{\b {\i Button4MotionMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v Button5MotionMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Button5MotionMask}
{\b {\i Button5MotionMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v ButtonMotionMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ButtonMotionMask}
{\b {\i ButtonMotionMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v KeymapStateMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KeymapStateMask}
{\b {\i KeymapStateMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v ExposureMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ExposureMask}
{\b {\i ExposureMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v VisibilityChangeMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:VisibilityChangeMask}
{\b {\i VisibilityChangeMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v StructureNotifyMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:StructureNotifyMask}
{\b {\i StructureNotifyMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v ResizeRedirectMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ResizeRedirectMask}
{\b {\i ResizeRedirectMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v SubstructureNotifyMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SubstructureNotifyMask}
{\b {\i SubstructureNotifyMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v SubstructureRedirectMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SubstructureRedirectMask}
{\b {\i SubstructureRedirectMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v FocusChangeMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FocusChangeMask}
{\b {\i FocusChangeMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v PropertyChangeMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PropertyChangeMask}
{\b {\i PropertyChangeMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v ColormapChangeMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ColormapChangeMask}
{\b {\i ColormapChangeMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
{\xe \v OwnerGrabButtonMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:OwnerGrabButtonMask}
{\b {\i OwnerGrabButtonMask{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
}}  \par
}
}
{\xe \v GCArcMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCArcMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCArcMode}}
}\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v ArcChord\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ArcChord}
{\b {\i ArcChord{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
}}  \par
{\xe \v ArcPieSlice\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ArcPieSlice}
{\b {\i ArcPieSlice{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
}}  \par
}
}
{\xe \v GCCapStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCCapStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCCapStyle}}
}\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v CapNotLast\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CapNotLast}
{\b {\i CapNotLast{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
}}  \par
{\xe \v CapButt\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CapButt}
{\b {\i CapButt{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
}}  \par
{\xe \v CapRound\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CapRound}
{\b {\i CapRound{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
}}  \par
{\xe \v CapProjecting\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CapProjecting}
{\b {\i CapProjecting{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
}}  \par
}
}
{\xe \v GCFillRule\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCFillRule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCFillRule}}
}\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v EvenOddRule\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:EvenOddRule}
{\b {\i EvenOddRule{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
}}  \par
{\xe \v WindingRule\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:WindingRule}
{\b {\i WindingRule{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
}}  \par
}
}
{\xe \v GCFillStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCFillStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCFillStyle}}
}\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v FillSolid\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FillSolid}
{\b {\i FillSolid{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
}}  \par
{\xe \v FillTiled\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FillTiled}
{\b {\i FillTiled{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
}}  \par
{\xe \v FillStippled\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FillStippled}
{\b {\i FillStippled{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
}}  \par
{\xe \v FillOpaqueStppled\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FillOpaqueStppled}
{\b {\i FillOpaqueStppled{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
}}  \par
}
}
{\xe \v GCFunction\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCFunction}}
}\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v GCFunction\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCFunction}
{\b {\i GCFunction{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCPlaneMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCPlaneMask}
{\b {\i GCPlaneMask{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCForeground\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCForeground}
{\b {\i GCForeground{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCBackground\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCBackground}
{\b {\i GCBackground{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCLineWidth\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCLineWidth}
{\b {\i GCLineWidth{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCLineStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCLineStyle}
{\b {\i GCLineStyle{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCCapStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCCapStyle}
{\b {\i GCCapStyle{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCJoinStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCJoinStyle}
{\b {\i GCJoinStyle{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCFillStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCFillStyle}
{\b {\i GCFillStyle{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCFillRule\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCFillRule}
{\b {\i GCFillRule{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCTile\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCTile}
{\b {\i GCTile{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCStipple\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCStipple}
{\b {\i GCStipple{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCTileStipXOrigin\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCTileStipXOrigin}
{\b {\i GCTileStipXOrigin{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCTileStipYOrigin\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCTileStipYOrigin}
{\b {\i GCTileStipYOrigin{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCFont\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCFont}
{\b {\i GCFont{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCSubwindowMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCSubwindowMode}
{\b {\i GCSubwindowMode{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCGraphicsExposures\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCGraphicsExposures}
{\b {\i GCGraphicsExposures{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCClipXOrigin\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCClipXOrigin}
{\b {\i GCClipXOrigin{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCClipYOrigin\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCClipYOrigin}
{\b {\i GCClipYOrigin{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCClipMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCClipMask}
{\b {\i GCClipMask{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCDashOffset\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCDashOffset}
{\b {\i GCDashOffset{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCDashList\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCDashList}
{\b {\i GCDashList{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
{\xe \v GCArcMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCArcMode}
{\b {\i GCArcMode{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
}}  \par
}
}
{\xe \v GCJoinStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCJoinStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCJoinStyle}}
}\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v JoinMiter\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:JoinMiter}
{\b {\i JoinMiter{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
}}  \par
{\xe \v JoinRound\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:JoinRound}
{\b {\i JoinRound{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
}}  \par
{\xe \v JoinBevel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:JoinBevel}
{\b {\i JoinBevel{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
}}  \par
}
}
{\xe \v GCLineStyle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCLineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCLineStyle}}
}\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LineSolid\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:LineSolid}
{\b {\i LineSolid{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
}}  \par
{\xe \v LineOnOffDash\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:LineOnOffDash}
{\b {\i LineOnOffDash{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
}}  \par
{\xe \v LineDoubleDash\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:LineDoubleDash}
{\b {\i LineDoubleDash{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
}}  \par
}
}
{\xe \v GCSubwindowMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GCSubwindowMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GCSubwindowMode}}
}\par
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v ClipByChildren\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ClipByChildren}
{\b {\i ClipByChildren{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
}}  \par
{\xe \v IncludeInferiors\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IncludeInferiors}
{\b {\i IncludeInferiors{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
}}  \par
}
}
{\xe \v GrabMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GrabMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GrabMode}}
}\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v GrabModeSync\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GrabModeSync}
{\b {\i GrabModeSync{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
}}  \par
{\xe \v GrabModeAsync\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GrabModeAsync}
{\b {\i GrabModeAsync{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
}}  \par
}
}
{\xe \v Gravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Gravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::Gravity}}
}\par
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v ForgetGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ForgetGravity}
{\b {\i ForgetGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v NorthWestGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NorthWestGravity}
{\b {\i NorthWestGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v NorthGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NorthGravity}
{\b {\i NorthGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v NorthEastGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NorthEastGravity}
{\b {\i NorthEastGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v WestGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:WestGravity}
{\b {\i WestGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v CenterGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CenterGravity}
{\b {\i CenterGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v EastGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:EastGravity}
{\b {\i EastGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v SouthWestGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SouthWestGravity}
{\b {\i SouthWestGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v SouthGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SouthGravity}
{\b {\i SouthGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v SouthEastGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SouthEastGravity}
{\b {\i SouthEastGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
{\xe \v StaticGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:StaticGravity}
{\b {\i StaticGravity{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
}}  \par
}
}
{\xe \v GXFunction\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::GXFunction}}
}\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v GXclear\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXclear}
{\b {\i GXclear{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXand\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXand}
{\b {\i GXand{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXandReverse\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXandReverse}
{\b {\i GXandReverse{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXcopy\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXcopy}
{\b {\i GXcopy{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXandInverted\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXandInverted}
{\b {\i GXandInverted{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXnoop\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXnoop}
{\b {\i GXnoop{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXxor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXxor}
{\b {\i GXxor{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXor}
{\b {\i GXor{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXnor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXnor}
{\b {\i GXnor{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXequiv\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXequiv}
{\b {\i GXequiv{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXinvert\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXinvert}
{\b {\i GXinvert{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXorReverse\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXorReverse}
{\b {\i GXorReverse{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXcopyInverted\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXcopyInverted}
{\b {\i GXcopyInverted{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXorInverted\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXorInverted}
{\b {\i GXorInverted{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXnand\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXnand}
{\b {\i GXnand{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
{\xe \v GXset\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GXset}
{\b {\i GXset{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
}}  \par
}
}
{\xe \v KeyMasks\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KeyMasks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::KeyMasks}}
}\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v ShiftMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ShiftMask}
{\b {\i ShiftMask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v LockMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:LockMask}
{\b {\i LockMask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v ControlMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ControlMask}
{\b {\i ControlMask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v Mod1Mask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Mod1Mask}
{\b {\i Mod1Mask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v Mod2Mask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Mod2Mask}
{\b {\i Mod2Mask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v Mod3Mask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Mod3Mask}
{\b {\i Mod3Mask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v Mod4Mask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Mod4Mask}
{\b {\i Mod4Mask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v Mod5Mask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Mod5Mask}
{\b {\i Mod5Mask{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
{\xe \v ModMasks\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ModMasks}
{\b {\i ModMasks{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
}}  \par
}
}
{\xe \v MapState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MapState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::MapState}}
}\par
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v IsUnmapped\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IsUnmapped}
{\b {\i IsUnmapped{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
}}  \par
{\xe \v IsUnviewable\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IsUnviewable}
{\b {\i IsUnviewable{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
}}  \par
{\xe \v IsViewable\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IsViewable}
{\b {\i IsViewable{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
}}  \par
}
}
{\xe \v MotifDecorations\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MotifDecorations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::MotifDecorations}}
}\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v All\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:All}
{\b {\i All{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
}}  \par
{\xe \v Border\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Border}
{\b {\i Border{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
}}  \par
{\xe \v ResizeH\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ResizeH}
{\b {\i ResizeH{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
}}  \par
{\xe \v Title\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Title}
{\b {\i Title{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
}}  \par
{\xe \v Menu\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Menu}
{\b {\i Menu{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
}}  \par
{\xe \v Minimize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Minimize}
{\b {\i Minimize{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
}}  \par
{\xe \v Maximize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Maximize}
{\b {\i Maximize{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
}}  \par
}
}
{\xe \v MotifFlags\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MotifFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::MotifFlags}}
}\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Functions\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Functions}
{\b {\i Functions{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
}}  \par
{\xe \v Decorations\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Decorations}
{\b {\i Decorations{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
}}  \par
{\xe \v InputMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:InputMode}
{\b {\i InputMode{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
}}  \par
{\xe \v Status\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Status}
{\b {\i Status{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
}}  \par
}
}
{\xe \v MotifFunctions\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MotifFunctions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::MotifFunctions}}
}\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v All\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:All}
{\b {\i All{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
}}  \par
{\xe \v Resize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Resize}
{\b {\i Resize{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
}}  \par
{\xe \v Move\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Move}
{\b {\i Move{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
}}  \par
{\xe \v Minimize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Minimize}
{\b {\i Minimize{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
}}  \par
{\xe \v Maximize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Maximize}
{\b {\i Maximize{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
}}  \par
{\xe \v Close\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Close}
{\b {\i Close{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
}}  \par
}
}
{\xe \v MotifInputMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MotifInputMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::MotifInputMode}}
}\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Modeless\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Modeless}
{\b {\i Modeless{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
}}  \par
{\xe \v ApplicationModal\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ApplicationModal}
{\b {\i ApplicationModal{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
}}  \par
{\xe \v SystemModal\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SystemModal}
{\b {\i SystemModal{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
}}  \par
{\xe \v FullApplicationModal\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FullApplicationModal}
{\b {\i FullApplicationModal{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
}}  \par
}
}
{\xe \v NetWindowManagerState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NetWindowManagerState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::NetWindowManagerState}}
}\par
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Remove\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Remove}
{\b {\i Remove{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
}}  \par
{\xe \v Add\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Add}
{\b {\i Add{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
}}  \par
{\xe \v Toggle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Toggle}
{\b {\i Toggle{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
}}  \par
}
}
{\xe \v NotifyDetail\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyDetail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::NotifyDetail}}
}\par
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v NotifyAncestor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyAncestor}
{\b {\i NotifyAncestor{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
{\xe \v NotifyVirtual\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyVirtual}
{\b {\i NotifyVirtual{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
{\xe \v NotifyInferior\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyInferior}
{\b {\i NotifyInferior{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
{\xe \v NotifyNonlinear\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyNonlinear}
{\b {\i NotifyNonlinear{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
{\xe \v NotifyNonlinearVirtual\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyNonlinearVirtual}
{\b {\i NotifyNonlinearVirtual{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
{\xe \v NotifyPointer\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyPointer}
{\b {\i NotifyPointer{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
{\xe \v NotifyPointerRoot\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyPointerRoot}
{\b {\i NotifyPointerRoot{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
{\xe \v NotifyDetailNone\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyDetailNone}
{\b {\i NotifyDetailNone{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
}}  \par
}
}
{\xe \v NotifyMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::NotifyMode}}
}\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v NotifyNormal\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyNormal}
{\b {\i NotifyNormal{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
}}  \par
{\xe \v NotifyGrab\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyGrab}
{\b {\i NotifyGrab{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
}}  \par
{\xe \v NotifyUngrab\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NotifyUngrab}
{\b {\i NotifyUngrab{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
}}  \par
}
}
{\xe \v PropertyMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PropertyMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::PropertyMode}}
}\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Replace\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Replace}
{\b {\i Replace{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
}}  \par
{\xe \v Prepend\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Prepend}
{\b {\i Prepend{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
}}  \par
{\xe \v Append\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Append}
{\b {\i Append{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
}}  \par
}
}
{\xe \v RevertTo\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:RevertTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::RevertTo}}
}\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v None\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:None}
{\b {\i None{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
}}  \par
{\xe \v PointerRoot\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PointerRoot}
{\b {\i PointerRoot{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
}}  \par
{\xe \v Parent\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Parent}
{\b {\i Parent{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
}}  \par
}
}
{\xe \v SetWindowValuemask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SetWindowValuemask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::SetWindowValuemask}}
}\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Nothing\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Nothing}
{\b {\i Nothing{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BackPixmap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BackPixmap}
{\b {\i BackPixmap{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BackPixel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BackPixel}
{\b {\i BackPixel{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BorderPixmap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BorderPixmap}
{\b {\i BorderPixmap{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BorderPixel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BorderPixel}
{\b {\i BorderPixel{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BitGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BitGravity}
{\b {\i BitGravity{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v WinGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:WinGravity}
{\b {\i WinGravity{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BackingStore\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BackingStore}
{\b {\i BackingStore{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BackingPlanes\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BackingPlanes}
{\b {\i BackingPlanes{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v BackingPixel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BackingPixel}
{\b {\i BackingPixel{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v OverrideRedirect\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:OverrideRedirect}
{\b {\i OverrideRedirect{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v SaveUnder\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SaveUnder}
{\b {\i SaveUnder{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v EventMask\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:EventMask}
{\b {\i EventMask{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v DontPropagate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:DontPropagate}
{\b {\i DontPropagate{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v ColorMap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ColorMap}
{\b {\i ColorMap{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
{\xe \v Cursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Cursor}
{\b {\i Cursor{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
}}  \par
}
}
{\xe \v StackMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:StackMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::StackMode}}
}\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Above\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Above}
{\b {\i Above{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
}}  \par
{\xe \v Below\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Below}
{\b {\i Below{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
}}  \par
{\xe \v TopIf\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:TopIf}
{\b {\i TopIf{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
}}  \par
{\xe \v BottomIf\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BottomIf}
{\b {\i BottomIf{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
}}  \par
{\xe \v Opposite\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Opposite}
{\b {\i Opposite{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
}}  \par
}
}
{\xe \v SystrayRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SystrayRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::SystrayRequest}}
}\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v SYSTEM_TRAY_REQUEST_DOCK\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SYSTEM_TRAY_REQUEST_DOCK}
{\b {\i SYSTEM_TRAY_REQUEST_DOCK{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
}}  \par
{\xe \v SYSTEM_TRAY_BEGIN_MESSAGE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SYSTEM_TRAY_BEGIN_MESSAGE}
{\b {\i SYSTEM_TRAY_BEGIN_MESSAGE{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
}}  \par
{\xe \v SYSTEM_TRAY_CANCEL_MESSAGE\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SYSTEM_TRAY_CANCEL_MESSAGE}
{\b {\i SYSTEM_TRAY_CANCEL_MESSAGE{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
}}  \par
}
}
{\xe \v WindowType\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:WindowType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::WindowType}}
}\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Client\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Client}
{\b {\i Client{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
}}  \par
{\xe \v Whole\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Whole}
{\b {\i Whole{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
}}  \par
{\xe \v Both\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Both}
{\b {\i Both{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
}}  \par
}
}
{\xe \v XEmbedMessage\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XEmbedMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XEmbedMessage}}
}\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v EmbeddedNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:EmbeddedNotify}
{\b {\i EmbeddedNotify{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v WindowActivate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:WindowActivate}
{\b {\i WindowActivate{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v WindowDeactivate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:WindowDeactivate}
{\b {\i WindowDeactivate{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v RequestFocus\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:RequestFocus}
{\b {\i RequestFocus{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v FocusIn\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FocusIn}
{\b {\i FocusIn{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v FocusOut\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FocusOut}
{\b {\i FocusOut{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v FocusNext\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FocusNext}
{\b {\i FocusNext{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v FocusPrev\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FocusPrev}
{\b {\i FocusPrev{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v ModalityOn\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ModalityOn}
{\b {\i ModalityOn{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v ModalityOff\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ModalityOff}
{\b {\i ModalityOff{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v RegisterAccelerator\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:RegisterAccelerator}
{\b {\i RegisterAccelerator{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v UnregisterAccelerator\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:UnregisterAccelerator}
{\b {\i UnregisterAccelerator{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
{\xe \v ActivateAccelerator\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ActivateAccelerator}
{\b {\i ActivateAccelerator{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
}}  \par
}
}
{\xe \v XEventName\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XEventName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XEventName}}
}\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v KeyPress\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KeyPress}
{\b {\i KeyPress{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v KeyRelease\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KeyRelease}
{\b {\i KeyRelease{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ButtonPress\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ButtonPress}
{\b {\i ButtonPress{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ButtonRelease\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ButtonRelease}
{\b {\i ButtonRelease{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v MotionNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MotionNotify}
{\b {\i MotionNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v EnterNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:EnterNotify}
{\b {\i EnterNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v LeaveNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:LeaveNotify}
{\b {\i LeaveNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v FocusIn\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FocusIn}
{\b {\i FocusIn{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v FocusOut\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:FocusOut}
{\b {\i FocusOut{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v KeymapNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KeymapNotify}
{\b {\i KeymapNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v Expose\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Expose}
{\b {\i Expose{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v GraphicsExpose\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GraphicsExpose}
{\b {\i GraphicsExpose{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v NoExpose\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NoExpose}
{\b {\i NoExpose{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v VisibilityNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:VisibilityNotify}
{\b {\i VisibilityNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v CreateNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CreateNotify}
{\b {\i CreateNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v DestroyNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:DestroyNotify}
{\b {\i DestroyNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v UnmapNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:UnmapNotify}
{\b {\i UnmapNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v MapNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MapNotify}
{\b {\i MapNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v MapRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MapRequest}
{\b {\i MapRequest{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ReparentNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ReparentNotify}
{\b {\i ReparentNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ConfigureNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ConfigureNotify}
{\b {\i ConfigureNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ConfigureRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ConfigureRequest}
{\b {\i ConfigureRequest{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v GravityNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GravityNotify}
{\b {\i GravityNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ResizeRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ResizeRequest}
{\b {\i ResizeRequest{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v CirculateNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CirculateNotify}
{\b {\i CirculateNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v CirculateRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:CirculateRequest}
{\b {\i CirculateRequest{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v PropertyNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PropertyNotify}
{\b {\i PropertyNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v SelectionClear\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SelectionClear}
{\b {\i SelectionClear{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v SelectionRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SelectionRequest}
{\b {\i SelectionRequest{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v SelectionNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SelectionNotify}
{\b {\i SelectionNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ColormapNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ColormapNotify}
{\b {\i ColormapNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v ClientMessage\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ClientMessage}
{\b {\i ClientMessage{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v MappingNotify\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MappingNotify}
{\b {\i MappingNotify{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
{\xe \v LASTEvent\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:LASTEvent}
{\b {\i LASTEvent{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
}}  \par
}
}
{\xe \v XIMProperties\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XIMProperties}}
}\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XIMPreeditArea\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMPreeditArea}
{\b {\i XIMPreeditArea{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMPreeditCallbacks\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMPreeditCallbacks}
{\b {\i XIMPreeditCallbacks{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMPreeditPosition\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMPreeditPosition}
{\b {\i XIMPreeditPosition{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMPreeditNothing\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMPreeditNothing}
{\b {\i XIMPreeditNothing{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMPreeditNone\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMPreeditNone}
{\b {\i XIMPreeditNone{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMStatusArea\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMStatusArea}
{\b {\i XIMStatusArea{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMStatusCallbacks\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMStatusCallbacks}
{\b {\i XIMStatusCallbacks{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMStatusNothing\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMStatusNothing}
{\b {\i XIMStatusNothing{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
{\xe \v XIMStatusNone\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XIMStatusNone}
{\b {\i XIMStatusNone{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
}}  \par
}
}
{\xe \v XInitialState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XInitialState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XInitialState}}
}\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v DontCareState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:DontCareState}
{\b {\i DontCareState{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
}}  \par
{\xe \v NormalState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:NormalState}
{\b {\i NormalState{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
}}  \par
{\xe \v ZoomState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ZoomState}
{\b {\i ZoomState{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
}}  \par
{\xe \v IconicState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IconicState}
{\b {\i IconicState{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
}}  \par
{\xe \v InactiveState\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:InactiveState}
{\b {\i InactiveState{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
}}  \par
}
}
{\xe \v XKey\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XKey}}
}\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines LATIN-1 and miscellaneous keys. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v BackSpace\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:BackSpace}
{\b {\i BackSpace{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Tab\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Tab}
{\b {\i Tab{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Linefeed\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Linefeed}
{\b {\i Linefeed{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Clear\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Clear}
{\b {\i Clear{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Return\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Return}
{\b {\i Return{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Pause\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Pause}
{\b {\i Pause{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Scroll_Lock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Scroll_Lock}
{\b {\i Scroll_Lock{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Sys_Req\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Sys_Req}
{\b {\i Sys_Req{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Escape\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Escape}
{\b {\i Escape{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Delete\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Delete}
{\b {\i Delete{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Multi_key\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Multi_key}
{\b {\i Multi_key{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Codeinput\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Codeinput}
{\b {\i Codeinput{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v SingleCandidate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:SingleCandidate}
{\b {\i SingleCandidate{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v MultipleCandidate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:MultipleCandidate}
{\b {\i MultipleCandidate{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v PreviousCandidate\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PreviousCandidate}
{\b {\i PreviousCandidate{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Kanji\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Kanji}
{\b {\i Kanji{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Muhenkan\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Muhenkan}
{\b {\i Muhenkan{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Henkan_Mode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Henkan_Mode}
{\b {\i Henkan_Mode{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Henkan\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Henkan}
{\b {\i Henkan{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Romaji\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Romaji}
{\b {\i Romaji{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Hiragana\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Hiragana}
{\b {\i Hiragana{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Katakana\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Katakana}
{\b {\i Katakana{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Hiragana_Katakana\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Hiragana_Katakana}
{\b {\i Hiragana_Katakana{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Zenkaku\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Zenkaku}
{\b {\i Zenkaku{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Hankaku\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Hankaku}
{\b {\i Hankaku{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Zenkaku_Hankaku\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Zenkaku_Hankaku}
{\b {\i Zenkaku_Hankaku{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Touroku\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Touroku}
{\b {\i Touroku{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Massyo\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Massyo}
{\b {\i Massyo{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Kana_Lock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Kana_Lock}
{\b {\i Kana_Lock{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Kana_Shift\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Kana_Shift}
{\b {\i Kana_Shift{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Eisu_Shift\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Eisu_Shift}
{\b {\i Eisu_Shift{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Eisu_toggle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Eisu_toggle}
{\b {\i Eisu_toggle{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Kanji_Bangou\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Kanji_Bangou}
{\b {\i Kanji_Bangou{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Zen_Koho\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Zen_Koho}
{\b {\i Zen_Koho{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Mae_Koho\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Mae_Koho}
{\b {\i Mae_Koho{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Home\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Home}
{\b {\i Home{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Left\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Left}
{\b {\i Left{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Up\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Up}
{\b {\i Up{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Right\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Right}
{\b {\i Right{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Down\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Down}
{\b {\i Down{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Prior\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Prior}
{\b {\i Prior{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Page_Up\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Page_Up}
{\b {\i Page_Up{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Next\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Next}
{\b {\i Next{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Page_Down\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Page_Down}
{\b {\i Page_Down{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v End\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:End}
{\b {\i End{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Begin\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Begin}
{\b {\i Begin{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Select\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Select}
{\b {\i Select{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Print\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Print}
{\b {\i Print{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Execute\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Execute}
{\b {\i Execute{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Insert\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Insert}
{\b {\i Insert{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Undo\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Undo}
{\b {\i Undo{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Redo\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Redo}
{\b {\i Redo{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Menu\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Menu}
{\b {\i Menu{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Find\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Find}
{\b {\i Find{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Cancel\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Cancel}
{\b {\i Cancel{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Help\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Help}
{\b {\i Help{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Break\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Break}
{\b {\i Break{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Mode_switch\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Mode_switch}
{\b {\i Mode_switch{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v script_switch\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:script_switch}
{\b {\i script_switch{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Num_Lock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Num_Lock}
{\b {\i Num_Lock{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Space\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Space}
{\b {\i KP_Space{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Tab\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Tab}
{\b {\i KP_Tab{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Enter\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Enter}
{\b {\i KP_Enter{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_F1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_F1}
{\b {\i KP_F1{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_F2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_F2}
{\b {\i KP_F2{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_F3\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_F3}
{\b {\i KP_F3{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_F4\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_F4}
{\b {\i KP_F4{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Home\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Home}
{\b {\i KP_Home{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Left\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Left}
{\b {\i KP_Left{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Up\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Up}
{\b {\i KP_Up{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Right\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Right}
{\b {\i KP_Right{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Down\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Down}
{\b {\i KP_Down{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Prior\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Prior}
{\b {\i KP_Prior{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Page_Up\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Page_Up}
{\b {\i KP_Page_Up{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Next\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Next}
{\b {\i KP_Next{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Page_Down\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Page_Down}
{\b {\i KP_Page_Down{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_End\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_End}
{\b {\i KP_End{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Begin\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Begin}
{\b {\i KP_Begin{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Insert\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Insert}
{\b {\i KP_Insert{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Delete\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Delete}
{\b {\i KP_Delete{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Equal\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Equal}
{\b {\i KP_Equal{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Multiply\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Multiply}
{\b {\i KP_Multiply{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Add\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Add}
{\b {\i KP_Add{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Separator\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Separator}
{\b {\i KP_Separator{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Subtract\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Subtract}
{\b {\i KP_Subtract{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Decimal\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Decimal}
{\b {\i KP_Decimal{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_Divide\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_Divide}
{\b {\i KP_Divide{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_0\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_0}
{\b {\i KP_0{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_1}
{\b {\i KP_1{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_2}
{\b {\i KP_2{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_3\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_3}
{\b {\i KP_3{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_4\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_4}
{\b {\i KP_4{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_5\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_5}
{\b {\i KP_5{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_6\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_6}
{\b {\i KP_6{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_7\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_7}
{\b {\i KP_7{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_8\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_8}
{\b {\i KP_8{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v KP_9\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:KP_9}
{\b {\i KP_9{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F1}
{\b {\i F1{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F2}
{\b {\i F2{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F3\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F3}
{\b {\i F3{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F4\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F4}
{\b {\i F4{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F5\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F5}
{\b {\i F5{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F6\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F6}
{\b {\i F6{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F7\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F7}
{\b {\i F7{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F8\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F8}
{\b {\i F8{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F9\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F9}
{\b {\i F9{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F10\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F10}
{\b {\i F10{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F11\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F11}
{\b {\i F11{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L1}
{\b {\i L1{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F12\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F12}
{\b {\i F12{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L2}
{\b {\i L2{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F13\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F13}
{\b {\i F13{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L3\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L3}
{\b {\i L3{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F14\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F14}
{\b {\i F14{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L4\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L4}
{\b {\i L4{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F15\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F15}
{\b {\i F15{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L5\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L5}
{\b {\i L5{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F16\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F16}
{\b {\i F16{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L6\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L6}
{\b {\i L6{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F17\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F17}
{\b {\i F17{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L7\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L7}
{\b {\i L7{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F18\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F18}
{\b {\i F18{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L8\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L8}
{\b {\i L8{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F19\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F19}
{\b {\i F19{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L9\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L9}
{\b {\i L9{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F20\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F20}
{\b {\i F20{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L10\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L10}
{\b {\i L10{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F21\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F21}
{\b {\i F21{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R1}
{\b {\i R1{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F22\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F22}
{\b {\i F22{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R2}
{\b {\i R2{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F23\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F23}
{\b {\i F23{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R3\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R3}
{\b {\i R3{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F24\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F24}
{\b {\i F24{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R4\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R4}
{\b {\i R4{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F25\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F25}
{\b {\i F25{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R5\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R5}
{\b {\i R5{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F26\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F26}
{\b {\i F26{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R6\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R6}
{\b {\i R6{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F27\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F27}
{\b {\i F27{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R7\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R7}
{\b {\i R7{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F28\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F28}
{\b {\i F28{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R8\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R8}
{\b {\i R8{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F29\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F29}
{\b {\i F29{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R9\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R9}
{\b {\i R9{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F30\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F30}
{\b {\i F30{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R10\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R10}
{\b {\i R10{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F31\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F31}
{\b {\i F31{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R11\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R11}
{\b {\i R11{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F32\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F32}
{\b {\i F32{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R12\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R12}
{\b {\i R12{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F33\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F33}
{\b {\i F33{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R13\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R13}
{\b {\i R13{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F34\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F34}
{\b {\i F34{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R14\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R14}
{\b {\i R14{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F35\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F35}
{\b {\i F35{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R15\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R15}
{\b {\i R15{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Shift_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Shift_L}
{\b {\i Shift_L{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Shift_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Shift_R}
{\b {\i Shift_R{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Control_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Control_L}
{\b {\i Control_L{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Control_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Control_R}
{\b {\i Control_R{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Caps_Lock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Caps_Lock}
{\b {\i Caps_Lock{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Shift_Lock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Shift_Lock}
{\b {\i Shift_Lock{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Meta_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Meta_L}
{\b {\i Meta_L{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Meta_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Meta_R}
{\b {\i Meta_R{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Alt_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Alt_L}
{\b {\i Alt_L{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Alt_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Alt_R}
{\b {\i Alt_R{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Super_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Super_L}
{\b {\i Super_L{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Super_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Super_R}
{\b {\i Super_R{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Hyper_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Hyper_L}
{\b {\i Hyper_L{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Hyper_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Hyper_R}
{\b {\i Hyper_R{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v space\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:space}
{\b {\i space{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v exclam\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:exclam}
{\b {\i exclam{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v quotedbl\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:quotedbl}
{\b {\i quotedbl{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v numbersign\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:numbersign}
{\b {\i numbersign{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v dollar\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:dollar}
{\b {\i dollar{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v percent\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:percent}
{\b {\i percent{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v ampersand\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:ampersand}
{\b {\i ampersand{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v apostrophe\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:apostrophe}
{\b {\i apostrophe{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v quoteright\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:quoteright}
{\b {\i quoteright{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v parenleft\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:parenleft}
{\b {\i parenleft{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v parenright\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:parenright}
{\b {\i parenright{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v asterisk\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:asterisk}
{\b {\i asterisk{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v plus\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:plus}
{\b {\i plus{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v comma\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:comma}
{\b {\i comma{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v minus\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:minus}
{\b {\i minus{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v period\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:period}
{\b {\i period{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v slash\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:slash}
{\b {\i slash{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number0\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number0}
{\b {\i Number0{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number1\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number1}
{\b {\i Number1{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number2\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number2}
{\b {\i Number2{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number3\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number3}
{\b {\i Number3{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number4\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number4}
{\b {\i Number4{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number5\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number5}
{\b {\i Number5{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number6\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number6}
{\b {\i Number6{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number7\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number7}
{\b {\i Number7{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number8\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number8}
{\b {\i Number8{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Number9\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Number9}
{\b {\i Number9{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v colon\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:colon}
{\b {\i colon{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v semicolon\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:semicolon}
{\b {\i semicolon{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v less\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:less}
{\b {\i less{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v equal\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:equal}
{\b {\i equal{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v greater\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:greater}
{\b {\i greater{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v question\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:question}
{\b {\i question{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v at\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:at}
{\b {\i at{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v A\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:A}
{\b {\i A{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v B\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:B}
{\b {\i B{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v C\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:C}
{\b {\i C{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v D\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:D}
{\b {\i D{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v E\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:E}
{\b {\i E{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v F\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:F}
{\b {\i F{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v G\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:G}
{\b {\i G{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v H\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:H}
{\b {\i H{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v I\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:I}
{\b {\i I{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v J\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:J}
{\b {\i J{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v K\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:K}
{\b {\i K{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:L}
{\b {\i L{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v M\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:M}
{\b {\i M{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v N\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:N}
{\b {\i N{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v O\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:O}
{\b {\i O{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v P\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:P}
{\b {\i P{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Q\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Q}
{\b {\i Q{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:R}
{\b {\i R{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v S\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:S}
{\b {\i S{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v T\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:T}
{\b {\i T{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v U\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:U}
{\b {\i U{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v V\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:V}
{\b {\i V{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v W\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:W}
{\b {\i W{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v X\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X}
{\b {\i X{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Y\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Y}
{\b {\i Y{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v Z\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:Z}
{\b {\i Z{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v bracketleft\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:bracketleft}
{\b {\i bracketleft{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v backslash\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:backslash}
{\b {\i backslash{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v bracketright\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:bracketright}
{\b {\i bracketright{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v asciicircum\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:asciicircum}
{\b {\i asciicircum{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v underscore\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:underscore}
{\b {\i underscore{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v grave\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:grave}
{\b {\i grave{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v quoteleft\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:quoteleft}
{\b {\i quoteleft{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v a\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:a}
{\b {\i a{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v b\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:b}
{\b {\i b{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v c\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:c}
{\b {\i c{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v d\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:d}
{\b {\i d{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v e\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:e}
{\b {\i e{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v f\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:f}
{\b {\i f{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v g\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:g}
{\b {\i g{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v h\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:h}
{\b {\i h{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v i\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:i}
{\b {\i i{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v j\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:j}
{\b {\i j{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v k\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:k}
{\b {\i k{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v l\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:l}
{\b {\i l{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v m\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:m}
{\b {\i m{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v n\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:n}
{\b {\i n{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v o\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:o}
{\b {\i o{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v p\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:p}
{\b {\i p{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v q\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:q}
{\b {\i q{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v r\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:r}
{\b {\i r{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v s\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:s}
{\b {\i s{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v t\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:t}
{\b {\i t{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v u\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:u}
{\b {\i u{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v v\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:v}
{\b {\i v{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v w\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:w}
{\b {\i w{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v x\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:x}
{\b {\i x{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v y\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:y}
{\b {\i y{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v z\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:z}
{\b {\i z{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v braceleft\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:braceleft}
{\b {\i braceleft{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v bar\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:bar}
{\b {\i bar{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v braceright\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:braceright}
{\b {\i braceright{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
{\xe \v asciitilde\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:asciitilde}
{\b {\i asciitilde{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
}}  \par
}
}
{\xe \v XKeySym\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XKeySym}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XKeySym}}
}\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XK_BackSpace\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_BackSpace}
{\b {\i XK_BackSpace{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Tab\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Tab}
{\b {\i XK_Tab{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Clear\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Clear}
{\b {\i XK_Clear{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Return\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Return}
{\b {\i XK_Return{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Home\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Home}
{\b {\i XK_Home{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Left\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Left}
{\b {\i XK_Left{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Up\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Up}
{\b {\i XK_Up{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Right\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Right}
{\b {\i XK_Right{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Down\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Down}
{\b {\i XK_Down{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Page_Up\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Page_Up}
{\b {\i XK_Page_Up{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Page_Down\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Page_Down}
{\b {\i XK_Page_Down{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_End\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_End}
{\b {\i XK_End{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Begin\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Begin}
{\b {\i XK_Begin{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Menu\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Menu}
{\b {\i XK_Menu{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Shift_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Shift_L}
{\b {\i XK_Shift_L{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Shift_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Shift_R}
{\b {\i XK_Shift_R{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Control_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Control_L}
{\b {\i XK_Control_L{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Control_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Control_R}
{\b {\i XK_Control_R{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Caps_Lock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Caps_Lock}
{\b {\i XK_Caps_Lock{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Shift_Lock\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Shift_Lock}
{\b {\i XK_Shift_Lock{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Meta_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Meta_L}
{\b {\i XK_Meta_L{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Meta_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Meta_R}
{\b {\i XK_Meta_R{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Alt_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Alt_L}
{\b {\i XK_Alt_L{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Alt_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Alt_R}
{\b {\i XK_Alt_R{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Super_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Super_L}
{\b {\i XK_Super_L{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Super_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Super_R}
{\b {\i XK_Super_R{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Hyper_L\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Hyper_L}
{\b {\i XK_Hyper_L{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
{\xe \v XK_Hyper_R\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XK_Hyper_R}
{\b {\i XK_Hyper_R{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
}}  \par
}
}
{\xe \v XRequest\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XRequest}}
}\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v X_CreateWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CreateWindow}
{\b {\i X_CreateWindow{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeWindowAttributes\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeWindowAttributes}
{\b {\i X_ChangeWindowAttributes{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetWindowAttributes\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetWindowAttributes}
{\b {\i X_GetWindowAttributes{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_DestroyWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_DestroyWindow}
{\b {\i X_DestroyWindow{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_DestroySubwindows\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_DestroySubwindows}
{\b {\i X_DestroySubwindows{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeSaveSet\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeSaveSet}
{\b {\i X_ChangeSaveSet{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ReparentWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ReparentWindow}
{\b {\i X_ReparentWindow{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_MapWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_MapWindow}
{\b {\i X_MapWindow{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_MapSubwindows\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_MapSubwindows}
{\b {\i X_MapSubwindows{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UnmapWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UnmapWindow}
{\b {\i X_UnmapWindow{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UnmapSubwindows\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UnmapSubwindows}
{\b {\i X_UnmapSubwindows{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ConfigureWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ConfigureWindow}
{\b {\i X_ConfigureWindow{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CirculateWindow\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CirculateWindow}
{\b {\i X_CirculateWindow{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetGeometry\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetGeometry}
{\b {\i X_GetGeometry{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryTree\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryTree}
{\b {\i X_QueryTree{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_InternAtom\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_InternAtom}
{\b {\i X_InternAtom{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetAtomName\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetAtomName}
{\b {\i X_GetAtomName{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeProperty\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeProperty}
{\b {\i X_ChangeProperty{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_DeleteProperty\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_DeleteProperty}
{\b {\i X_DeleteProperty{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetProperty\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetProperty}
{\b {\i X_GetProperty{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ListProperties\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ListProperties}
{\b {\i X_ListProperties{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetSelectionOwner\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetSelectionOwner}
{\b {\i X_SetSelectionOwner{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetSelectionOwner\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetSelectionOwner}
{\b {\i X_GetSelectionOwner{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ConvertSelection\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ConvertSelection}
{\b {\i X_ConvertSelection{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SendEvent\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SendEvent}
{\b {\i X_SendEvent{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GrabPointer\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GrabPointer}
{\b {\i X_GrabPointer{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UngrabPointer\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UngrabPointer}
{\b {\i X_UngrabPointer{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GrabButton\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GrabButton}
{\b {\i X_GrabButton{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UngrabButton\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UngrabButton}
{\b {\i X_UngrabButton{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeActivePointerGrab\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeActivePointerGrab}
{\b {\i X_ChangeActivePointerGrab{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GrabKeyboard\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GrabKeyboard}
{\b {\i X_GrabKeyboard{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UngrabKeyboard\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UngrabKeyboard}
{\b {\i X_UngrabKeyboard{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GrabKey\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GrabKey}
{\b {\i X_GrabKey{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UngrabKey\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UngrabKey}
{\b {\i X_UngrabKey{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_AllowEvents\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_AllowEvents}
{\b {\i X_AllowEvents{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GrabServer\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GrabServer}
{\b {\i X_GrabServer{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UngrabServer\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UngrabServer}
{\b {\i X_UngrabServer{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryPointer\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryPointer}
{\b {\i X_QueryPointer{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetMotionEvents\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetMotionEvents}
{\b {\i X_GetMotionEvents{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_TranslateCoords\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_TranslateCoords}
{\b {\i X_TranslateCoords{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_WarpPointer\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_WarpPointer}
{\b {\i X_WarpPointer{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetInputFocus\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetInputFocus}
{\b {\i X_SetInputFocus{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetInputFocus\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetInputFocus}
{\b {\i X_GetInputFocus{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryKeymap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryKeymap}
{\b {\i X_QueryKeymap{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_OpenFont\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_OpenFont}
{\b {\i X_OpenFont{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CloseFont\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CloseFont}
{\b {\i X_CloseFont{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryFont\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryFont}
{\b {\i X_QueryFont{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryTextExtents\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryTextExtents}
{\b {\i X_QueryTextExtents{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ListFonts\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ListFonts}
{\b {\i X_ListFonts{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ListFontsWithInfo\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ListFontsWithInfo}
{\b {\i X_ListFontsWithInfo{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetFontPath\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetFontPath}
{\b {\i X_SetFontPath{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetFontPath\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetFontPath}
{\b {\i X_GetFontPath{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CreatePixmap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CreatePixmap}
{\b {\i X_CreatePixmap{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_FreePixmap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_FreePixmap}
{\b {\i X_FreePixmap{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CreateGC\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CreateGC}
{\b {\i X_CreateGC{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeGC\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeGC}
{\b {\i X_ChangeGC{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CopyGC\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CopyGC}
{\b {\i X_CopyGC{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetDashes\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetDashes}
{\b {\i X_SetDashes{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetClipRectangles\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetClipRectangles}
{\b {\i X_SetClipRectangles{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_FreeGC\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_FreeGC}
{\b {\i X_FreeGC{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ClearArea\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ClearArea}
{\b {\i X_ClearArea{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CopyArea\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CopyArea}
{\b {\i X_CopyArea{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CopyPlane\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CopyPlane}
{\b {\i X_CopyPlane{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyPoint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyPoint}
{\b {\i X_PolyPoint{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyLine\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyLine}
{\b {\i X_PolyLine{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolySegment\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolySegment}
{\b {\i X_PolySegment{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyRectangle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyRectangle}
{\b {\i X_PolyRectangle{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyArc\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyArc}
{\b {\i X_PolyArc{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_FillPoly\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_FillPoly}
{\b {\i X_FillPoly{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyFillRectangle\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyFillRectangle}
{\b {\i X_PolyFillRectangle{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyFillArc\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyFillArc}
{\b {\i X_PolyFillArc{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PutImage\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PutImage}
{\b {\i X_PutImage{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetImage\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetImage}
{\b {\i X_GetImage{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyText8\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyText8}
{\b {\i X_PolyText8{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_PolyText16\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_PolyText16}
{\b {\i X_PolyText16{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ImageText8\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ImageText8}
{\b {\i X_ImageText8{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ImageText16\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ImageText16}
{\b {\i X_ImageText16{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CreateColormap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CreateColormap}
{\b {\i X_CreateColormap{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_FreeColormap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_FreeColormap}
{\b {\i X_FreeColormap{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CopyColormapAndFree\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CopyColormapAndFree}
{\b {\i X_CopyColormapAndFree{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_InstallColormap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_InstallColormap}
{\b {\i X_InstallColormap{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_UninstallColormap\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_UninstallColormap}
{\b {\i X_UninstallColormap{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ListInstalledColormaps\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ListInstalledColormaps}
{\b {\i X_ListInstalledColormaps{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_AllocColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_AllocColor}
{\b {\i X_AllocColor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_AllocNamedColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_AllocNamedColor}
{\b {\i X_AllocNamedColor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_AllocColorCells\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_AllocColorCells}
{\b {\i X_AllocColorCells{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_AllocColorPlanes\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_AllocColorPlanes}
{\b {\i X_AllocColorPlanes{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_FreeColors\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_FreeColors}
{\b {\i X_FreeColors{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_StoreColors\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_StoreColors}
{\b {\i X_StoreColors{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_StoreNamedColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_StoreNamedColor}
{\b {\i X_StoreNamedColor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryColors\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryColors}
{\b {\i X_QueryColors{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_LookupColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_LookupColor}
{\b {\i X_LookupColor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CreateCursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CreateCursor}
{\b {\i X_CreateCursor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_CreateGlyphCursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_CreateGlyphCursor}
{\b {\i X_CreateGlyphCursor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_FreeCursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_FreeCursor}
{\b {\i X_FreeCursor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_RecolorCursor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_RecolorCursor}
{\b {\i X_RecolorCursor{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryBestSize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryBestSize}
{\b {\i X_QueryBestSize{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_QueryExtension\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_QueryExtension}
{\b {\i X_QueryExtension{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ListExtensions\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ListExtensions}
{\b {\i X_ListExtensions{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeKeyboardMapping\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeKeyboardMapping}
{\b {\i X_ChangeKeyboardMapping{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetKeyboardMapping\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetKeyboardMapping}
{\b {\i X_GetKeyboardMapping{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeKeyboardControl\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeKeyboardControl}
{\b {\i X_ChangeKeyboardControl{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetKeyboardControl\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetKeyboardControl}
{\b {\i X_GetKeyboardControl{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_Bell\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_Bell}
{\b {\i X_Bell{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangePointerControl\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangePointerControl}
{\b {\i X_ChangePointerControl{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetPointerControl\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetPointerControl}
{\b {\i X_GetPointerControl{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetScreenSaver\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetScreenSaver}
{\b {\i X_SetScreenSaver{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetScreenSaver\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetScreenSaver}
{\b {\i X_GetScreenSaver{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ChangeHosts\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ChangeHosts}
{\b {\i X_ChangeHosts{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ListHosts\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ListHosts}
{\b {\i X_ListHosts{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetAccessControl\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetAccessControl}
{\b {\i X_SetAccessControl{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetCloseDownMode\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetCloseDownMode}
{\b {\i X_SetCloseDownMode{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_KillClient\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_KillClient}
{\b {\i X_KillClient{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_RotateProperties\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_RotateProperties}
{\b {\i X_RotateProperties{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_ForceScreenSaver\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_ForceScreenSaver}
{\b {\i X_ForceScreenSaver{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetPointerMapping\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetPointerMapping}
{\b {\i X_SetPointerMapping{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetPointerMapping\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetPointerMapping}
{\b {\i X_GetPointerMapping{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_SetModifierMapping\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_SetModifierMapping}
{\b {\i X_SetModifierMapping{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_GetModifierMapping\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_GetModifierMapping}
{\b {\i X_GetModifierMapping{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
{\xe \v X_NoOperation\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:X_NoOperation}
{\b {\i X_NoOperation{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
}}  \par
}
}
{\xe \v XSizeHintsFlags\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XSizeHintsFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XSizeHintsFlags}}
}\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v USPosition\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:USPosition}
{\b {\i USPosition{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v USSize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:USSize}
{\b {\i USSize{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PPosition\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PPosition}
{\b {\i PPosition{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PSize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PSize}
{\b {\i PSize{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PMinSize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PMinSize}
{\b {\i PMinSize{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PMaxSize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PMaxSize}
{\b {\i PMaxSize{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PResizeInc\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PResizeInc}
{\b {\i PResizeInc{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PAspect\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PAspect}
{\b {\i PAspect{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PAllHints\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PAllHints}
{\b {\i PAllHints{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PBaseSize\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PBaseSize}
{\b {\i PBaseSize{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
{\xe \v PWinGravity\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PWinGravity}
{\b {\i PWinGravity{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
}}  \par
}
}
{\xe \v XVisualClass\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XVisualClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XVisualClass}}
}\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v StaticGray\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:StaticGray}
{\b {\i StaticGray{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v GrayScale\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:GrayScale}
{\b {\i GrayScale{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v StaticColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:StaticColor}
{\b {\i StaticColor{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v PseudoColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:PseudoColor}
{\b {\i PseudoColor{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v TrueColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:TrueColor}
{\b {\i TrueColor{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v DirectColor\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:DirectColor}
{\b {\i DirectColor{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
{\xe \v XWindowClass\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XWindowClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XWindowClass}}
}\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v InputOutput\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:InputOutput}
{\b {\i InputOutput{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
}}  \par
{\xe \v InputOnly\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:InputOnly}
{\b {\i InputOnly{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
}}  \par
}
}
{\xe \v XWMHintsFlags\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XWMHintsFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Tao::Platform::X11::XWMHintsFlags}}
}\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v InputHint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:InputHint}
{\b {\i InputHint{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
{\xe \v StateHint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:StateHint}
{\b {\i StateHint{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
{\xe \v IconPixmapHint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IconPixmapHint}
{\b {\i IconPixmapHint{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
{\xe \v IconWindowHint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IconWindowHint}
{\b {\i IconWindowHint{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
{\xe \v IconPositionHint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IconPositionHint}
{\b {\i IconPositionHint{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
{\xe \v IconMaskHint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:IconMaskHint}
{\b {\i IconMaskHint{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
{\xe \v WindowGroupHint\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:WindowGroupHint}
{\b {\i WindowGroupHint{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
{\xe \v AllHints\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:AllHints}
{\b {\i AllHints{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
}}  \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v XErrorHandler\:Tao::Platform::X11}
{\xe \v Tao::Platform::X11\:XErrorHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal delegate int Tao.Platform.X11.XErrorHandler (IntPtr {\i DisplayHandle}, ref XErrorEvent {\i error_event})}
}\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Tao.Sdl\par \pard\plain 
{\tc\tcl2 \v Tao.Sdl}
{\xe \v Tao.Sdl}
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Sdl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple DirectMedia Layer binding for .NET, implementing SDL 1.2.13. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_Event}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_keysym}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_keysym} structure describes a key press or a key release. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SdlGfx}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL graphics drawing primitives and other support functions The SDL_gfx library evolved out of the SDL_gfxPrimitives code which provided basic drawing routines such as lines, circles or polygons and SDL_rotozoom which implemented a interpolating rotozoomer for SDL surfaces. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SdlImage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_Image bindings for .NET. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SdlMixer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Mix_Chunk}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SdlNet}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_net is a portable network library for use with SDL. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SdlTtf}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This library supports Sdl_ttf 2.0.8. This library is a wrapper around the excellent {\b FreeType} 1.2 library, available at: {\f2 http://www.freetype.org.} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Smpeg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SMPEG bindings for .NET. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b MusicFinishedDelegate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b MixFunctionDelegate} (IntPtr udata,[Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] byte[] stream, int len)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b ChannelFinishedDelegate} (int channel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b MixEffectFunctionDelegate} (int chan, IntPtr stream, int len, IntPtr udata)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special effect callback function pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b MixEffectDoneDelegate} (int chan, IntPtr udata)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special effect done callback function pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_OpenAudio} (int frequency, short format, int channels, int chunksize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the mixer with a certain audio format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_AllocateChannels} (int numchans)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dynamically change the number of channels managed by the mixer. If decreasing the number of channels, the upper channels are stopped. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_QuerySpec} (out int frequency, out short format, out int channels)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get output format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Mix_LoadWAV_RW} (IntPtr src, int freesrc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a wave file or a music (.mod .s3m .it .xm) file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Mix_LoadMUS} (string file)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a music file into a Mix_Music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Mix_LoadMUS_RW} (IntPtr rw)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a music file from an SDL_RWop object (Ogg and MikMod specific currently). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Mix_QuickLoad_WAV} (IntPtr mem)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a wave file of the mixer format from a memory buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Mix_QuickLoad_RAW} (IntPtr mem, int len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load raw audio data of the mixer format from a memory buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_FreeChunk} (IntPtr chunk)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free an audio chunk previously loaded. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_FreeMusic} (IntPtr music)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free a Mix_Music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GetMusicType} (IntPtr music)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find out the music format of a mixer music, or the currently playing music, if 'music' is NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_SetPostMix} (MixFunctionDelegate mix_func, IntPtr arg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook in a postmix processor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_HookMusic} (MixFunctionDelegate mix_func, IntPtr arg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook for a custom music player. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_HookMusicFinished} (MusicFinishedDelegate music_finished)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add your own callback when the music has finished playing. This callback is only called if the music finishes naturally. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Mix_GetMusicHookData} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a pointer to the user data for the current music hook. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_ChannelFinished} (ChannelFinishedDelegate channel_finished)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set callback for when channel finishes playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_RegisterEffect} (int chan, MixEffectFunctionDelegate f, MixEffectDoneDelegate d, IntPtr arg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook a processor to a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_UnregisterEffect} (int chan, MixEffectFunctionDelegate f)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unhook a processor from a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_UnregisterAllEffects} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unhook all processors from a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_SetPanning} (int channel, byte left, byte right)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stereo panning. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_SetPosition} (int channel, short angle, byte distance)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Panning(angular) and distance. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_SetDistance} (int channel, byte distance)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Distance attenuation (volume). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_SetReverseStereo} (int channel, int flip)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swap stereo left and right. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_ReserveChannels} (int num)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prevent channels from being used in default group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GroupChannel} (int which, int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add/remove channel to/from group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GroupChannels} (int from, int to, int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assign several consecutive channels to a group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GroupAvailable} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get first inactive channel in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GroupCount} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get number of channels in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GroupOldest} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get oldest busy channel in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GroupNewer} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get youngest busy channel in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_PlayChannelTimed} (int channel, IntPtr chunk, int loops, int ticks)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play loop and limit by time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_PlayMusic} (IntPtr music, int loops)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music, with looping. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadeInMusic} (IntPtr music, int loops, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music, with looping, and fade in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadeInMusicPos} (IntPtr music, int loops, int ms, double position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music from a start point, with looping, and fade in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadeInChannelTimed} (int channel, IntPtr chunk, int loops, int ms, int ticks)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play loop with fade in and limit by time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_Volume} (int channel, int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the mix volume of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_VolumeChunk} (IntPtr chunk, int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set mix volume. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_VolumeMusic} (int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set music volume. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_HaltChannel} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop playing on a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_HaltGroup} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop a group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_HaltMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop music playback. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_ExpireChannel} (int channel, int ticks)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change the timed stoppage of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadeOutChannel} (int which, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop playing channel after timed fade out. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadeOutGroup} (int tag, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fade out a group over time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadeOutMusic} (int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop music, with fade out. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadingMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get status of current music fade activity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_FadingChannel} (int which)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the fade status of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_Pause} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause a particular channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_Resume} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume a paused channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_Paused} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pause status of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_PauseMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_ResumeMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume paused music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_RewindMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewind music to beginning. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_PausedMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test whether music is paused. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_SetMusicPosition} (double position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set position of playback in stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_Playing} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the active playing status of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_PlayingMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test whether music is playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_SetMusicCMD} (string command)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use external program for music playback. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_SetSynchroValue} (int value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchro value is set by MikMod from modules while playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Mix_GetSynchroValue} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchro value is set by MikMod from modules while playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Mix_GetChunk} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the sample playing on a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Mix_CloseAudio} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close sound mixer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_SysWMEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mix_Chunk}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ChannelFinishedDelegate\:Tao::Sdl}
{\xe \v Tao::Sdl\:ChannelFinishedDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Tao.Sdl.ChannelFinishedDelegate (int {\i channel})}
}\par
{\bkmkstart AAAAAAAELR}
{\bkmkend AAAAAAAELR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mix_AllocateChannels\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_AllocateChannels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_AllocateChannels (int {\i numchans})}
}\par
{\bkmkstart AAAAAAAELS}
{\bkmkend AAAAAAAELS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dynamically change the number of channels managed by the mixer. If decreasing the number of channels, the upper channels are stopped. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns the new number of allocated channels.\par
Set the number of channels being mixed. This can be called multiple times, even with sounds playing. If numchans is less than the current number of channels, then the higher channels will be stopped, freed, and therefore not mixed any longer. It's probably not a good idea to change the size 1000 times a second though. If any channels are deallocated, any callback set by Mix_ChannelFinished will be called when each channel is halted to be freed. Note: passing in zero WILL free all mixing channels, however music will still play.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i numchans} Number of channels to allocate for mixing. A negative number will not do anything, it will tell you how many channels are currently allocated. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of channels allocated. Never fails...but a high number of channels can segfault if you run out of memory. We're talking REALLY high! \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // allocate 16 mixing channels\par
                    Mix_AllocateChannels(16);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_OpenAudio}\par
}}}
{\xe \v Mix_ChannelFinished\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_ChannelFinished}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_ChannelFinished (ChannelFinishedDelegate {\i channel_finished})}
}\par
{\bkmkstart AAAAAAAELT}
{\bkmkend AAAAAAAELT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set callback for when channel finishes playing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When channel playback is halted, then the specified channel_finished function is called. The channel parameter will contain the channel number that has finished. \par
NOTE: NEVER call SDL_Mixer functions, nor SDL_LockAudio, from a callback function. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_ChannelFinished(void (*channel_finished)(int channel))\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // a simple channel_finished function\par
                                void channelDone(int channel) \par
                                \{\par
                                        printf("channel %d finished playback.\\n",channel);\par
                                \}\par
\par
                                // make a channelDone function\par
                                void channelDone(int channel)\par
                                \{\par
                                        printf("channel %d finished playing.\\n", channel);\par
                                \}\par
                                ...\par
                                // set the callback for when a channel stops playing\par
                                Mix_ChannelFinished(channelDone);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel_finished} Function to call when any channel finishes playback. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_HaltChannel}, {\b Mix_ExpireChannel}\par
}}}
{\xe \v Mix_CloseAudio\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_CloseAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_CloseAudio ()}
}\par
{\bkmkstart AAAAAAAELU}
{\bkmkend AAAAAAAELU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close sound mixer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shutdown and cleanup the mixer API. After calling this all audio is stopped, the device is closed, and the SDL_mixer functions should not be used. You may, of course, use Mix_OpenAudio to start the functionality again. \par
Note: This function doesn't do anything until you have called it the same number of times that you called {\b Mix_OpenAudio}. You may use {\b Mix_QuerySpec} to find out how many times Mix_CloseAudio needs to be called before the device is actually closed. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_CloseAudio()\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     Mix_CloseAudio();\par
                    // you could SDL_Quit(); here...or not.\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_OpenAudio}, {\b Mix_QuerySpec}\par
}}}
{\xe \v Mix_ExpireChannel\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_ExpireChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_ExpireChannel (int {\i channel}, int {\i ticks})}
}\par
{\bkmkstart AAAAAAAELV}
{\bkmkend AAAAAAAELV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change the timed stoppage of a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Halt channel playback, or all channels if -1 is passed in, after ticks milliseconds. Any callback set by {\b Mix_ChannelFinished} will be called when the channel expires. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_ExpireChannel(int channel, int ticks)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to stop playing, or -1 for all channels. \par
{\i ticks} Milliseconds until channel(s) halt playback. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of channels set to expire. Whether or not they are active. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // halt playback on all channels in 2 seconds\par
                    Mix_ExpireChannel(-1, 2000);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_HaltChannel}, {\b Mix_FadeOutChannel}, {\b Mix_ChannelFinished}\par
}}}
{\xe \v Mix_FadeInChannelTimed\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadeInChannelTimed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadeInChannelTimed (int {\i channel}, IntPtr {\i chunk}, int {\i loops}, int {\i ms}, int {\i ticks})}
}\par
{\bkmkstart AAAAAAAELW}
{\bkmkend AAAAAAAELW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play loop with fade in and limit by time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the sample is long enough and has enough loops then the sample will stop after ticks milliseconds. Otherwise this function is the same as Mix_FadeInChannel. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_FadeInChannelTimed(int channel, Mix_Chunk *chunk, int loops, int ms, int ticks)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to play on, or -1 for the first free unreserved channel. \par
{\i chunk} Sample to play. \par
{\i loops} Number of loops, -1 is infinite loops. \par
{\i ms} Milliseconds of time that the fade-in effect should take to go from silence to full volume. \par
{\i ticks} Millisecond limit to play sample, at most. If not enough loops or the sample chunk is not long enough, then the sample may stop before this timeout occurs. -1 means play forever.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the channel the sample is played on. On any errors, -1 is returned. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // play sample on first free unreserved channel\par
                                // play it for half a second\par
                                // Mix_Chunk *sample; //previously loaded\par
                                if(Mix_PlayChannelTimed(-1, sample, -1 , 500)==-1) \par
                        \{\par
                                printf("Mix_PlayChannel: %s\\n",Mix_GetError());\par
                                // may be critical error, or maybe just no channels were free.\par
                                // you could allocated another channel in that case...\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PlayChannelTimed}, Mix_FadeInChannel, {\b Mix_HaltChannel}, {\b Mix_FadingChannel}, {\b Mix_ReserveChannels}, {\b Mix_ExpireChannel}\par
}}}
{\xe \v Mix_FadeInMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadeInMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadeInMusic (IntPtr {\i music}, int {\i loops}, int {\i ms})}
}\par
{\bkmkstart AAAAAAAELX}
{\bkmkend AAAAAAAELX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music, with looping, and fade in. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fade in over ms milliseconds of time, the loaded music, playing it loop times through from start to finish. The fade in effect only applies to the first loop. Any previous music will be halted, or if it is fading out i t will wait (blocking) for the fade to complete. This function is the same as Mix_FadeInMusicPos(music, loops, ms, 0). \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_FadeInMusic(Mix_Music *music, int loops, int ms)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i music} Pointer to Mix_Music to play. \par
{\i loops} number of times to play through the music. \par 0 plays the music zero times...  \par -1 plays the music forever (or as close as it can get to that)  \par
{\i ms} Milliseconds for the fade-in effect to complete. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 on success, or -1 on errors. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // play music forever, fading in over 2 seconds\par
                                // Mix_Music *music; // I assume this has been loaded already\par
                                if(Mix_FadeInMusic(music, -1, 2000)==-1) \par
                        \{\par
                                printf("Mix_FadeInMusic: %s\\n", Mix_GetError());\par
                                // well, there's no music, but most games don't break without music...\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PlayMusic}, {\b Mix_FadeInMusicPos}\par
}}}
{\xe \v Mix_FadeInMusicPos\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadeInMusicPos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadeInMusicPos (IntPtr {\i music}, int {\i loops}, int {\i ms}, double {\i position})}
}\par
{\bkmkstart AAAAAAAELY}
{\bkmkend AAAAAAAELY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music from a start point, with looping, and fade in. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fade in over ms milliseconds of time, the loaded music, playing it loop times through from start to finish. The fade in effect only applies to the first loop. The first time the music is played, it posistion will be set to position, which means different things for different types of music files, see Mix_SetMusicPosition for more info on that. Any previous music will be halted, or if it is fading out it will wait (blocking) for the fade to complete. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_FadeInMusicPos(Mix_Music *music, int loops, int ms, double position)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i music} Pointer to Mix_Music to play. \par
{\i loops} number of times to play through the music. \par 0 plays the music zero times...  \par -1 plays the music forever (or as close as it can get to that)  \par
{\i ms} Milliseconds for the fade-in effect to complete. \par
{\i position} Position to play from, see {\b Mix_SetMusicPosition} for meaning. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 on success, or -1 on errors. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // play music forever, fading in over 2 seconds\par
                                // Mix_Music *music; // I assume this has been loaded already\par
                                if(Mix_FadeInMusicPos(music, -1, 2000)==-1) \par
                        \{\par
                                printf("Mix_FadeInMusic: %s\\n", Mix_GetError());\par
                                // well, there's no music, but most games don't break without music...\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PlayMusic}, {\b Mix_FadeInMusic}, {\b Mix_SetMusicPosition}\par
}}}
{\xe \v Mix_FadeOutChannel\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadeOutChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadeOutChannel (int {\i which}, int {\i ms})}
}\par
{\bkmkstart AAAAAAAELZ}
{\bkmkend AAAAAAAELZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop playing channel after timed fade out. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gradually fade out which channel over ms milliseconds starting from now. The channel will be halted after the fade out is completed. Only channels that are playing are set to fade out, including paused channels. Any callback set by {\b Mix_ChannelFinished} will be called when the channel finishes fading out. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_FadeOutChannel(int which, int ms)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i which} Channel to fade out, or -1 to fade all channels out. \par
{\i ms} Milliseconds of time that the fade-out effect should take to go to silence, starting now. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of channels set to fade out. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // fade out all channels to finish 3 seconds from now\par
                    printf("starting fade out of %d channels\\n", Mix_FadeOutChannel(-1, 3000));\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Mix_FadeInChannel, {\b Mix_FadeInChannelTimed}, {\b Mix_FadingChannel}, {\b Mix_ChannelFinished}\par
}}}
{\xe \v Mix_FadeOutGroup\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadeOutGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadeOutGroup (int {\i tag}, int {\i ms})}
}\par
{\bkmkstart AAAAAAAEMA}
{\bkmkend AAAAAAAEMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fade out a group over time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gradually fade out channels in group tag over ms milliseconds starting from now. The channels will be halted after the fade out is completed. Only channels that are playing are set to fade out, including paused channels. Any callback set by {\b Mix_ChannelFinished} will be called when each channel finishes fading out. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_FadeOutGroup(int tag, int ms)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i tag} Group to fade out. NOTE: -1 will NOT fade all channels out. Use Mix_FadeOutChannel(-1) for that instead. \par
{\i ms} Milliseconds of time that the fade-out effect should take to go to silence, starting now. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of channels set to fade out. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // fade out all channels in group 1 to finish 3 seconds from now\par
                    printf("starting fade out of %d channels\\n", Mix_FadeOutGroup(1, 3000));\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_HaltGroup}, {\b Mix_FadeOutChannel}, {\b Mix_FadingChannel}, {\b Mix_ChannelFinished}\par
}}}
{\xe \v Mix_FadeOutMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadeOutMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadeOutMusic (int {\i ms})}
}\par
{\bkmkstart AAAAAAAEMB}
{\bkmkend AAAAAAAEMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop music, with fade out. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gradually fade out the music over ms milliseconds starting from now. The music will be halted after the fade out is completed. Only when music is playing and not fading already are set to fade out, including paused channels. Any callback set by {\b Mix_HookMusicFinished} will be called when the music finishes fading out. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_FadeOutMusic(int ms)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ms} Milliseconds of time that the fade-out effect should take to go to silence, starting now. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1 on success, 0 on failure.\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // fade out music to finish 3 seconds from now\par
                                while(!Mix_FadeOutMusic(3000) &amp;&amp; Mix_PlayingMusic()) \par
                        \{\par
                                // wait for any fades to complete\par
                                SDL_Delay(100);\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_HaltMusic}, {\b Mix_FadingMusic}, {\b Mix_PlayingMusic}, {\b Mix_HookMusicFinished}\par
}}}
{\xe \v Mix_FadingChannel\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadingChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadingChannel (int {\i which})}
}\par
{\bkmkstart AAAAAAAEMC}
{\bkmkend AAAAAAAEMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the fade status of a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells you if which channel is fading in, out, or not. Does not tell you if the channel is playing anything, or paused, so you'd need to test that separately. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Fading Mix_FadingChannel(int which)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i which} Channel to get the fade activity status from. -1 is not valid, and will probably crash the program. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the fading status. Never returns an error. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // check the fade status on channel 0\par
                                switch(Mix_FadingChannel(0)) \par
                        \{\par
                        case MIX_NO_FADING:\par
                                printf("Not fading.\\n");\par
                                break;\par
                                case MIX_FADING_OUT:\par
                                printf("Fading out.\\n");\par
                                break;\par
                                case MIX_FADING_IN:\par
                                printf("Fading in.\\n");\par
                                break;\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_Paused}, {\b Mix_Playing}, Mix_FadeInChannel, {\b Mix_FadeInChannelTimed}, {\b Mix_FadeOutChannel}\par
}}}
{\xe \v Mix_FadingMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FadingMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_FadingMusic ()}
}\par
{\bkmkstart AAAAAAAEMD}
{\bkmkend AAAAAAAEMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get status of current music fade activity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells you if music is fading in, out, or not at all. Does not tell you if the channel is playing anything, or paused, so you'd need to test that separately. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Fading Mix_FadingMusic() \par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the fading status. Never returns an error. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // check the music fade status\par
                                switch(Mix_FadingMusic()) \par
                        \{\par
                                case MIX_NO_FADING:\par
                                printf("Not fading music.\\n");\par
                                break;\par
                                case MIX_FADING_OUT:\par
                                printf("Fading out music.\\n");\par
                                break;\par
                                case MIX_FADING_IN:\par
                                printf("Fading in music.\\n");\par
                                break;\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PausedMusic}, {\b Mix_PlayingMusic}, {\b Mix_FadeInMusicPos}, {\b Mix_FadeOutMusic}\par
}}}
{\xe \v Mix_FreeChunk\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FreeChunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_FreeChunk (IntPtr {\i chunk})}
}\par
{\bkmkstart AAAAAAAEME}
{\bkmkend AAAAAAAEME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free an audio chunk previously loaded. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free the memory used in chunk, and free chunk itself as well. Do not use chunk after this without loading a new sample to it. Note: It's a bad idea to free a chunk that is still being played... \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_FreeChunk(Mix_Chunk *chunk)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i chunk} Pointer to the {\b Mix_Chunk} to free. \par
}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // free the sample\par
                                // Mix_Chunk *sample;\par
                                Mix_FreeChunk(sample);\par
                                sample=NULL; // to be safe...\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Mix_LoadWAV, {\b Mix_QuickLoad_WAV}, {\b Mix_LoadWAV_RW}\par
}}}
{\xe \v Mix_FreeMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_FreeMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_FreeMusic (IntPtr {\i music})}
}\par
{\bkmkstart AAAAAAAEMF}
{\bkmkend AAAAAAAEMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free a Mix_Music. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free the loaded music. If music is playing it will be halted. If music is fading out, then this function will wait (blocking) until the fade out is complete. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_FreeMusic(Mix_Music *music)\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // free music\par
                                Mix_Music *music;\par
                                Mix_FreeMusic(music);\par
                                music=NULL; // so we know we freed it...\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i music} Pointer to Mix_Music to free.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_LoadMUS}\par
}}}
{\xe \v Mix_GetChunk\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GetChunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Sdl.Mix_GetChunk (int {\i channel})}
}\par
{\bkmkstart AAAAAAAEMG}
{\bkmkend AAAAAAAEMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the sample playing on a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the most recent sample chunk pointer played on channel. This pointer may be currently playing, or just the last used. Note: The actual chunk may have been freed, so this pointer may not be valid anymore. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Chunk *Mix_GetChunk(int channel)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to get the current {\b Mix_Chunk} playing. -1 is not valid, but will not crash the program. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Pointer to the {\b Mix_Chunk}. NULL is returned if the channel is not allocated, or if the channel has not played any samples yet. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // get the last chunk used by channel 0\par
                    printf("Mix_Chunk* last in use on channel 0 was: %08p\\n", Mix_GetChunk(0));\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_Chunk}, {\b Mix_Playing}\par
}}}
{\xe \v Mix_GetMusicHookData\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GetMusicHookData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Sdl.Mix_GetMusicHookData ()}
}\par
{\bkmkstart AAAAAAAEMH}
{\bkmkend AAAAAAAEMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a pointer to the user data for the current music hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the arg passed into Mix_HookMusic. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void *Mix_GetMusicHookData()\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // retrieve the music hook data pointer\par
                    void *data;\par
                    data=Mix_GetMusicHookData();\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the arg pointer.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_HookMusic}\par
}}}
{\xe \v Mix_GetMusicType\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GetMusicType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GetMusicType (IntPtr {\i music})}
}\par
{\bkmkstart AAAAAAAEMI}
{\bkmkend AAAAAAAEMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find out the music format of a mixer music, or the currently playing music, if 'music' is NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells you the file format encoding of the music. This may be handy when used with Mix_SetMusicPosition, and other music functions that vary based on the type of music being played. If you want to know the type of music currently being played, pass in NULL to music. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_MusicType Mix_GetMusicType(const Mix_Music *music)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i music} The music to get the type of. NULL will get the currently playing music type. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The type of music or if music is NULL then the currently playing music type, otherwise MUS_NONE if no music is playing.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetPosition}\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                      // print the type of music currently playing\par
                                switch(Mix_GetMusicType(NULL))\par
                        \{\par
                                case MUS_NONE:\par
                                MUS_CMD:\par
                                printf("Command based music is playing.\\n");\par
                                break;\par
                                MUS_WAV:\par
                                printf("WAVE/RIFF music is playing.\\n");\par
                                break;\par
                                MUS_MOD:\par
                                printf("MOD music is playing.\\n");\par
                                break;\par
                                MUS_MID:\par
                                printf("MIDI music is playing.\\n");\par
                                break;\par
                                MUS_OGG:\par
                                printf("OGG music is playing.\\n");\par
                                break;\par
                                MUS_MP3:\par
                                printf("MP3 music is playing.\\n");\par
                                break;\par
                                default:\par
                                printf("Unknown music is playing.\\n");\par
                                break;\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetPosition}\par
}}}
{\xe \v Mix_GetSynchroValue\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GetSynchroValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GetSynchroValue ()}
}\par
{\bkmkstart AAAAAAAEMJ}
{\bkmkend AAAAAAAEMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchro value is set by MikMod from modules while playing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_GetSynchroValue(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetSynchroValue}\par
}}}
{\xe \v Mix_GroupAvailable\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GroupAvailable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GroupAvailable (int {\i tag})}
}\par
{\bkmkstart AAAAAAAEMK}
{\bkmkend AAAAAAAEMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get first inactive channel in group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the first available (not playing) channel in group tag. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_GroupAvailable(int tag)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i tag} A group number Any positive numbers (including zero). -1 will search ALL channels. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The channel found on success. -1 is returned when no channels in the group are available. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // find the first available channel in group 1\par
                                int channel;\par
                                channel=Mix_GroupAvailable(1);\par
                                if (channel==-1) \par
                        \{\par
                                // no channel available...\par
                                // perhaps search for oldest or newest channel in use...\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_GroupOldest}, {\b Mix_GroupNewer}, {\b Mix_GroupChannel}, {\b Mix_GroupChannels}\par
}}}
{\xe \v Mix_GroupChannel\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GroupChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GroupChannel (int {\i which}, int {\i tag})}
}\par
{\bkmkstart AAAAAAAEML}
{\bkmkend AAAAAAAEML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add/remove channel to/from group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add which channel to group tag, or reset it's group to the default group tag (-1). \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_GroupChannel(int which, int tag)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i which} Channel number of channels to assign tag to. \par
{\i tag} A group number Any positive numbers (including zero). -1 is the default group. Use -1 to remove a group tag essentially. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid True(1) on success. False(0) is returned when the channel specified is invalid. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // add channel 0 to group 1\par
                                if(!Mix_GroupChannel(0,1)) \par
                        \{\par
                                // bad channel, apparently channel 1 isn't allocated\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_GroupChannels}, {\b Mix_AllocateChannels}\par
}}}
{\xe \v Mix_GroupChannels\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GroupChannels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GroupChannels (int {\i from}, int {\i to}, int {\i tag})}
}\par
{\bkmkstart AAAAAAAEMM}
{\bkmkend AAAAAAAEMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assign several consecutive channels to a group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add channels starting at from up through to to group tag, or reset it's group to the default group tag (-1). \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_GroupChannels(int from, int to, int tag)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i from} First Channel number of channels to assign tag to. Must be less or equal to to. \par
{\i to} Last Channel number of channels to assign tag to. Must be greater or equal to from. \par
{\i tag} A group number. Any positive numbers (including zero). -1 is the default group. Use -1 to remove a group tag essentially. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of tagged channels on success. If that number is less than to-from+1 then some channels were no tagged because they didn't exist. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // add channels 0 through 7 to group 1\par
                                if(Mix_GroupChannels(0,7,1)!=8) \par
                        \{\par
                                // some bad channels, apparently some channels aren't allocated\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_GroupChannel}, {\b Mix_AllocateChannels}\par
}}}
{\xe \v Mix_GroupCount\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GroupCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GroupCount (int {\i tag})}
}\par
{\bkmkstart AAAAAAAEMN}
{\bkmkend AAAAAAAEMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get number of channels in group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count the number of channels in group tag. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_GroupCount(int tag)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i tag} A group number Any positive numbers (including zero). -1 will count ALL channels. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of channels found in the group. This function never fails. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // count the number of channels in group 1\par
                    printf("There are %d channels in group 1\\n", Mix_GroupCount(1));\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_GroupChannel}, {\b Mix_GroupChannels}\par
}}}
{\xe \v Mix_GroupNewer\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GroupNewer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GroupNewer (int {\i tag})}
}\par
{\bkmkstart AAAAAAAEMO}
{\bkmkend AAAAAAAEMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get youngest busy channel in group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the newest, most recently started, actively playing channel in group tag. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_GroupNewer(int tag)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i tag} A group number Any positive numbers (including zero). -1 will search ALL channels. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The channel found on success. -1 is returned when no channels in the group are playing or the group is empty. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // find the newest playing channel in group 1\par
                                int channel;\par
                                channel=Mix_GroupNewer(1);\par
                                if (channel==-1) \par
                        \{\par
                                // no channel playing or allocated...\par
                                // perhaps just search for an available channel...\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_GroupOldest}, {\b Mix_GroupAvailable}, {\b Mix_GroupChannel}, {\b Mix_GroupChannels}\par
}}}
{\xe \v Mix_GroupOldest\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_GroupOldest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_GroupOldest (int {\i tag})}
}\par
{\bkmkstart AAAAAAAEMP}
{\bkmkend AAAAAAAEMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get oldest busy channel in group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the oldest actively playing channel in group tag. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_GroupOldest(int tag)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i tag} A group number Any positive numbers (including zero). -1 will search ALL channels. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The channel found on success. -1 is returned when no channels in the group are playing or the group is empty. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // find the oldest playing channel in group 1\par
                                int channel;\par
                                channel=Mix_GroupOldest(1);\par
                                if (channel==-1) \par
                        \{\par
                                // no channel playing or allocated...\par
                                // perhaps just search for an available channel...\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_GroupNewer}, {\b Mix_GroupAvailable}, {\b Mix_GroupChannel}, {\b Mix_GroupChannels}\par
}}}
{\xe \v Mix_HaltChannel\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_HaltChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_HaltChannel (int {\i channel})}
}\par
{\bkmkstart AAAAAAAEMQ}
{\bkmkend AAAAAAAEMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop playing on a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Halt channel playback, or all channels if -1 is passed in. Any callback set by Mix_ChannelFinished will be called. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_HaltChannel(int channel)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to stop playing, or -1 for all channels. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid always returns zero. (kinda silly) \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // halt playback on all channels\par
                    Mix_HaltChannel(-1);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_ExpireChannel}, {\b Mix_FadeOutChannel}, {\b Mix_ChannelFinished}\par
}}}
{\xe \v Mix_HaltGroup\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_HaltGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_HaltGroup (int {\i tag})}
}\par
{\bkmkstart AAAAAAAEMR}
{\bkmkend AAAAAAAEMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop a group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Halt playback on all channels in group tag. Any callback set by Mix_ChannelFinished will be called once for each channel that stops. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_HaltGroup(int tag)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i tag} Group to fade out. NOTE: -1 will NOT halt all channels. Use Mix_HaltChannel(-1) for that instead. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid always returns zero. (more silly than {\b Mix_HaltChannel}) \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // halt playback on all channels in group 1\par
                    Mix_HaltGroup(1);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_FadeOutGroup}, {\b Mix_HaltChannel}, {\b Mix_ChannelFinished}\par
}}}
{\xe \v Mix_HaltMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_HaltMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_HaltMusic ()}
}\par
{\bkmkstart AAAAAAAEMS}
{\bkmkend AAAAAAAEMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop music playback. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Halt playback of music. This interrupts music fader effects. Any callback set by Mix_HookMusicFinished will be called when the music stops. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_HaltMusic()\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid always returns zero. (even more silly than Mix_HaltGroup) \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // halt music playback\par
                    Mix_HaltMusic();\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_FadeOutMusic}, {\b Mix_HookMusicFinished}\par
}}}
{\xe \v Mix_HookMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_HookMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_HookMusic (MixFunctionDelegate {\i mix_func}, IntPtr {\i arg})}
}\par
{\bkmkstart AAAAAAAEMT}
{\bkmkend AAAAAAAEMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook for a custom music player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets up a custom music player function. The function will be called with arg passed into the udata parameter when the mix_func is called. The stream parameter passes in the audio stream buffer to be filled with len bytes of music. The music player will then be called automatically when the mixer needs it. Music playing will start as soon as this is called. All the music playing and stopping functions have no effect on music after this. Pause and resume will work. Using a custom music player and the internal music player is not possible, the custom music player takes priority. To stop the custom music player call Mix_HookMusic(NULL, NULL). \par
NOTE: NEVER call SDL_Mixer functions, nor SDL_LockAudio, from a callback function. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_HookMusic(void (*mix_func)(void *udata, Uint8 *stream, int len), void *arg)\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // make a music play function\par
                                // it expects udata to be a pointer to an int\par
                                void myMusicPlayer(void *udata, Uint8 *stream, int len)\par
                                \{\par
                                        int i, pos=*(int*)udata;\par
\par
                                        // fill buffer with...uh...music...\par
                                        for(i=0; i&lt;len; i++)\par
                                                stream[i]=(i+pos)&amp;ff;\par
\par
                                        // set udata for next time\par
                                        pos+=len;\par
                                        *(int*)udata=pos;\par
                                \}\par
                                ...\par
                                // use myMusicPlayer for playing...uh...music\par
                                int music_pos=0;\par
                                Mix_HookMusic(myMusicPlayer, &amp;music_pos);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mix_func} Function pointer to a music player mixer function. NULL will stop the use of the music player, returning the mixer to using the internal music players like usual.\par
{\i arg} This is passed to the mix_func's udata parameter when it is called. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetMusicCMD}, {\b Mix_GetMusicHookData}\par
}}}
{\xe \v Mix_HookMusicFinished\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_HookMusicFinished}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_HookMusicFinished (MusicFinishedDelegate {\i music_finished})}
}\par
{\bkmkstart AAAAAAAEMU}
{\bkmkend AAAAAAAEMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add your own callback when the music has finished playing. This callback is only called if the music finishes naturally. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This sets up a function to be called when music playback is halted. Any time music stops, the music_finished function will be called. Call with NULL to remove the callback. \par
NOTE: NEVER call SDL_Mixer functions, nor SDL_LockAudio, from a callback function. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_HookMusicFinished(void (*music_finished)())\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i music_finished} Function pointer to a void function(). NULL will remove the hook. \par
}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // make a music finished function\par
                                void musicFinished()\par
                                \{\par
                                        printf("Music stopped.\\n");\par
                                \}\par
                                ...\par
                                // use musicFinished for when music stops\par
                                Mix_HookMusicFinished(musicFinished);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_HaltMusic}, {\b Mix_FadeOutMusic}\par
}}}
{\xe \v Mix_LoadMUS\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_LoadMUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Sdl.Mix_LoadMUS (string {\i file})}
}\par
{\bkmkstart AAAAAAAEMV}
{\bkmkend AAAAAAAEMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a music file into a Mix_Music. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i file} Name of music file to use. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to a Mix_Music. NULL is returned on errors. \par
}Load music file to use. This can load WAVE, MOD, MIDI, OGG, MP3, and any file that you use a command to play with. \par
If you are using an external command to play the music, you must call Mix_SetMusicCMD before this, otherwise the internal players will be used. Alternatively, if you have set an external command up and don't want to use it, you must call Mix_SetMusicCMD(NULL) to use the built-in players again. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Music *Mix_LoadMUS(const char *file)\par
}
\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // load the MP3 file "music.mp3" to play as music\par
                                Mix_Music *music;\par
                                music=Mix_LoadMUS("music.mp3");\par
                                if(!music) \par
                        \{\par
                                printf("Mix_LoadMUS(\\"music.mp3\\"): %s\\n", Mix_GetError());\par
                                // this might be a critical error...\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetMusicCMD}, {\b Mix_PlayMusic}, {\b Mix_FadeInMusic}, {\b Mix_FadeInMusicPos}\par
}}}
{\xe \v Mix_LoadMUS_RW\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_LoadMUS_RW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Sdl.Mix_LoadMUS_RW (IntPtr {\i rw})}
}\par
{\bkmkstart AAAAAAAEMW}
{\bkmkend AAAAAAAEMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a music file from an SDL_RWop object (Ogg and MikMod specific currently). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Music *Mix_LoadMUS_RW(SDL_RWops *rw)\par
}
 \par
}}
{\xe \v Mix_LoadWAV_RW\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_LoadWAV_RW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Sdl.Mix_LoadWAV_RW (IntPtr {\i src}, int {\i freesrc})}
}\par
{\bkmkstart AAAAAAAEMX}
{\bkmkend AAAAAAAEMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a wave file or a music (.mod .s3m .it .xm) file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load src for use as a sample. This can load WAVE, AIFF, RIFF, OGG, and VOC formats. Using SDL_RWops is not covered here, but they enable you to load from almost any source. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Chunk *Mix_LoadWAV_RW(SDL_RWops *src, int freesrc)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} The source SDL_RWops as a pointer. The sample is loaded from this. \par
{\i freesrc} A non-zero value mean is will automatically close/free the src for you. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a pointer to the sample as a {\b Mix_Chunk}. NULL is returned on errors. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // load sample.wav in to sample\par
                                Mix_Chunk *sample;\par
                                sample=Mix_LoadWAV_RW(SDL_RWFromFile("sample.wav", "rb"), 1);\par
                                if(!sample) \par
                        \{\par
                                printf("Mix_LoadWAV_RW: %s\\n", Mix_GetError());\par
                                // handle error\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Mix_LoadWAV, {\b Mix_QuickLoad_WAV}, {\b Mix_FreeChunk}\par
}}}
{\xe \v Mix_OpenAudio\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_OpenAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_OpenAudio (int {\i frequency}, short {\i format}, int {\i channels}, int {\i chunksize})}
}\par
{\bkmkstart AAAAAAAEMY}
{\bkmkend AAAAAAAEMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the mixer with a certain audio format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the mixer API. \par
This must be called before using other functions in this library. SDL must be initialized with SDL_INIT_AUDIO before this call. frequency would be 44100 for 44.1KHz, which is CD audio rate. Most games use 22050, because 44100 requires too much CPU power on older computers. chunksize is the size of each mixed sample. The smaller this is the more your hooks will be called. If make this too small on a slow system, sound may skip. If made to large, sound effects will lag behind the action more. You want a happy medium for your target computer. You also may make this 4096, or larger, if you are just playing music. MIX_CHANNELS(8) mixing channels will be allocated by default. You may call this function multiple times, however you will have to call Mix_CloseAudio just as many times for the device to actually close. The format will not changed on subsequent calls. So you will have to close all the way before trying to open with different format parameters.\par
format is based on SDL audio support, see SDL_audio.h. Here are the values listed there:\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     AUDIO_U8\par
                    Unsigned 8-bit samples\par
\par
                    AUDIO_S8\par
                    Signed 8-bit samples\par
\par
                    AUDIO_U16LSB\par
                    Unsigned 16-bit samples, in little-endian byte order\par
\par
                    AUDIO_S16LSB\par
                    Signed 16-bit samples, in little-endian byte order\par
\par
                    AUDIO_U16MSB\par
                    Unsigned 16-bit samples, in big-endian byte order\par
\par
                    AUDIO_S16MSB\par
                    Signed 16-bit samples, in big-endian byte order\par
\par
                    AUDIO_U16\par
                    same as AUDIO_U16LSB (for backwards compatability probably)\par
\par
                    AUDIO_S16\par
                    same as AUDIO_S16LSB (for backwards compatability probably)\par
\par
                    AUDIO_U16SYS\par
                    Unsigned 16-bit samples, in system byte order\par
\par
                    AUDIO_S16SYS\par
                    Signed 16-bit samples, in system byte order\par
}
\par
MIX_DEFAULT_FORMAT is the same as AUDIO_S16SYS. \par
Binds to C-funtion in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     int Mix_OpenAudio(int frequency, Uint16 format, int channels, int chunksize)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i frequency} Output sampling frequency in samples per second (Hz). you might use MIX_DEFAULT_FREQUENCY(22050) since that is a good value for most games. \par
{\i format} Output sample format. \par
{\i channels} Number of sound channels in output. Set to 2 for stereo, 1 for mono. This has nothing to do with mixing channels. \par
{\i chunksize} Bytes used per output sample. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 on success, -1 on errors \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // start SDL with audio support\par
                                if(SDL_Init(SDL_INIT_AUDIO)==-1) \par
                        \{\par
                                printf("SDL_Init: %s\\n", SDL_GetError());\par
                                exit(1);\par
                        \}\par
                        // open 44.1KHz, signed 16bit, system byte order,\par
                        //      stereo audio, using 1024 byte chunks\par
                        if(Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, 2, 1024)==-1) \par
                   \{\par
                        printf("Mix_OpenAudio: %s\\n", Mix_GetError());\par
                        exit(2);\par
                   \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_CloseAudio}, {\b Mix_QuerySpec}, {\b Mix_AllocateChannels}\par
}}}
{\xe \v Mix_Pause\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_Pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_Pause (int {\i channel})}
}\par
{\bkmkstart AAAAAAAEMZ}
{\bkmkend AAAAAAAEMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause a particular channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause channel, or all playing channels if -1 is passed in. You may still halt a paused channel. Note: Only channels which are actively playing will be paused. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_Pause(int channel)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to pause on, or -1 for all channels. \par
}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // pause all sample playback\par
                    Mix_Pause(-1);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_Resume}, {\b Mix_Paused}, {\b Mix_HaltChannel}\par
}}}
{\xe \v Mix_Paused\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_Paused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_Paused (int {\i channel})}
}\par
{\bkmkstart AAAAAAAENA}
{\bkmkend AAAAAAAENA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pause status of a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells you if channel is paused, or not. Note: Does not check if the channel has been halted after it was paused, which may seem a little weird. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_Paused(int channel)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to test whether it is paused or not. -1 will tell you how many channels are paused. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero if the channel is not paused. Otherwise if you passed in -1, the number of paused channels is returned. If you passed in a specific channel, then 1 is returned if it is paused. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // check the pause status on all channels\par
                    printf("%d channels are paused\\n", Mix_Paused(-1));\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_Playing}, {\b Mix_Pause}, {\b Mix_Resume}\par
}}}
{\xe \v Mix_PausedMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_PausedMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_PausedMusic ()}
}\par
{\bkmkstart AAAAAAAENB}
{\bkmkend AAAAAAAENB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test whether music is paused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells you if music is paused, or not. Note: Does not check if the music was been halted after it was paused, which may seem a little weird. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_PausedMusic()\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero if music is not paused. 1 if it is paused. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // check the music pause status\par
                    printf("music is%s paused\\n", Mix_PausedMusic()?"":" not");\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PlayingMusic}, {\b Mix_PauseMusic}, {\b Mix_ResumeMusic}\par
}}}
{\xe \v Mix_PauseMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_PauseMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_PauseMusic ()}
}\par
{\bkmkstart AAAAAAAENC}
{\bkmkend AAAAAAAENC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause music. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause the music playback. You may halt paused music. Note: Music can only be paused if it is actively playing. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_PauseMusic()\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // pause music playback\par
                    Mix_PauseMusic();\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_ResumeMusic}, {\b Mix_PausedMusic}, {\b Mix_HaltMusic}\par
}}}
{\xe \v Mix_PlayChannelTimed\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_PlayChannelTimed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_PlayChannelTimed (int {\i channel}, IntPtr {\i chunk}, int {\i loops}, int {\i ticks})}
}\par
{\bkmkstart AAAAAAAEND}
{\bkmkend AAAAAAAEND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play loop and limit by time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the sample is long enough and has enough loops then the sample will stop after ticks milliseconds. Otherwise this function is the same as Mix_PlayChannel. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_PlayChannelTimed(int channel, Mix_Chunk *chunk, int loops, int ticks)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to play on, or -1 for the first free unreserved channel. \par
{\i chunk} Sample to play. \par
{\i loops} Number of loops, -1 is infinite loops. Passing one here plays the sample twice (1 loop). \par
{\i ticks} Millisecond limit to play sample, at most. If not enough loops or the sample chunk is not long enough, then the sample may stop before this timeout occurs. -1 means play forever. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the channel the sample is played on. On any errors, -1 is returned. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // play sample on first free unreserved channel\par
                                // play it for half a second\par
                                // Mix_Chunk *sample; //previously loaded\par
                                if(Mix_PlayChannelTimed(-1, sample, -1 , 500)==-1) \par
                        \{\par
                                printf("Mix_PlayChannel: %s\\n",Mix_GetError());\par
                                // may be critical error, or maybe just no channels were free.\par
                                // you could allocated another channel in that case...\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Mix_PlayChannel, {\b Mix_FadeInChannelTimed}, {\b Mix_FadeOutChannel}, {\b Mix_ReserveChannels}\par
}}}
{\xe \v Mix_Playing\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_Playing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_Playing (int {\i channel})}
}\par
{\bkmkstart AAAAAAAENE}
{\bkmkend AAAAAAAENE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the active playing status of a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells you if channel is playing, or not. Note: Does not check if the channel has been paused. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_Playing(int channel)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to test whether it is playing or not. -1 will tell you how many channels are playing. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero if the channel is not playing. Otherwise if you passed in -1, the number of channels playing is returned. If you passed in a specific channel, then 1 is returned if it is playing.\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // check how many channels are playing samples\par
                    printf("%d channels are playing\\n", Mix_Playing(-1));\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_Paused}, Mix_PlayChannel, {\b Mix_Pause}\par
}}}
{\xe \v Mix_PlayingMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_PlayingMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_PlayingMusic ()}
}\par
{\bkmkstart AAAAAAAENF}
{\bkmkend AAAAAAAENF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test whether music is playing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tells you if music is actively playing, or not. Note: Does not check if the channel has been paused. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_PlayingMusic() \par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // check if music is playing\par
                    printf("music is%s playing.\\n", Mix_PlayingMusic()?"":" not");\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PausedMusic}, {\b Mix_FadingMusic}, {\b Mix_PlayMusic}\par
}}}
{\xe \v Mix_PlayMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_PlayMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_PlayMusic (IntPtr {\i music}, int {\i loops})}
}\par
{\bkmkstart AAAAAAAENG}
{\bkmkend AAAAAAAENG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music, with looping. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play the loaded music loop times through from start to finish. The previous music will be halted, or if fading out it waits (blocking) for that to finish. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_PlayMusic(Mix_Music *music, int loops)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i music} Pointer to Mix_Music to play. \par
{\i loops} number of times to play through the music. \par0 plays the music zero times... \par-1 plays the music forever (or as close as it can get to that) \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 on success, or -1 on errors. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // play music forever\par
                                // Mix_Music *music; // I assume this has been loaded already\par
                                if(Mix_PlayMusic(music, -1)==-1) \par
                        \{\par
                                printf("Mix_PlayMusic: %s\\n", Mix_GetError());\par
                                // well, there's no music, but most games don't break without music...\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_FadeInMusic}\par
}}}
{\xe \v Mix_QuerySpec\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_QuerySpec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_QuerySpec (out int {\i frequency}, out short {\i format}, out int {\i channels})}
}\par
{\bkmkstart AAAAAAAENH}
{\bkmkend AAAAAAAENH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get output format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the actual audio format in use by the opened audio device. This may or may not match the parameters you passed to Mix_OpenAudio. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_QuerySpec(int *frequency, Uint16 *format, int *channels)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channels} A pointer to an int where the number of audio channels will be stored. 2 will mean stereo, 1 will mean mono. \par
{\i format} A pointer to a short where the output format actually being used by the audio device will be stored. \par
{\i frequency} A pointer to an int where the frequency actually used by the opened audio device will be stored. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 on error. If the device was open the number of times it was opened will be returned. The values of the arguments variables are not set on an error. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // get and print the audio format in use\par
                                int numtimesopened, frequency, channels;\par
                                Uint16 format;\par
                                numtimesopened=Mix_QuerySpec(&amp;frequency, &amp;format, &amp;channels);\par
                                if(!numtimesopened) \par
                        \{\par
                                printf("Mix_QuerySpec: %s\\n",Mix_GetError());\par
                        \}\par
                        else \par
                   \{\par
                        char *format_str="Unknown";\par
                        switch(format) \par
                   \{\par
                        case AUDIO_U8: format_str="U8"; break;\par
                        case AUDIO_S8: format_str="S8"; break;\par
                        case AUDIO_U16LSB: format_str="U16LSB"; break;\par
                        case AUDIO_S16LSB: format_str="S16LSB"; break;\par
                        case AUDIO_U16MSB: format_str="U16MSB"; break;\par
                        case AUDIO_S16MSB: format_str="S16MSB"; break;\par
                   \}\par
                        printf("opened=%d times  frequency=%dHz  format=%s  channels=%d",\par
                        numtimesopened, frequency, format, channels);\par
                   \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_OpenAudio}\par
}}}
{\xe \v Mix_QuickLoad_RAW\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_QuickLoad_RAW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Sdl.Mix_QuickLoad_RAW (IntPtr {\i mem}, int {\i len})}
}\par
{\bkmkstart AAAAAAAENI}
{\bkmkend AAAAAAAENI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load raw audio data of the mixer format from a memory buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load mem as a raw sample. The data in mem must be already in the output format. If you aren't sure what you are doing, this is not a good function for you! \par
Note: This function does very little checking. If the format mismatches the output format it will not return an error. This is probably a dangerous function to use. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Chunk *Mix_QuickLoad_RAW(Uint8 *mem)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i len} \par
{\i mem} Memory buffer containing a WAVE file in output format. Load mem as a raw sample. The data in mem must be already in the output format. If you aren't sure what you are doing, this is not a good function for you! \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a pointer to the sample as a {\b Mix_Chunk}. NULL is returned on errors, such as when out of memory. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // quick-load a raw sample from memory\par
                                // Uint8 *raw; // I assume you have the raw data here,\par
                                // or compiled in the program...\par
                                Mix_Chunk *raw_chunk;\par
                                if(!(raw_chunk=Mix_QuickLoad_RAW(raw))) \par
                        \{\par
                                printf("Mix_QuickLoad_RAW: %s\\n", Mix_GetError());\par
                                // handle error\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Mix_LoadWAV, {\b Mix_QuickLoad_WAV}, {\b Mix_FreeChunk}\par
}}}
{\xe \v Mix_QuickLoad_WAV\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_QuickLoad_WAV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Sdl.Mix_QuickLoad_WAV (IntPtr {\i mem})}
}\par
{\bkmkstart AAAAAAAENJ}
{\bkmkend AAAAAAAENJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a wave file of the mixer format from a memory buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load mem as a WAVE/RIFF file into a new sample. The WAVE in mem must be already in the output format. It would be better to use Mix_LoadWAV_RW if you aren't sure. Note: This function does very little checking. If the format mismatches the output format, or if the buffer is not a WAVE, it will not return an error. This is probably a dangerous function to use. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mix_Chunk *Mix_QuickLoad_WAV(Uint8 *mem)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mem} Memory buffer containing a WAVE file in output format. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a pointer to the sample as a {\b Mix_Chunk}. NULL is returned on errors. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // quick-load a wave from memory\par
                                // Uint8 *wave; // I assume you have the wave loaded raw,\par
                                // or compiled in the program...\par
                                Mix_Chunk *wave_chunk;\par
                                if(!(wave_chunk=Mix_QuickLoad_WAV(wave))) \par
                        \{\par
                                printf("Mix_QuickLoad_WAV: %s\\n", Mix_GetError());\par
                                // handle error\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Mix_LoadWAV, {\b Mix_QuickLoad_RAW}, {\b Mix_FreeChunk}\par
}}}
{\xe \v Mix_RegisterEffect\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_RegisterEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_RegisterEffect (int {\i chan}, MixEffectFunctionDelegate {\i f}, MixEffectDoneDelegate {\i d}, IntPtr {\i arg})}
}\par
{\bkmkstart AAAAAAAENK}
{\bkmkend AAAAAAAENK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook a processor to a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook a processor function f into a channel for post processing effects. You may just be reading the data and displaying it, or you may be altering the stream to add an echo. Most processors also have state data that they allocate as they are in use, this would be stored in the arg pointer data space. When a processor is finished being used, any function passed into d will be called, which is when your processor should clean up the data in the arg data space. \par
The effects are put into a linked list, and always appended to the end, meaning they always work on previously registered effects output. Effects may be added multiple times in a row. Effects are cumulative this way. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_RegisterEffect(int chan, Mix_EffectFunc_t f, Mix_EffectDone_t d, void *arg)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i f} The function pointer for the effects processor. \par
{\i arg} \par
{\i chan} channel number to register f and d on. Use MIX_CHANNEL_POST to process the postmix stream.\par
{\i d} The function pointer for any cleanup routine to be called when the channel is done playing a sample. This may be NULL for any processors that don't need to clean up any memory or other dynamic data. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero on errors, such as a nonexisting channel \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // make a passthru processor function that does nothing...\par
                                void noEffect(int chan, void *stream, int len, void *udata)\par
                                \{\par
                                        // you could work with stream here...\par
                                \}\par
                                ...\par
                                // register noEffect as a postmix processor\par
                                if(!Mix_RegisterEffect(MIX_CHANNEL_POST, noEffect, NULL, NULL)) \par
                        \{\par
                                printf("Mix_RegisterEffect: %s\\n", Mix_GetError());\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_UnregisterEffect}, {\b Mix_UnregisterAllEffects}\par
}}}
{\xe \v Mix_ReserveChannels\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_ReserveChannels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_ReserveChannels (int {\i num})}
}\par
{\bkmkstart AAAAAAAENL}
{\bkmkend AAAAAAAENL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prevent channels from being used in default group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserve num channels from being used when playing samples when passing in -1 as a channel number to playback functions. The channels are reserved starting from channel 0 to num-1. Passing in zero will unreserve all channels. Normally SDL_mixer starts without any channels reserved. \par
The following functions are affected by this setting: \parMix_PlayChannel \par{\b Mix_PlayChannelTimed} \parMix_FadeInChannel \par{\b Mix_FadeInChannelTimed}  \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_ReserveChannels(int num)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i num} Number of channels to reserve from default mixing. Zero removes all reservations. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of channels reserved. Never fails, but may return less channels than you ask for, depending on the number of channels previously allocated. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                      // reserve the first 8 mixing channels\par
                                int reserved_count;\par
                                reserved_count=Mix_ReserveChannels(8);\par
                                if(reserved_count!=8) \par
                        \{\par
                                printf("reserved %d channels from default mixing.\\n",reserved_count);\par
                                printf("8 channels were not reserved!\\n");\par
                                // this might be a critical error...\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_AllocateChannels}\par
}}}
{\xe \v Mix_Resume\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_Resume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_Resume (int {\i channel})}
}\par
{\bkmkstart AAAAAAAENM}
{\bkmkend AAAAAAAENM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume a paused channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unpause channel, or all playing and paused channels if -1 is passed in. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_Resume(int channel)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to resume playing, or -1 for all channels. \par
}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // resume playback on all previously active channels\par
                    Mix_Resume(-1);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_Pause}, {\b Mix_Paused}\par
}}}
{\xe \v Mix_ResumeMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_ResumeMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_ResumeMusic ()}
}\par
{\bkmkstart AAAAAAAENN}
{\bkmkend AAAAAAAENN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume paused music. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unpause the music. This is safe to use on halted, paused, and already playing music. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_ResumeMusic() \par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // resume music playback\par
                    Mix_ResumeMusic();\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PauseMusic}, {\b Mix_PausedMusic}\par
}}}
{\xe \v Mix_RewindMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_RewindMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_RewindMusic ()}
}\par
{\bkmkstart AAAAAAAENO}
{\bkmkend AAAAAAAENO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewind music to beginning. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewind the music to the start. This is safe to use on halted, paused, and already playing music. It is not useful to rewind the music immediately after starting playback, because it starts at the beginning by default. \par
This function only works for these streams: MOD, OGG, MP3, Native MIDI. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_RewindMusic() \par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // rewind music playback to the start\par
                    Mix_RewindMusic();\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PlayMusic}\par
}}}
{\xe \v Mix_SetDistance\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_SetDistance (int {\i channel}, byte {\i distance})}
}\par
{\bkmkstart AAAAAAAENP}
{\bkmkend AAAAAAAENP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Distance attenuation (volume). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This effect simulates a simple attenuation of volume due to distance. The volume never quite reaches silence, even at max distance. NOTE: Using a distance of 0 will cause the effect to unregister itself from channel. You cannot unregister it any other way, unless you use Mix_UnregisterAllEffects on the channel. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_SetDistance(int channel, Uint8 distance)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel number to register this effect on. Use MIX_CHANNEL_POST to process the postmix stream. \par
{\i distance} Specify the distance from the listener, from 0(close/loud) to 255(far/quiet). \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero on errors, such as an invalid channel, or if Mix_RegisterEffect failed. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // distance channel 1 to be farthest away\par
                                if(!Mix_SetDistance(1, 255)) \par
                        \{\par
                                printf("Mix_SetDistance: %s\\n", Mix_GetError());\par
                                // no distance, is it ok?\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetPosition}, {\b Mix_UnregisterAllEffects}\par
}}}
{\xe \v Mix_SetMusicCMD\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetMusicCMD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_SetMusicCMD (string {\i command})}
}\par
{\bkmkstart AAAAAAAENQ}
{\bkmkend AAAAAAAENQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use external program for music playback. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup a command line music player to use to play music. Any music playing will be halted. The music file to play is set by calling {\b Mix_LoadMUS}(filename), and the filename is appended as the last argument on the commandline. This allows you to reuse the music command to play multiple files. The command will be sent signals SIGTERM to halt, SIGSTOP to pause, and SIGCONT to resume. The command program should react correctly to those signals for it to function properly with SDL_Mixer. {\b Mix_VolumeMusic} has no effect when using an external music player, and Mix_GetError will have an error code set. You should set the music volume in the music player's command if the music player supports that. Looping music works, by calling the command again when the previous music player process has ended. Playing music through a command uses a forked process to execute the music command. \par
To use the internal music players set the command to NULL. \par
NOTE: External music is not mixed by SDL_mixer, so no post-processing hooks will be for music. \par
NOTE: Playing music through an external command may not work if the sound driver does not support multiple openings of the audio device, since SDL_Mixer already has the audio device open for playing samples through channels. \par
NOTE: Commands are not totally portable, so be careful. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_SetMusicCMD(const char *command)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i command} System command to play the music. Should be a complete command, as if typed in to the command line, but it should expect the filename to be added as the last argument. NULL will turn off using an external command for music, returning to the internal music playing functionality. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 on success, or -1 on any errors, such as running out of memory. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // use mpg123 to play music\par
                                Mix_Music *music=NULL;\par
                                if(Mix_SetMusicCMD("mpg123 -q")==-1) \par
                        \{\par
                                perror("Mix_SetMusicCMD");\par
                        \} \par
                        else \par
                   \{\par
                        // play some mp3 file\par
                        music=Mix_LoadMUS("music.mp3");\par
                        if(music) \par
                   \{\par
                        Mix_PlayMusic(music,1);\par
                   \}\par
                   \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_PlayMusic}, {\b Mix_VolumeMusic}\par
}}}
{\xe \v Mix_SetMusicPosition\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetMusicPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_SetMusicPosition (double {\i position})}
}\par
{\bkmkstart AAAAAAAENR}
{\bkmkend AAAAAAAENR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set position of playback in stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position of the currently playing music. The position takes different meanings for different music sources. It only works on the music sources listed below. {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     MOD \par
                    The double is cast to Uint16 and used for a pattern number in the module.\par
                    Passing zero is similar to rewinding the song. \par
                    OGG \par
                    Jumps to position seconds from the beginning of the song. \par
                    MP3 \par
                    Jumps to position seconds from the current position in the stream.\par
}
 So you may want to call Mix_RewindMusic before this. Does not go in reverse...negative values do nothing. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_SetMusicPosition(double position)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i position} Position to play from.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 on success, or -1 if the codec doesn't support this function. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // skip one minute into the song, from the start\par
                    // this assumes you are playing an MP3\par
                                Mix_RewindMusic();\par
                                if(Mix_SetMusicPosition(60.0)==-1) \par
                        \{\par
                                printf("Mix_SetMusicPosition: %s\\n", Mix_GetError());\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_FadeInMusicPos}\par
}}}
{\xe \v Mix_SetPanning\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetPanning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_SetPanning (int {\i channel}, byte {\i left}, byte {\i right})}
}\par
{\bkmkstart AAAAAAAENS}
{\bkmkend AAAAAAAENS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stereo panning. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This effect will only work on stereo audio. Meaning you called Mix_OpenAudio with 2 channels (MIX_DEFAULT_CHANNELS). The easiest way to do true panning is to call Mix_SetPanning(channel, left, 254 - left); so that the total volume is correct, if you consider the maximum volume to be 127 per channel for center, or 254 max for left, this works, but about halves the effective volume. \par
This Function registers the effect for you, so don't try to Mix_RegisterEffect it yourself. \par
NOTE: Setting both left and right to 255 will unregister the effect from channel. You cannot unregister it any other way, unless you use Mix_UnregisterAllEffects on the channel. \par
NOTE: Using this function on a mono audio device will not register the effect, nor will it return an error status. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_SetPanning(int channel, Uint8 left, Uint8 right)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel number to register this effect on. Use MIX_CHANNEL_POST to process the postmix stream. \par
{\i left} Volume for the left channel, range is 0(silence) to 255(loud) \par
{\i right} Volume for the left channel, range is 0(silence) to 255(loud) \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero on errors, such as bad channel, or if Mix_RegisterEffect failed. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // pan channel 1 halfway to the left\par
                                if(!Mix_SetPanning(1, 255, 127)) \par
                        \{\par
                                printf("Mix_SetPanning: %s\\n", Mix_GetError());\par
                                // no panning, is it ok?\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetPosition}, {\b Mix_UnregisterAllEffects}\par
}}}
{\xe \v Mix_SetPosition\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_SetPosition (int {\i channel}, short {\i angle}, byte {\i distance})}
}\par
{\bkmkstart AAAAAAAENT}
{\bkmkend AAAAAAAENT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Panning(angular) and distance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_SetPosition(int channel, Sint16 angle, Uint8 distance)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel number to register this effect on. Use MIX_CHANNEL_POST to process the postmix stream. \par
{\i angle} Direction in relation to forward from 0 to 360 degrees. Larger angles will be reduced to this range using angles % 360. 0 = directly in front. 90 = directly to the right. 180 = directly behind. 270 = directly to the left. So you can see it goes clockwise starting at directly in front. This ends up being similar in effect to Mix_SetPanning. \par
{\i distance} The distance from the listener, from 0(near/loud) to 255(far/quiet). This is the same as the Mix_SetDistance effect. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero on errors, such as an invalid channel, or if Mix_RegisterEffect failed. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // set channel 2 to be behind and right, and 100 units away\par
                                if(!Mix_SetPosition(2, 135, 100)) \par
                        \{\par
                                printf("Mix_SetPosition: %s\\n", Mix_GetError());\par
                                // no position effect, is it ok?\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_SetPanning}, {\b Mix_SetDistance}, {\b Mix_UnregisterAllEffects}\par
}}}
{\xe \v Mix_SetPostMix\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetPostMix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Sdl.Mix_SetPostMix (MixFunctionDelegate {\i mix_func}, IntPtr {\i arg})}
}\par
{\bkmkstart AAAAAAAENU}
{\bkmkend AAAAAAAENU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook in a postmix processor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook a processor function mix_func to the postmix stream for post processing effects. You may just be reading the data and displaying it, or you may be altering the stream to add an echo. Most processors also have state data that they allocate as they are in use, this would be stored in the arg pointer data space. This processor is never really finished, until the audio device is closed, or you pass NULL as the mix_func. \par
There can only be one postmix function used at a time through this method. Use Mix_RegisterEffect(MIX_CHANNEL_POST, mix_func, NULL, arg) to use multiple postmix processors. \par
This postmix processor is run AFTER all the registered postmixers set up by Mix_RegisterEffect. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void Mix_SetPostMix(void (*mix_func)(void *udata, Uint8 *stream, int len), void *arg)\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // make a passthru processor function that does nothing...\par
                                void noEffect(void *udata, Uint8 *stream, int len)\par
                                \{\par
                                        // you could work with stream here...\par
                                \}\par
                                ...\par
                                // register noEffect as a postmix processor\par
                                Mix_SetPostMix(noEffect, NULL);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mix_func} The function pointer for the postmix processor. NULL unregisters the current postmixer.\par
{\i arg} A pointer to data to pass into the mix_func's udata parameter. It is a good place to keep the state data for the processor, especially if the processor is made to handle multiple channels at the same time. This may be NULL, depending on the processor.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_RegisterEffect}\par
}}}
{\xe \v Mix_SetReverseStereo\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetReverseStereo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_SetReverseStereo (int {\i channel}, int {\i flip})}
}\par
{\bkmkstart AAAAAAAENV}
{\bkmkend AAAAAAAENV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swap stereo left and right. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple reverse stereo, swaps left and right channel sound. \par
NOTE: Using a flip of 0, will cause the effect to unregister itself from channel. You cannot unregister it any other way, unless you use Mix_UnregisterAllEffects on the channel. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_SetReverseStereo(int channel, int flip)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel number to register this effect on. Use MIX_CHANNEL_POST to process the postmix stream. \par
{\i flip} Must be non-zero to work, means nothing to the effect processor itself. set to zero to unregister the effect from channel. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero on errors, such as an invalid channel, or if Mix_RegisterEffect failed. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // set the total mixer output to be reverse stereo\par
                                if(!Mix_SetReverseStereo(MIX_CHANNEL_POST, 1)) \par
                        \{\par
                                printf("Mix_SetReverseStereo: %s\\n", Mix_GetError());\par
                                // no reverse stereo, is it ok?\par
                        \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_UnregisterAllEffects}\par
}}}
{\xe \v Mix_SetSynchroValue\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_SetSynchroValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_SetSynchroValue (int {\i value})}
}\par
{\bkmkstart AAAAAAAENW}
{\bkmkend AAAAAAAENW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchro value is set by MikMod from modules while playing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_SetSynchroValue(int value)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_GetSynchroValue}\par
}}}
{\xe \v Mix_UnregisterAllEffects\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_UnregisterAllEffects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_UnregisterAllEffects (int {\i channel})}
}\par
{\bkmkstart AAAAAAAENX}
{\bkmkend AAAAAAAENX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unhook all processors from a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This removes all effects registered to channel. If the channel is active all the registered effects will have their Mix_EffectDone_t functions called, if they were specified in Mix_RegisterEffect. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_UnregisterAllEffects(int channel)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to remove all effects from. Use MIX_CHANNEL_POST for the postmix stream. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero on errors, such as channel not existing. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // remove all effects from channel 0\par
                                if(!Mix_UnregisterAllEffects(0)) \par
                        \{\par
                                printf("Mix_UnregisterAllEffects: %s\\n", Mix_GetError());\par
                        \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_UnregisterEffect}, {\b Mix_RegisterEffect}\par
}}}
{\xe \v Mix_UnregisterEffect\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_UnregisterEffect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_UnregisterEffect (int {\i chan}, MixEffectFunctionDelegate {\i f})}
}\par
{\bkmkstart AAAAAAAENY}
{\bkmkend AAAAAAAENY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unhook a processor from a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove the oldest (first found) registered effect function f from the effect list for channel. This only removes the first found occurance of that function, so it may need to be called multiple times if you added the same function multiple times, just stop removing when Mix_UnregisterEffect returns an error, to remove all occurances of f from a channel. \par
If the channel is active the registered effect will have its Mix_EffectDone_t function called, if it was specified in Mix_RegisterEffect. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_UnregisterEffect(int channel, Mix_EffectFunc_t f)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i f} The function to remove from channel.\par
{\i chan} Channel number to remove f from as a post processor. \par
}
Use MIX_CHANNEL_POST for the postmix stream.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Zero on errors, such as invalid channel, or effect function not registered on channel. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // unregister the noEffect from the postmix effects\par
                    // this removes all occurances of noEffect registered to the postmix\par
                    while(Mix_UnregisterEffect(MIX_CHANNEL_POST, noEffect));\par
                    // you may print Mix_GetError() if you want to check it.\par
                    // it should say "No such effect registered" after this loop.\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_RegisterEffect}, {\b Mix_UnregisterAllEffects}\par
}}}
{\xe \v Mix_Volume\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_Volume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_Volume (int {\i channel}, int {\i volume})}
}\par
{\bkmkstart AAAAAAAENZ}
{\bkmkend AAAAAAAENZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the mix volume of a channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the volume for any allocated channel. If channel is -1 then all channels at are set at once. The volume is applied during the final mix, along with the sample volume. So setting this volume to 64 will halve the output of all samples played on the specified channel. All channels default to a volume of 128, which is the max. Newly allocated channels will have the max volume set, so setting all channels volumes does not affect subsequent channel allocations. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_Volume(int channel, int volume)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i channel} Channel to set mix volume for. -1 will set the volume for all allocated channels. \par
{\i volume} The volume to use from 0 to MIX_MAX_VOLUME(128). If greater than MIX_MAX_VOLUME, then it will be set to MIX_MAX_VOLUME. If less than 0 then the volume will not be set. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid current volume of the channel. If channel is -1, the average volume is returned. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // set channel 1 to half volume\par
                                Mix_Volume(1,MIX_MAX_VOLUME/2);\par
\par
                                // print the average volume\par
                                printf("Average volume is %d\\n",Mix_Volume(-1,-1));\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_VolumeChunk}, {\b Mix_VolumeMusic}\par
}}}
{\xe \v Mix_VolumeChunk\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_VolumeChunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_VolumeChunk (IntPtr {\i chunk}, int {\i volume})}
}\par
{\bkmkstart AAAAAAAEOA}
{\bkmkend AAAAAAAEOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set mix volume. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set chunk->volume to volume. The volume setting will take effect when the chunk is used on a channel, being mixed into the output. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_VolumeChunk(Mix_Chunk *chunk, int volume)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i chunk} Pointer to the {\b Mix_Chunk} to set the volume in. \par
{\i volume} The volume to use from 0 to MIX_MAX_VOLUME(128). If greater than MIX_MAX_VOLUME, then it will be set to MIX_MAX_VOLUME. If less than 0 then chunk->volume will not be set. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid previous chunk->volume setting. if you passed a negative value for volume then this volume is still the current volume for the chunk. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // set the sample's volume to 1/2\par
                                // Mix_Chunk *sample;\par
                                int previous_volume;\par
                                previous_volume=Mix_VolumeChunk(sample, MIX_MAX_VOLUME/2);\par
                        printf("previous_volume: %d\\n", previous_volume);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_Chunk}\par
}}}
{\xe \v Mix_VolumeMusic\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_VolumeMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Sdl.Mix_VolumeMusic (int {\i volume})}
}\par
{\bkmkstart AAAAAAAEOB}
{\bkmkend AAAAAAAEOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set music volume. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the volume to volume, if it is 0 or greater, and return the previous volume setting. Setting the volume during a fade will not work, the faders use this function to perform their effect! Setting volume while using an external music player set by {\b Mix_SetMusicCMD} will have no effect, and Mix_GetError will show the reason why not. \par
Binds to C-function in SDL_mixer.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int Mix_VolumeMusic(int volume)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i volume} Music volume, from 0 to MIX_MAX_VOLUME(128). Values greater than MIX_MAX_VOLUME will use MIX_MAX_VOLUME. -1 does not set the volume, but does return the current volume setting. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The previous volume setting. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     // set the music volume to 1/2 maximum, and then check it\par
                                printf("volume was    : %d\\n", Mix_VolumeMusic(MIX_MAX_VOLUME/2));\par
                                printf("volume is now : %d\\n", Mix_VolumeMusic(-1));\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_FadeInMusic}, {\b Mix_FadeOutMusic}, {\b Mix_SetMusicCMD}\par
}}}
{\xe \v MixEffectDoneDelegate\:Tao::Sdl}
{\xe \v Tao::Sdl\:MixEffectDoneDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Tao.Sdl.MixEffectDoneDelegate (int {\i chan}, IntPtr {\i udata})}
}\par
{\bkmkstart AAAAAAAEOC}
{\bkmkend AAAAAAAEOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special effect done callback function pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the prototype for effect processing functions. This is called when a channel has finished playing, or halted, or is deallocated. This is also called when a processor is unregistered while processing is active. At that time the effects processing function may want to reset some internal variables or free some memory. It should free memory at least, because the processor could be freed after this call. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void (*Mix_EffectDone_t)(int chan, void *udata)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i chan} The channel number that this effect is effecting now. MIX_CHANNEL_POST is passed in for post processing effects over the final mix. \par
{\i udata} User data pointer that was passed in to Mix_RegisterEffect when registering this effect processor function. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_RegisterEffect}, {\b Mix_UnregisterEffect}\par
}}}
{\xe \v MixEffectFunctionDelegate\:Tao::Sdl}
{\xe \v Tao::Sdl\:MixEffectFunctionDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Tao.Sdl.MixEffectFunctionDelegate (int {\i chan}, IntPtr {\i stream}, int {\i len}, IntPtr {\i udata})}
}\par
{\bkmkstart AAAAAAAEOD}
{\bkmkend AAAAAAAEOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special effect callback function pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the prototype for effect processing functions. These functions are used to apply effects processing on a sample chunk. As a channel plays a sample, the registered effect functions are called. Each effect would then read and perhaps alter the len bytes of stream. It may also be advantageous to keep the effect state in the udata, with would be setup when registering the effect function on a channel. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     void (*Mix_EffectFunc_t)(int chan, void *stream, int len, void *udata)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i chan} The channel number that this effect is effecting now. MIX_CHANNEL_POST is passed in for post processing effects over the final mix. \par
{\i stream} The buffer containing the current sample to process. \par
{\i len} The length of stream in bytes. \par
{\i udata} User data pointer that was passed in to Mix_RegisterEffect when registering this effect processor function. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Mix_RegisterEffect}, {\b Mix_UnregisterEffect}\par
}}}
{\xe \v MixFunctionDelegate\:Tao::Sdl}
{\xe \v Tao::Sdl\:MixFunctionDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Tao.Sdl.MixFunctionDelegate (IntPtr {\i udata}, [Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] byte[] {\i stream}, int {\i len})}
}\par
{\bkmkstart AAAAAAAEOE}
{\bkmkend AAAAAAAEOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MusicFinishedDelegate\:Tao::Sdl}
{\xe \v Tao::Sdl\:MusicFinishedDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Tao.Sdl.MusicFinishedDelegate ()}
}\par
{\bkmkstart AAAAAAAEOF}
{\bkmkend AAAAAAAEOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Mix_Chunk\:Tao::Sdl}
{\xe \v Tao::Sdl\:Mix_Chunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Tao::Sdl.Mix_Chunk}}
}\par
{\bkmkstart AAAAAAAEOG}
{\bkmkend AAAAAAAEOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_SysWMEvent\:Tao::Sdl}
{\xe \v Tao::Sdl\:SDL_SysWMEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Tao::Sdl.SDL_SysWMEvent}}
}\par
{\bkmkstart AAAAAAAEOH}
{\bkmkend AAAAAAAEOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.Aabb Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb}
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aabb} (dReal _minx, dReal _maxx, dReal _miny, dReal _maxy, dReal _minz, dReal _maxz)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b minx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b maxx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b miny}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b maxy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b minz}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b maxz}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Aabb\:Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb\:Aabb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.Aabb.Aabb (dReal {\i _minx}, dReal {\i _maxx}, dReal {\i _miny}, dReal {\i _maxy}, dReal {\i _minz}, dReal {\i _maxz})}
}\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i _minx} \par
{\i _maxx} \par
{\i _miny} \par
{\i _maxy} \par
{\i _minz} \par
{\i _maxz} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v maxx\:Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb\:maxx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.Aabb.maxx}}
}\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxy\:Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb\:maxy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.Aabb.maxy}}
}\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxz\:Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb\:maxz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.Aabb.maxz}}
}\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minx\:Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb\:minx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.Aabb.minx}}
}\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v miny\:Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb\:miny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.Aabb.miny}}
}\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minz\:Tao::Ode::Ode::Aabb}
{\xe \v Tao::Ode::Ode::Aabb\:minz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.Aabb.minz}}
}\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XKeyBoardState.AutoRepeats Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XKeyBoardState::AutoRepeats}
{\xe \v Tao::Platform::X11::XKeyBoardState::AutoRepeats}
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b first}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b last}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v first\:Tao::Platform::X11::XKeyBoardState::AutoRepeats}
{\xe \v Tao::Platform::X11::XKeyBoardState::AutoRepeats\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
- (byte Tao.Platform.X11.XKeyBoardState.AutoRepeats.){\b first}}
}\par
{\bkmkstart AAAAAAAEJL}
{\bkmkend AAAAAAAEJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last\:Tao::Platform::X11::XKeyBoardState::AutoRepeats}
{\xe \v Tao::Platform::X11::XKeyBoardState::AutoRepeats\:last}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
- (byte Tao.Platform.X11.XKeyBoardState.AutoRepeats.){\b last}}
}\par
{\bkmkstart AAAAAAAEJM}
{\bkmkend AAAAAAAEJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVBitStreamFilter Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVBitStreamFilter}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilter}
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b priv_data_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FilterCallback {\b filter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v filter\:Tao::FFmpeg::FFmpeg::AVBitStreamFilter}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilter\:filter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FilterCallback {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilter.filter}}
}\par
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:Tao::FFmpeg::FFmpeg::AVBitStreamFilter}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilter\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilter.name}}
}\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v next\:Tao::FFmpeg::FFmpeg::AVBitStreamFilter}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilter\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilter.next}}
}\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data_size\:Tao::FFmpeg::FFmpeg::AVBitStreamFilter}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilter\:priv_data_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilter.priv_data_size}}
}\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext}
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b priv_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b filter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b parser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v filter\:Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext\:filter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext.filter}}
}\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v next\:Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext.next}}
}\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v parser\:Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext\:parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext.parser}}
}\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data\:Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVBitStreamFilterContext\:priv_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext.priv_data}}
}\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVClass Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVClass}
{\xe \v Tao::FFmpeg::FFmpeg::AVClass}
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b class_name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ItemNameCallback {\b item_name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pAVOption}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v class_name\:Tao::FFmpeg::FFmpeg::AVClass}
{\xe \v Tao::FFmpeg::FFmpeg::AVClass\:class_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVClass.class_name}}
}\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v item_name\:Tao::FFmpeg::FFmpeg::AVClass}
{\xe \v Tao::FFmpeg::FFmpeg::AVClass\:item_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ItemNameCallback {\b Tao.FFmpeg.FFmpeg.AVClass.item_name}}
}\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pAVOption\:Tao::FFmpeg::FFmpeg::AVClass}
{\xe \v Tao::FFmpeg::FFmpeg::AVClass\:pAVOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVClass.pAVOption}}
}\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVUtil.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVCodec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec}
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecType {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecID {\b id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b priv_data_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
InitCallback {\b init}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EncodeCallback {\b encode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CloseCallback {\b close}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DecodeCallback {\b decode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b capabilities}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FlushCallback {\b flush}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b supported_framerates}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pix_fmts}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v capabilities\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:capabilities}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodec.capabilities}}
}\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v close\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CloseCallback {\b Tao.FFmpeg.FFmpeg.AVCodec.close}}
}\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v decode\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:decode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DecodeCallback {\b Tao.FFmpeg.FFmpeg.AVCodec.decode}}
}\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v encode\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:encode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EncodeCallback {\b Tao.FFmpeg.FFmpeg.AVCodec.encode}}
}\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flush\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FlushCallback {\b Tao.FFmpeg.FFmpeg.AVCodec.flush}}
}\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v id\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecID {\b Tao.FFmpeg.FFmpeg.AVCodec.id}}
}\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v init\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InitCallback {\b Tao.FFmpeg.FFmpeg.AVCodec.init}}
}\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVCodec.name}}
}\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v next\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodec.next}}
}\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pix_fmts\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:pix_fmts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodec.pix_fmts}}
}\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data_size\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:priv_data_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodec.priv_data_size}}
}\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v supported_framerates\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:supported_framerates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodec.supported_framerates}}
}\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::FFmpeg::FFmpeg::AVCodec}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodec\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecType {\b Tao.FFmpeg.FFmpeg.AVCodec.type}}
}\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVCodecContext Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext}
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b av_class}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bit_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bit_rate_tolerance}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sub_id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_method}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b extradata}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b extradata_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVRational} {\b time_base}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b gop_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PixelFormat {\b pix_fmt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rate_emu}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DrawhorizBandCallback {\b draw_horiz_band}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sample_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b channels}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SampleFormat {\b sample_fmt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frame_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frame_number}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b real_pict_num}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b delay}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b qcompress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b qblur}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b qmin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b qmax}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_qdiff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_b_frames}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b b_quant_factor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rc_strategy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b b_frame_strategy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hurry_up}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b codec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b priv_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rtp_mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rtp_payload_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RtpCallback {\b rtp_callback}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mv_bits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b header_bits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b i_tex_bits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b p_tex_bits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b i_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b p_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b skip_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b misc_bits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frame_bits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b opaque}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b codec_name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecType {\b codec_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecID {\b codec_id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b codec_tag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b workaround_bugs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luma_elim_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b chroma_elim_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b strict_std_compliance}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b b_quant_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b error_resilience}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GetBufferCallback {\b get_buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReleaseBufferCallback {\b release_buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b has_b_frames}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b block_align}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b parse_only}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mpeg_quant}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b stats_out}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b stats_in}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rc_qsquish}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rc_qmod_amp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rc_qmod_freq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b rc_override}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rc_override_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b rc_eq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rc_max_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rc_min_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rc_buffer_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rc_buffer_aggressivity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b i_quant_factor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b i_quant_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rc_initial_cplx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dct_algo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b lumi_masking}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b temporal_cplx_masking}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b spatial_cplx_masking}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b p_masking}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b dark_masking}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b unused}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b idct_algo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b slice_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b slice_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b error_concealment}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dsp_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bits_per_sample}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b prediction_method}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVRational} {\b sample_aspect_ratio}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b coded_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b debug}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b debug_mv}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64[] {\b error}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mb_qmin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mb_qmax}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_cmp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_sub_cmp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mb_cmp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ildct_cmp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dia_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b last_predictor_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pre_me}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_pre_cmp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pre_dia_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_subpel_quality}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GetFormatCallback {\b get_format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dtg_active_format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_range}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b intra_quant_bias}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b inter_quant_bias}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b color_table_id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b internal_buffer_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b internal_buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b global_quality}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b coder_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b context_model}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b slice_flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xvmc_acceleration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mb_decision}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b intra_matrix}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b inter_matrix}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b stream_codec_tag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b scenechange_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lmin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lmax}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b palctrl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b noise_reduction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RegetBufferCallback {\b reget_buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rc_initial_buffer_occupancy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b inter_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b error_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b antialias_algo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b quantizer_noise_shaping}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b thread_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ExecuteCallback {\b execute}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b thread_opaque}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mb_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b intra_dc_precision}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nsse_weight}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b skip_top}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b skip_bottom}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b profile}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b level}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lowres}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b coded_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b coded_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frame_skip_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frame_skip_factor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frame_skip_exp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b frame_skip_cmp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b border_masking}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mb_lmin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mb_lmax}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b me_penalty_compensation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AVDiscard {\b skip_loop_filter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AVDiscard {\b skip_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bidir_refine}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b brd_scale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b crf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cqp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b keyint_min}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b refs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b chromaoffset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bframebias}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b trellis}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b complexityblur}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b deblockalpha}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b deblockbeta}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b partitions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b directpred}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cutoff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b scenechange_factor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mv0_threshold}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b b_sensitivity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compression_level}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b use_lpc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lpc_coeff_precision}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b min_prediction_order}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_prediction_order}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b prediction_order_method}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b min_partition_order}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_partition_order}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v antialias_algo\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:antialias_algo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.antialias_algo}}
}\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MP3 antialias algorithm, see FF_AA_* below.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v av_class\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:av_class}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.av_class}}
}\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Info on struct for av_log{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
set by avcodec_alloc_context \par}
}}
{\xe \v b_frame_strategy\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:b_frame_strategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.b_frame_strategy}}
}\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v b_quant_factor\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:b_quant_factor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.b_quant_factor}}
}\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
qscale factor between ip and b frames.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v b_quant_offset\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:b_quant_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.b_quant_offset}}
}\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
qscale offset between ip and b frames. if > 0 then the last p frame quantizer will be used (q= lastp_q*factor+offset) if < 0 then normal ratecontrol will be done (q= -normal_q*factor+offset){
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v b_sensitivity\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:b_sensitivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.b_sensitivity}}
}\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
adjusts sensitivity of b_frame_strategy 1{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v bframebias\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:bframebias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.bframebias}}
}\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
influences how often b-frames are used{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v bidir_refine\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:bidir_refine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.bidir_refine}}
}\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v bit_rate\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:bit_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.bit_rate}}
}\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the average bitrate.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user. unused for constant quantizer encoding\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc. 0 or some bitrate if this info is available in the stream \par}
}}
{\xe \v bit_rate_tolerance\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:bit_rate_tolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.bit_rate_tolerance}}
}\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bits the bitstream is allowed to diverge from the reference. the reference can be CBR (for CBR pass1) or VBR (for pass2){
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user. unused for constant quantizer encoding\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v bits_per_sample\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:bits_per_sample}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.bits_per_sample}}
}\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bits per sample/pixel from the demuxer (needed for huffyuv).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v block_align\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:block_align}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.block_align}}
}\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bytes per packet if constant and known or 0 used by some WAV based audio codecs \par
}}
{\xe \v border_masking\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:border_masking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.border_masking}}
}\par
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
border processing masking. raises the quantizer for mbs on the borders of the picture.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v brd_scale\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:brd_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.brd_scale}}
}\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v channels\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:channels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.channels}}
}\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v chroma_elim_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:chroma_elim_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.chroma_elim_threshold}}
}\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
chroma single coeff elimination threshold.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v chromaoffset\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:chromaoffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.chromaoffset}}
}\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
chroma qp offset from luma{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v codec\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:codec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.codec}}
}\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v codec_id\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:codec_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecID {\b Tao.FFmpeg.FFmpeg.AVCodecContext.codec_id}}
}\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v codec_name\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:codec_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVCodecContext.codec_name}}
}\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v codec_tag\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:codec_tag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVCodecContext.codec_tag}}
}\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v codec_type\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:codec_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecType {\b Tao.FFmpeg.FFmpeg.AVCodecContext.codec_type}}
}\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v coded_frame\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:coded_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.coded_frame}}
}\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the picture in the bitstream.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v coded_height\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:coded_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.coded_height}}
}\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coded_width\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:coded_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.coded_width}}
}\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bitsream width / height. may be different from width/height if lowres or other things are used{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user before init if known, codec should override / dynamically change if needed \par}
}}
{\xe \v coder_type\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:coder_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.coder_type}}
}\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
coder type{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v color_table_id\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:color_table_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.color_table_id}}
}\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
color table ID.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: which clrtable should be used for 8bit RGB images table have to be stored somewhere FIXME \par}
}}
{\xe \v complexityblur\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:complexityblur}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.complexityblur}}
}\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reduce fluctuations in qp (before curve compression){
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v compression_level\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:compression_level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.compression_level}}
}\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v context_model\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:context_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.context_model}}
}\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
context model{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v cqp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:cqp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.cqp}}
}\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constant quantization parameter rate control method{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v crf\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:crf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.crf}}
}\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constant rate factor - quality-based VBR - values ~correspond to qps{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v cutoff\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:cutoff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.cutoff}}
}\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
audio cutoff bandwidth (0 means "automatic") . Currently used only by FAAC{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v dark_masking\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:dark_masking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.dark_masking}}
}\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
darkness masking (0-> disabled).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v dct_algo\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:dct_algo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.dct_algo}}
}\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dct algorithm, see FF_DCT_* below.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v deblockalpha\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:deblockalpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.deblockalpha}}
}\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
in-loop deblocking filter alphac0 parameter alpha is in the range -6...6{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v deblockbeta\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:deblockbeta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.deblockbeta}}
}\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
in-loop deblocking filter beta parameter beta is in the range -6...6{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v debug\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.debug}}
}\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
debug.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v debug_mv\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:debug_mv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.debug_mv}}
}\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
debug.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v delay\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.delay}}
}\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of frames the decoded output will be delayed relative to the encoded input.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v dia_size\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:dia_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.dia_size}}
}\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ME diamond size & shape.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v directpred\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:directpred}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.directpred}}
}\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
direct mv prediction mode - 0 (none), 1 (spatial), 2 (temporal){
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v draw_horiz_band\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:draw_horiz_band}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DrawhorizBandCallback {\b Tao.FFmpeg.FFmpeg.AVCodecContext.draw_horiz_band}}
}\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if non NULL, 'draw_horiz_band' is called by the libavcodec decoder to draw an horizontal band. It improve cache usage. Not all codecs can do that. You must check the codec capabilities before{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\i height} the height of the slice \par
{\i y} the y position of the slice \par
{\i type} 1->top field, 2->bottom field, 3->frame \par
{\i offset} offset into the {\b AVFrame.data} from which the slice should be read \par
}
\par}
}}
{\xe \v dsp_mask\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:dsp_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVCodecContext.dsp_mask}}
}\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dsp_mask could be add used to disable unwanted CPU features CPU features (i.e. MMX, SSE. ...)\par
with FORCE flag you may instead enable given CPU features (Dangerous: usable in case of misdetection, improper usage however will result into program crash) \par
}}
{\xe \v dtg_active_format\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:dtg_active_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.dtg_active_format}}
}\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DTG active format information (additionnal aspect ratio information only used in DVB MPEG2 transport streams). 0 if not set.\par
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by decoder \par}
}}
{\xe \v error\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 [] {\b Tao.FFmpeg.FFmpeg.AVCodecContext.error}}
}\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc if flags&CODEC_FLAG_PSNR\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v error_concealment\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:error_concealment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.error_concealment}}
}\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error concealment flags.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v error_rate\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:error_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.error_rate}}
}\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
simulates errors in the bitstream to test error concealment.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v error_resilience\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:error_resilience}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.error_resilience}}
}\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error resilience higher values will detect more errors but may missdetect some more or less valid parts as errors.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v execute\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExecuteCallback {\b Tao.FFmpeg.FFmpeg.AVCodecContext.execute}}
}\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the codec may call this to execute several independant things. it will return only after finishing all tasks, the user may replace this with some multithreaded implementation, the default implementation will execute the parts serially {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i count} the number of things to execute{
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
encoding: set by lavc, user can override\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
decoding: set by lavc, user can override \par}
\par
}
}}
{\xe \v extradata\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:extradata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.extradata}}
}\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v extradata_size\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:extradata_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.extradata_size}}
}\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.flags}}
}\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODEC_FLAG_*.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v flags2\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:flags2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.flags2}}
}\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODEC_FLAG2_*.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v frame_bits\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:frame_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.frame_bits}}
}\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bits used for the previously encoded frame.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v frame_number\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:frame_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.frame_number}}
}\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v frame_size\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:frame_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.frame_size}}
}\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
samples per packet. initialized when calling 'init' \par
}}
{\xe \v frame_skip_cmp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:frame_skip_cmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.frame_skip_cmp}}
}\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frame skip comparission function{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v frame_skip_exp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:frame_skip_exp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.frame_skip_exp}}
}\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frame skip exponent{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v frame_skip_factor\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:frame_skip_factor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.frame_skip_factor}}
}\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frame skip factor{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v frame_skip_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:frame_skip_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.frame_skip_threshold}}
}\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frame skip threshold{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v get_buffer\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:get_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GetBufferCallback {\b Tao.FFmpeg.FFmpeg.AVCodecContext.get_buffer}}
}\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
called at the beginning of each frame to get a buffer for it. if pic.reference is set then the frame will be read later by lavc avcodec_align_dimensions() should be used to find the required width and height, as they normally need to be rounded up to the next multiple of 16{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc, user can override \par}
}}
{\xe \v get_format\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:get_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GetFormatCallback {\b Tao.FFmpeg.FFmpeg.AVCodecContext.get_format}}
}\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
callback to negotiate the pixelFormat. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i fmt} is the list of formats which are supported by the codec, its terminated by -1 as 0 is a valid format, the formats are ordered by quality the first is allways the native one \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the choosen format{
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
decoding: set by user, if not set then the native format will always be choosen \par}
}}}
{\xe \v global_quality\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:global_quality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.global_quality}}
}\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
global quality for codecs which cannot change it per frame. this should be proportional to MPEG1/2/4 qscale.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v gop_size\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:gop_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.gop_size}}
}\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v has_b_frames\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:has_b_frames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.has_b_frames}}
}\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if 1 the stream has a 1 frame delay during decoding.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v header_bits\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:header_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.header_bits}}
}\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v height\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.height}}
}\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hurry_up\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:hurry_up}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.hurry_up}}
}\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hurry up amount. deprecated in favor of skip_idct and skip_frame{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. 1-> skip b frames, 2-> skip idct/dequant too, 5-> skip everything except header \par}
}}
{\xe \v i_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:i_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.i_count}}
}\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v i_quant_factor\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:i_quant_factor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.i_quant_factor}}
}\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
qscale factor between p and i frames. if > 0 then the last p frame quantizer will be used (q= lastp_q*factor+offset) if < 0 then normal ratecontrol will be done (q= -normal_q*factor+offset){
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v i_quant_offset\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:i_quant_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.i_quant_offset}}
}\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
qscale offset between p and i frames.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v i_tex_bits\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:i_tex_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.i_tex_bits}}
}\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v idct_algo\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:idct_algo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.idct_algo}}
}\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
idct algorithm, see FF_IDCT_* below.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v ildct_cmp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:ildct_cmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.ildct_cmp}}
}\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
interlaced dct compare function{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v inter_matrix\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:inter_matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.inter_matrix}}
}\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
custom inter quantization matrix{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user, can be NULL\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v inter_quant_bias\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:inter_quant_bias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.inter_quant_bias}}
}\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inter quantizer bias.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v inter_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:inter_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.inter_threshold}}
}\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v internal_buffer\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:internal_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.internal_buffer}}
}\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
internal_buffers. Don't touch, used by lavc default_get_buffer() \par
}}
{\xe \v internal_buffer_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:internal_buffer_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.internal_buffer_count}}
}\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
internal_buffer count. Don't touch, used by lavc default_get_buffer() \par
}}
{\xe \v intra_dc_precision\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:intra_dc_precision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.intra_dc_precision}}
}\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
precision of the intra dc coefficient - 8.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v intra_matrix\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:intra_matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.intra_matrix}}
}\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
custom intra quantization matrix{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user, can be NULL\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v intra_quant_bias\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:intra_quant_bias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.intra_quant_bias}}
}\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
intra quantizer bias.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v keyint_min\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:keyint_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.keyint_min}}
}\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum gop size{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v last_predictor_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:last_predictor_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.last_predictor_count}}
}\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
amount of previous MV predictors (2a+1 x 2a+1 square).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v level\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.level}}
}\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
level{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v lmax\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:lmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.lmax}}
}\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum lagrange multipler{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v lmin\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:lmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.lmin}}
}\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum lagrange multipler{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v lowres\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:lowres}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.lowres}}
}\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
low resolution decoding. 1-> 1/2 size, 2->1/4 size{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v lpc_coeff_precision\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:lpc_coeff_precision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.lpc_coeff_precision}}
}\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LPC coefficient precision - used by FLAC encoder{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v luma_elim_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:luma_elim_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.luma_elim_threshold}}
}\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
luma single coeff elimination threshold.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v lumi_masking\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:lumi_masking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.lumi_masking}}
}\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
luminance masking (0-> disabled).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v max_b_frames\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:max_b_frames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.max_b_frames}}
}\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum number of b frames between non b frames. note: the output will be delayed by max_b_frames+1 relative to the input{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v max_partition_order\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:max_partition_order}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.max_partition_order}}
}\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v max_prediction_order\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:max_prediction_order}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.max_prediction_order}}
}\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v max_qdiff\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:max_qdiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.max_qdiff}}
}\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum quantizer difference etween frames.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mb_cmp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mb_cmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mb_cmp}}
}\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
macroblock compare function (not supported yet).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mb_decision\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mb_decision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mb_decision}}
}\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
macroblock decision mode{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mb_lmax\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mb_lmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mb_lmax}}
}\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum MB lagrange multipler.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mb_lmin\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mb_lmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mb_lmin}}
}\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum MB lagrange multipler.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mb_qmax\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mb_qmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mb_qmax}}
}\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum MB quantizer.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mb_qmin\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mb_qmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mb_qmin}}
}\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum MB quantizer.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mb_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mb_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mb_threshold}}
}\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macroblock threshold. under which the user specified macroblock types will be used{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v me_cmp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_cmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_cmp}}
}\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
motion estimation compare function.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v me_method\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_method}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_method}}
}\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
motion estimation algorithm used for video coding. 1 (zero), 2 (full), 3 (log), 4 (phods), 5 (epzs), 6 (x1), 7 (hex), 8 (umh), 9 (iter) [7, 8 are x264 specific, 9 is snow specific]{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: MUST be set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v me_penalty_compensation\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_penalty_compensation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_penalty_compensation}}
}\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v me_pre_cmp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_pre_cmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_pre_cmp}}
}\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
motion estimation pre pass compare function.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v me_range\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_range}}
}\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum motion estimation search range in subpel units. if 0 then no limit\par
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v me_sub_cmp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_sub_cmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_sub_cmp}}
}\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
subpixel motion estimation compare function.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v me_subpel_quality\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_subpel_quality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_subpel_quality}}
}\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
subpel ME quality.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v me_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:me_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.me_threshold}}
}\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motion estimation threshold. under which no motion estimation is performed, but instead the user specified motion vectors are used\par
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v min_partition_order\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:min_partition_order}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.min_partition_order}}
}\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v min_prediction_order\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:min_prediction_order}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.min_prediction_order}}
}\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v misc_bits\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:misc_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.misc_bits}}
}\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mpeg_quant\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mpeg_quant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mpeg_quant}}
}\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0-> h263 quant 1-> mpeg quant.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mv0_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mv0_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mv0_threshold}}
}\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
note: value depends upon the compare functin used for fullpel ME{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v mv_bits\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:mv_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.mv_bits}}
}\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v noise_reduction\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:noise_reduction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.noise_reduction}}
}\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
noise reduction strength{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v nsse_weight\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:nsse_weight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.nsse_weight}}
}\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
noise vs. sse weight for the nsse comparsion function.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v opaque\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:opaque}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.opaque}}
}\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
private data of the user, can be used to carry app specific stuff.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v p_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:p_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.p_count}}
}\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v p_masking\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:p_masking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.p_masking}}
}\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
p block masking (0-> disabled).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v p_tex_bits\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:p_tex_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.p_tex_bits}}
}\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v palctrl\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:palctrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.palctrl}}
}\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Palette control structure{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: ??? (no palette-enabled encoder yet)\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v parse_only\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:parse_only}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.parse_only}}
}\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v partitions\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:partitions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.partitions}}
}\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
macroblock subpartition sizes to consider - p8x8, p4x4, b8x8, i8x8, i4x4{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v pix_fmt\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:pix_fmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PixelFormat {\b Tao.FFmpeg.FFmpeg.AVCodecContext.pix_fmt}}
}\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pixel format, see PIX_FMT_xxx.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc. \par}
}}
{\xe \v pre_dia_size\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:pre_dia_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.pre_dia_size}}
}\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ME pre pass diamond size & shape.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v pre_me\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:pre_me}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.pre_me}}
}\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pre pass for motion estimation.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v prediction_method\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:prediction_method}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.prediction_method}}
}\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
prediction method (needed for huffyuv).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v prediction_order_method\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:prediction_order_method}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.prediction_order_method}}
}\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
search method for selecting prediction order{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v priv_data\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:priv_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.priv_data}}
}\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profile\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:profile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.profile}}
}\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
profile{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v qblur\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:qblur}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.qblur}}
}\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v qcompress\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:qcompress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.qcompress}}
}\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v qmax\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:qmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.qmax}}
}\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum quantizer.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v qmin\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:qmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.qmin}}
}\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum quantizer.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v quantizer_noise_shaping\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:quantizer_noise_shaping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.quantizer_noise_shaping}}
}\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quantizer noise shaping.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rate_emu\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rate_emu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rate_emu}}
}\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frame rate emulation. If not zero lower layer (i.e. format handler) has to read frames at native frame rate.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v rc_buffer_aggressivity\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_buffer_aggressivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_buffer_aggressivity}}
}\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rc_buffer_size\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_buffer_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_buffer_size}}
}\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decoder bitstream buffer size.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_eq\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_eq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_eq}}
}\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rate control equation.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_initial_buffer_occupancy\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_initial_buffer_occupancy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_initial_buffer_occupancy}}
}\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bits which should be loaded into the rc buffer before decoding starts{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_initial_cplx\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_initial_cplx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_initial_cplx}}
}\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initial complexity for pass1 ratecontrol.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_max_rate\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_max_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_max_rate}}
}\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum bitrate.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_min_rate\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_min_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_min_rate}}
}\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum bitrate.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_override\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_override}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_override}}
}\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ratecontrol override, see {\b RcOverride}.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: allocated/set/freed by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_override_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_override_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_override_count}}
}\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rc_qmod_amp\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_qmod_amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_qmod_amp}}
}\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rc_qmod_freq\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_qmod_freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_qmod_freq}}
}\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rc_qsquish\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_qsquish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_qsquish}}
}\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ratecontrol qmin qmax limiting method. 0-> clipping, 1-> use a nice continous function to limit qscale wthin qmin/qmax{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v rc_strategy\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rc_strategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rc_strategy}}
}\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
obsolete FIXME remove \par
}}
{\xe \v real_pict_num\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:real_pict_num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.real_pict_num}}
}\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v refs\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:refs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.refs}}
}\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of reference frames{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v reget_buffer\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:reget_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RegetBufferCallback {\b Tao.FFmpeg.FFmpeg.AVCodecContext.reget_buffer}}
}\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
called at the beginning of a frame to get cr buffer for it. buffer type (size, hints) must be the same. lavc won't check it. lavc will pass previous buffer in pic, function should return same buffer or new buffer with old frame "painted" into it. if pic.data[0] == NULL must behave like {\b get_buffer()}.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc, user can override \par}
}}
{\xe \v release_buffer\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:release_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReleaseBufferCallback {\b Tao.FFmpeg.FFmpeg.AVCodecContext.release_buffer}}
}\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
called to release buffers which where allocated with get_buffer. a released buffer can be reused in {\b get_buffer()} pic.data[*] must be set to NULL{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc, user can override \par}
}}
{\xe \v rtp_callback\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rtp_callback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RtpCallback {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rtp_callback}}
}\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rtp_mode\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rtp_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rtp_mode}}
}\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rtp_payload_size\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:rtp_payload_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.rtp_payload_size}}
}\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v sample_aspect_ratio\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:sample_aspect_ratio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVRational} {\b Tao.FFmpeg.FFmpeg.AVCodecContext.sample_aspect_ratio}}
}\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sample aspect ratio (0 if unknown). numerator and denominator must be relative prime and smaller then 256 for some video standards{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc. \par}
}}
{\xe \v sample_fmt\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:sample_fmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SampleFormat {\b Tao.FFmpeg.FFmpeg.AVCodecContext.sample_fmt}}
}\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
audio sample format.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc. \par}
}}
{\xe \v sample_rate\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:sample_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.sample_rate}}
}\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v scenechange_factor\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:scenechange_factor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.scenechange_factor}}
}\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplied by qscale for each frame and added to scene_change_score{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v scenechange_threshold\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:scenechange_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.scenechange_threshold}}
}\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
scene change detection threshold. 0 is default, larger means fewer detected scene changes{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v skip_bottom\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:skip_bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.skip_bottom}}
}\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of macroblock rows at the bottom which are skipped.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v skip_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:skip_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.skip_count}}
}\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v skip_frame\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:skip_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AVDiscard {\b Tao.FFmpeg.FFmpeg.AVCodecContext.skip_frame}}
}\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v skip_loop_filter\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:skip_loop_filter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AVDiscard {\b Tao.FFmpeg.FFmpeg.AVCodecContext.skip_loop_filter}}
}\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v skip_top\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:skip_top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.skip_top}}
}\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of macroblock rows at the top which are skipped.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v slice_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:slice_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.slice_count}}
}\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
slice count.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user (or 0) \par}
}}
{\xe \v slice_flags\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:slice_flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.slice_flags}}
}\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
slice flags{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user. \par}
}}
{\xe \v slice_offset\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:slice_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.slice_offset}}
}\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
slice offsets in the frame in bytes.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set/allocated by lavc\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set/allocated by user (or NULL) \par}
}}
{\xe \v spatial_cplx_masking\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:spatial_cplx_masking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.spatial_cplx_masking}}
}\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
spatial complexity masking (0-> disabled).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v stats_in\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:stats_in}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVCodecContext.stats_in}}
}\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pass2 encoding statistics input buffer. concatenated stuff from stats_out of pass1 should be placed here{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: allocated/set/freed by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v stats_out\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:stats_out}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVCodecContext.stats_out}}
}\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pass1 encoding statistics output buffer.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by lavc\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v stream_codec_tag\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:stream_codec_tag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVCodecContext.stream_codec_tag}}
}\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fourcc from the AVI stream header (LSB first, so "ABCD" -> ('D'<<24) + ('C'<<16) + ('B'<<8) + 'A'). this is used to workaround some encoder bugs{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user, will be converted to upper case by lavc during init \par}
}}
{\xe \v strict_std_compliance\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:strict_std_compliance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.strict_std_compliance}}
}\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
strictly follow the std (MPEG4, ...).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v sub_id\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:sub_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.sub_id}}
}\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
some codecs needs additionnal format info. It is stored here{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc. (FIXME is this ok?) \par}
}}
{\xe \v temporal_cplx_masking\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:temporal_cplx_masking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVCodecContext.temporal_cplx_masking}}
}\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temporary complexity masking (0-> disabled).{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v thread_count\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:thread_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.thread_count}}
}\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thread count. is used to decide how many independant tasks should be passed to {\b execute()}{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v thread_opaque\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:thread_opaque}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecContext.thread_opaque}}
}\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thread opaque. can be used by {\b execute()} to store some per {\b AVCodecContext} stuff.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by {\b execute()}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by {\b execute()} \par}
}}
{\xe \v time_base\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:time_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVRational} {\b Tao.FFmpeg.FFmpeg.AVCodecContext.time_base}}
}\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v trellis\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:trellis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.trellis}}
}\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
trellis RD quantization{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused \par}
}}
{\xe \v unused\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:unused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.unused}}
}\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v use_lpc\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:use_lpc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.use_lpc}}
}\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sets whether to use LPC mode - used by FLAC encoder{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: unused. \par}
}}
{\xe \v width\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.width}}
}\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v workaround_bugs\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:workaround_bugs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.workaround_bugs}}
}\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
workaround bugs in encoders which sometimes cannot be detected automatically.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by user \par}
}}
{\xe \v xvmc_acceleration\:Tao::FFmpeg::FFmpeg::AVCodecContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecContext\:xvmc_acceleration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecContext.xvmc_acceleration}}
}\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XVideo Motion Acceleration{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: forbidden\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by decoder \par}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVCodecParser Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser}
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b codec_ids}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b priv_data_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ParaerInitCallback {\b parser_init}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ParserParseCallback {\b parser_parse}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ParserCloseCallback {\b parser_close}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SplitCallback {\b split}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v codec_ids\:Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser\:codec_ids}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int [] {\b Tao.FFmpeg.FFmpeg.AVCodecParser.codec_ids}}
}\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v next\:Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecParser.next}}
}\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v parser_close\:Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser\:parser_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ParserCloseCallback {\b Tao.FFmpeg.FFmpeg.AVCodecParser.parser_close}}
}\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v parser_init\:Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser\:parser_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ParaerInitCallback {\b Tao.FFmpeg.FFmpeg.AVCodecParser.parser_init}}
}\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v parser_parse\:Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser\:parser_parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ParserParseCallback {\b Tao.FFmpeg.FFmpeg.AVCodecParser.parser_parse}}
}\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data_size\:Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser\:priv_data_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecParser.priv_data_size}}
}\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v split\:Tao::FFmpeg::FFmpeg::AVCodecParser}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParser\:split}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SplitCallback {\b Tao.FFmpeg.FFmpeg.AVCodecParser.split}}
}\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVCodecParserContext Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b priv_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b parser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b frame_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b cur_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b last_frame_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pict_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b repeat_pict}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b pts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b dts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b last_pts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b last_dts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fetch_timestamp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cur_frame_start_index}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64[] {\b cur_frame_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64[] {\b cur_frame_pts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64[] {\b cur_frame_dts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cur_frame_dts\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:cur_frame_dts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 [] {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.cur_frame_dts}}
}\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_frame_offset\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:cur_frame_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 [] {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.cur_frame_offset}}
}\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_frame_pts\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:cur_frame_pts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 [] {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.cur_frame_pts}}
}\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_frame_start_index\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:cur_frame_start_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.cur_frame_start_index}}
}\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_offset\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:cur_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.cur_offset}}
}\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dts\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:dts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.dts}}
}\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v fetch_timestamp\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:fetch_timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.fetch_timestamp}}
}\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.flags}}
}\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v frame_offset\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:frame_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.frame_offset}}
}\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v last_dts\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:last_dts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.last_dts}}
}\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v last_frame_offset\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:last_frame_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.last_frame_offset}}
}\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v last_pts\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:last_pts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.last_pts}}
}\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v parser\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.parser}}
}\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pict_type\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:pict_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.pict_type}}
}\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:priv_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.priv_data}}
}\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pts\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:pts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.pts}}
}\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v repeat_pict\:Tao::FFmpeg::FFmpeg::AVCodecParserContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVCodecParserContext\:repeat_pict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext.repeat_pict}}
}\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVFormatContext Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext}
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pAVClass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pAVInputFormat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pAVOutputFormat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b priv_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pb}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nb_streams}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr[] {\b streams}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b filename}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b timestamp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b title}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b author}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b copyright}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b comment}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b album}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b year}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tract}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b genre}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ctx_flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b packet_buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b start_time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b duration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b file_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bit_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b cur_st}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b cur_ptr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cur_len}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVPacket} {\b cur_pkt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b data_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b index_built}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mux_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b packet_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b preload}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_delay}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b loop_output}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b loop_input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b probesize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_analyze_duration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b key}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b keylen}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b nb_programs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b programs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecID {\b video_codec_id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecID {\b audio_codec_id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecID {\b subtitle_codec_id}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v album\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:album}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.album}}
}\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v audio_codec_id\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:audio_codec_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecID {\b Tao.FFmpeg.FFmpeg.AVFormatContext.audio_codec_id}}
}\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v author\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:author}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.author}}
}\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bit_rate\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:bit_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.bit_rate}}
}\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v comment\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:comment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.comment}}
}\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v copyright\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:copyright}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.copyright}}
}\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ctx_flags\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:ctx_flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.ctx_flags}}
}\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_len\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:cur_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.cur_len}}
}\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_pkt\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:cur_pkt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVPacket} {\b Tao.FFmpeg.FFmpeg.AVFormatContext.cur_pkt}}
}\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_ptr\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:cur_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.cur_ptr}}
}\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_st\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:cur_st}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.cur_st}}
}\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data_offset\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:data_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFormatContext.data_offset}}
}\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v duration\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFormatContext.duration}}
}\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v file_size\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:file_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFormatContext.file_size}}
}\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v filename\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.filename}}
}\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.flags}}
}\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v genre\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:genre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.genre}}
}\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v index_built\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:index_built}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.index_built}}
}\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v key\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.key}}
}\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v keylen\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:keylen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.keylen}}
}\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v loop_input\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:loop_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.loop_input}}
}\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v loop_output\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:loop_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.loop_output}}
}\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v max_analyze_duration\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:max_analyze_duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.max_analyze_duration}}
}\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v max_delay\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:max_delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.max_delay}}
}\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mux_rate\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:mux_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.mux_rate}}
}\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nb_programs\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:nb_programs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVFormatContext.nb_programs}}
}\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nb_streams\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:nb_streams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.nb_streams}}
}\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v packet_buffer\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:packet_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.packet_buffer}}
}\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v packet_size\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:packet_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.packet_size}}
}\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pAVClass\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:pAVClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.pAVClass}}
}\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pAVInputFormat\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:pAVInputFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.pAVInputFormat}}
}\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pAVOutputFormat\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:pAVOutputFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.pAVOutputFormat}}
}\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pb\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:pb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.pb}}
}\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v preload\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:preload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.preload}}
}\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:priv_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.priv_data}}
}\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v probesize\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:probesize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVFormatContext.probesize}}
}\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v programs\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:programs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatContext.programs}}
}\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v start_time\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:start_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFormatContext.start_time}}
}\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v streams\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:streams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.streams}}
}\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v subtitle_codec_id\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:subtitle_codec_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecID {\b Tao.FFmpeg.FFmpeg.AVFormatContext.subtitle_codec_id}}
}\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v timestamp\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFormatContext.timestamp}}
}\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v title\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVFormatContext.title}}
}\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tract\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:tract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.tract}}
}\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v video_codec_id\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:video_codec_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecID {\b Tao.FFmpeg.FFmpeg.AVFormatContext.video_codec_id}}
}\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v year\:Tao::FFmpeg::FFmpeg::AVFormatContext}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatContext\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatContext.year}}
}\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVFormatParameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVRational} {\b time_base}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sample_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b channels}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PixelFormat {\b pix_fmt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b image_format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b channel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b standard}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mpeg2ts_raw}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mpeg2ts_compute_pcr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b initial_pause}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b prealloced_context}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v channel\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.channel}}
}\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v channels\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:channels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.channels}}
}\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v height\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.height}}
}\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v image_format\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:image_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.image_format}}
}\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v initial_pause\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:initial_pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.initial_pause}}
}\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mpeg2ts_compute_pcr\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:mpeg2ts_compute_pcr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.mpeg2ts_compute_pcr}}
}\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mpeg2ts_raw\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:mpeg2ts_raw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.mpeg2ts_raw}}
}\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pix_fmt\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:pix_fmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PixelFormat {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.pix_fmt}}
}\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v prealloced_context\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:prealloced_context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.prealloced_context}}
}\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v sample_rate\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:sample_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.sample_rate}}
}\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v standard\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:standard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.standard}}
}\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v time_base\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:time_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVRational} {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.time_base}}
}\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v width\:Tao::FFmpeg::FFmpeg::AVFormatParameters}
{\xe \v Tao::FFmpeg::FFmpeg::AVFormatParameters\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFormatParameters.width}}
}\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVFrac Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVFrac}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrac}
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b val}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b num}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b den}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v den\:Tao::FFmpeg::FFmpeg::AVFrac}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrac\:den}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFrac.den}}
}\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num\:Tao::FFmpeg::FFmpeg::AVFrac}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrac\:num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFrac.num}}
}\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v val\:Tao::FFmpeg::FFmpeg::AVFrac}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrac\:val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVFrac.val}}
}\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVFrame Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr[] {\b data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uint8_t *data[4] }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b linesize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int linesize[4]; }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr[] {\b base}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uint8_t *base[4]; }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b key_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pict_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b pts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b coded_picture_number}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b display_picture_number}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b quality}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b age}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b reference}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b qscale_table}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int8_t *qscale_table; }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b qstride}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b mbskip_table}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr[] {\b motion_val}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int16_t (*motion_val[2])[2]; }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b mb_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b motion_subsample_log2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b opaque}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long[] {\b error}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uint64_t error[4]; }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b repeat_pict}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b qscale_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b interlaced_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b top_field_first}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pan_scan}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b AVPanScan} *pan_scan;. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b palette_has_changed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buffer_hints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b dct_coeff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr[] {\b ref_index}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int8_t *ref_index[2]; }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v age\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:age}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.age}}
}\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v base\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr [] {\b Tao.FFmpeg.FFmpeg.AVFrame.base}}
}\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uint8_t *base[4]; }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v buffer_hints\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:buffer_hints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.buffer_hints}}
}\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v coded_picture_number\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:coded_picture_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.coded_picture_number}}
}\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr [] {\b Tao.FFmpeg.FFmpeg.AVFrame.data}}
}\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uint8_t *data[4] }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dct_coeff\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:dct_coeff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFrame.dct_coeff}}
}\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v display_picture_number\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:display_picture_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.display_picture_number}}
}\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v error\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long [] {\b Tao.FFmpeg.FFmpeg.AVFrame.error}}
}\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uint64_t error[4]; }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v interlaced_frame\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:interlaced_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.interlaced_frame}}
}\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v key_frame\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:key_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.key_frame}}
}\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v linesize\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:linesize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int [] {\b Tao.FFmpeg.FFmpeg.AVFrame.linesize}}
}\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int linesize[4]; }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mb_type\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:mb_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFrame.mb_type}}
}\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mbskip_table\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:mbskip_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFrame.mbskip_table}}
}\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mbskip_table[mb]>=1 if MB didn't change stride= mb_width = (width+15)>>4{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: Set by libavcodec. \par}
}}
{\xe \v motion_subsample_log2\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:motion_subsample_log2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.FFmpeg.FFmpeg.AVFrame.motion_subsample_log2}}
}\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v motion_val\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:motion_val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr [] {\b Tao.FFmpeg.FFmpeg.AVFrame.motion_val}}
}\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int16_t (*motion_val[2])[2]; }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v opaque\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:opaque}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFrame.opaque}}
}\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v palette_has_changed\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:palette_has_changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.palette_has_changed}}
}\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pan_scan\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:pan_scan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFrame.pan_scan}}
}\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b AVPanScan} *pan_scan;. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pict_type\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:pict_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.pict_type}}
}\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pts\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:pts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long {\b Tao.FFmpeg.FFmpeg.AVFrame.pts}}
}\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v qscale_table\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:qscale_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVFrame.qscale_table}}
}\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int8_t *qscale_table; }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v qscale_type\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:qscale_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.qscale_type}}
}\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v qstride\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:qstride}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.qstride}}
}\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QP store stride{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: Set by libavcodec. \par}
}}
{\xe \v quality\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:quality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.quality}}
}\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ref_index\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:ref_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr [] {\b Tao.FFmpeg.FFmpeg.AVFrame.ref_index}}
}\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int8_t *ref_index[2]; }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v reference\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.reference}}
}\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
is this picture used as reference{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: unused\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: Set by libavcodec. (before get_buffer() call)). \par}
}}
{\xe \v repeat_pict\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:repeat_pict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.repeat_pict}}
}\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v top_field_first\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:top_field_first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.top_field_first}}
}\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::FFmpeg::FFmpeg::AVFrame}
{\xe \v Tao::FFmpeg::FFmpeg::AVFrame\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVFrame.type}}
}\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVImageFormat Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat}
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b extensions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ImgProbeCallback {\b img_probe}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ImgReadCallback {\b img_read}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b supported_pixel_formats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ImgWriteCallback {\b img_write}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v extensions\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:extensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVImageFormat.extensions}}
}\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVImageFormat.flags}}
}\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v img_probe\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:img_probe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ImgProbeCallback {\b Tao.FFmpeg.FFmpeg.AVImageFormat.img_probe}}
}\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v img_read\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:img_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ImgReadCallback {\b Tao.FFmpeg.FFmpeg.AVImageFormat.img_read}}
}\par
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v img_write\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:img_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ImgWriteCallback {\b Tao.FFmpeg.FFmpeg.AVImageFormat.img_write}}
}\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVImageFormat.name}}
}\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v next\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVImageFormat.next}}
}\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v supported_pixel_formats\:Tao::FFmpeg::FFmpeg::AVImageFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageFormat\:supported_pixel_formats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVImageFormat.supported_pixel_formats}}
}\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVImageInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVImageInfo}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageInfo}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PixelFormat {\b pix_fmt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b interleaved}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVPicture} {\b pict}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v height\:Tao::FFmpeg::FFmpeg::AVImageInfo}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageInfo\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVImageInfo.height}}
}\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v interleaved\:Tao::FFmpeg::FFmpeg::AVImageInfo}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageInfo\:interleaved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVImageInfo.interleaved}}
}\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pict\:Tao::FFmpeg::FFmpeg::AVImageInfo}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageInfo\:pict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVPicture} {\b Tao.FFmpeg.FFmpeg.AVImageInfo.pict}}
}\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pix_fmt\:Tao::FFmpeg::FFmpeg::AVImageInfo}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageInfo\:pix_fmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PixelFormat {\b Tao.FFmpeg.FFmpeg.AVImageInfo.pix_fmt}}
}\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v width\:Tao::FFmpeg::FFmpeg::AVImageInfo}
{\xe \v Tao::FFmpeg::FFmpeg::AVImageInfo\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVImageInfo.width}}
}\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVIndexEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVIndexEntry}
{\xe \v Tao::FFmpeg::FFmpeg::AVIndexEntry}
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b pos}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b timestamp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b min_distance}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVIndexEntry}
{\xe \v Tao::FFmpeg::FFmpeg::AVIndexEntry\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVIndexEntry.flags}}
}\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v min_distance\:Tao::FFmpeg::FFmpeg::AVIndexEntry}
{\xe \v Tao::FFmpeg::FFmpeg::AVIndexEntry\:min_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVIndexEntry.min_distance}}
}\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pos\:Tao::FFmpeg::FFmpeg::AVIndexEntry}
{\xe \v Tao::FFmpeg::FFmpeg::AVIndexEntry\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVIndexEntry.pos}}
}\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v size\:Tao::FFmpeg::FFmpeg::AVIndexEntry}
{\xe \v Tao::FFmpeg::FFmpeg::AVIndexEntry\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVIndexEntry.size}}
}\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v timestamp\:Tao::FFmpeg::FFmpeg::AVIndexEntry}
{\xe \v Tao::FFmpeg::FFmpeg::AVIndexEntry\:timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVIndexEntry.timestamp}}
}\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVInputFormat Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat}
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b long_name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b priv_data_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadProbeCallback {\b read_probe}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadHeaderCallback {\b read_header}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadPacketCallback {\b read_packet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadCloseCallback {\b read_close}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadSeekCallback {\b read_seek}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadTimestampCallback {\b read_timestamp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b extensions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadPlayCallback {\b read_play}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ReadPauseCallback {\b read_pause}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b nextAVInputFormat}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v extensions\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:extensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVInputFormat.extensions}}
}\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVInputFormat.flags}}
}\par
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v long_name\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:long_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVInputFormat.long_name}}
}\par
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVInputFormat.name}}
}\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nextAVInputFormat\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:nextAVInputFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVInputFormat.nextAVInputFormat}}
}\par
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data_size\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:priv_data_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVInputFormat.priv_data_size}}
}\par
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_close\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadCloseCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_close}}
}\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_header\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadHeaderCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_header}}
}\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_packet\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadPacketCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_packet}}
}\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_pause\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadPauseCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_pause}}
}\par
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_play\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_play}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadPlayCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_play}}
}\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_probe\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_probe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadProbeCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_probe}}
}\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_seek\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_seek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadSeekCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_seek}}
}\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_timestamp\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:read_timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ReadTimestampCallback {\b Tao.FFmpeg.FFmpeg.AVInputFormat.read_timestamp}}
}\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v value\:Tao::FFmpeg::FFmpeg::AVInputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVInputFormat\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVInputFormat.value}}
}\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVOption Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVOption}
{\xe \v Tao::FFmpeg::FFmpeg::AVOption}
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVUtil.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVOutputFormat Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b long_name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b mime_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b extensions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b priv_data_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecID {\b audio_codec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CodecID {\b video_codec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WriteHeader {\b write_header}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WritePacket {\b write_packet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WriteTrailer {\b write_trailer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SetParametersCallback {\b set_parameters}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
InterleavePacketCallback {\b interleave_packet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b nextAVOutputFormat}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v audio_codec\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:audio_codec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecID {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.audio_codec}}
}\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v extensions\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:extensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.extensions}}
}\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.flags}}
}\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v interleave_packet\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:interleave_packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
InterleavePacketCallback {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.interleave_packet}}
}\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v long_name\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:long_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.long_name}}
}\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mime_type\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:mime_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.mime_type}}
}\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.name}}
}\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nextAVOutputFormat\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:nextAVOutputFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.nextAVOutputFormat}}
}\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data_size\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:priv_data_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.priv_data_size}}
}\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v set_parameters\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:set_parameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SetParametersCallback {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.set_parameters}}
}\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v video_codec\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:video_codec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CodecID {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.video_codec}}
}\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v write_header\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:write_header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WriteHeader {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.write_header}}
}\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v write_packet\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:write_packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WritePacket {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.write_packet}}
}\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v write_trailer\:Tao::FFmpeg::FFmpeg::AVOutputFormat}
{\xe \v Tao::FFmpeg::FFmpeg::AVOutputFormat\:write_trailer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WriteTrailer {\b Tao.FFmpeg.FFmpeg.AVOutputFormat.write_trailer}}
}\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVPacket Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket}
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b pts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b dts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b stream_index}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b duration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DestructCallback {\b destruct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b priv}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b pos}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVPacket.data}}
}\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v destruct\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:destruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DestructCallback {\b Tao.FFmpeg.FFmpeg.AVPacket.destruct}}
}\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dts\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:dts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVPacket.dts}}
}\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v duration\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPacket.duration}}
}\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPacket.flags}}
}\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pos\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVPacket.pos}}
}\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:priv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVPacket.priv}}
}\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pts\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:pts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVPacket.pts}}
}\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v size\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPacket.size}}
}\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v stream_index\:Tao::FFmpeg::FFmpeg::AVPacket}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacket\:stream_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPacket.stream_index}}
}\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVPacketList Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVPacketList}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacketList}
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVPacket} {\b pkt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v next\:Tao::FFmpeg::FFmpeg::AVPacketList}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacketList\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVPacketList.next}}
}\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pkt\:Tao::FFmpeg::FFmpeg::AVPacketList}
{\xe \v Tao::FFmpeg::FFmpeg::AVPacketList\:pkt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVPacket} {\b Tao.FFmpeg.FFmpeg.AVPacketList.pkt}}
}\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVPaletteControl Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVPaletteControl}
{\xe \v Tao::FFmpeg::FFmpeg::AVPaletteControl}
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b palette_changed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint[] {\b palette}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v palette\:Tao::FFmpeg::FFmpeg::AVPaletteControl}
{\xe \v Tao::FFmpeg::FFmpeg::AVPaletteControl\:palette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] {\b Tao.FFmpeg.FFmpeg.AVPaletteControl.palette}}
}\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v palette_changed\:Tao::FFmpeg::FFmpeg::AVPaletteControl}
{\xe \v Tao::FFmpeg::FFmpeg::AVPaletteControl\:palette_changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPaletteControl.palette_changed}}
}\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVPanScan Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVPanScan}
{\xe \v Tao::FFmpeg::FFmpeg::AVPanScan}
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short[] {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v height\:Tao::FFmpeg::FFmpeg::AVPanScan}
{\xe \v Tao::FFmpeg::FFmpeg::AVPanScan\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPanScan.height}}
}\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v id\:Tao::FFmpeg::FFmpeg::AVPanScan}
{\xe \v Tao::FFmpeg::FFmpeg::AVPanScan\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPanScan.id}}
}\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
id.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v position\:Tao::FFmpeg::FFmpeg::AVPanScan}
{\xe \v Tao::FFmpeg::FFmpeg::AVPanScan\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] {\b Tao.FFmpeg.FFmpeg.AVPanScan.position}}
}\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
position of the top left corner in 1/16 pel for up to 3 fields/frames.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\xe \v width\:Tao::FFmpeg::FFmpeg::AVPanScan}
{\xe \v Tao::FFmpeg::FFmpeg::AVPanScan\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVPanScan.width}}
}\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width and height in 1/16 pel{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
encoding: set by user.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
decoding: set by lavc \par}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVPicture Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVPicture}
{\xe \v Tao::FFmpeg::FFmpeg::AVPicture}
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr[] {\b data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b linesize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:Tao::FFmpeg::FFmpeg::AVPicture}
{\xe \v Tao::FFmpeg::FFmpeg::AVPicture\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr [] {\b Tao.FFmpeg.FFmpeg.AVPicture.data}}
}\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v linesize\:Tao::FFmpeg::FFmpeg::AVPicture}
{\xe \v Tao::FFmpeg::FFmpeg::AVPicture\:linesize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int [] {\b Tao.FFmpeg.FFmpeg.AVPicture.linesize}}
}\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVProbeData Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVProbeData}
{\xe \v Tao::FFmpeg::FFmpeg::AVProbeData}
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b filename}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b buf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buf_size}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:Tao::FFmpeg::FFmpeg::AVProbeData}
{\xe \v Tao::FFmpeg::FFmpeg::AVProbeData\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVProbeData.buf}}
}\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v buf_size\:Tao::FFmpeg::FFmpeg::AVProbeData}
{\xe \v Tao::FFmpeg::FFmpeg::AVProbeData\:buf_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVProbeData.buf_size}}
}\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v filename\:Tao::FFmpeg::FFmpeg::AVProbeData}
{\xe \v Tao::FFmpeg::FFmpeg::AVProbeData\:filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.FFmpeg.FFmpeg.AVProbeData.filename}}
}\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVRational Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVRational}
{\xe \v Tao::FFmpeg::FFmpeg::AVRational}
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b den}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v den\:Tao::FFmpeg::FFmpeg::AVRational}
{\xe \v Tao::FFmpeg::FFmpeg::AVRational\:den}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVRational.den}}
}\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num\:Tao::FFmpeg::FFmpeg::AVRational}
{\xe \v Tao::FFmpeg::FFmpeg::AVRational\:num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVRational.num}}
}\par
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVUtil.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVStream Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream}
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b index}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b codec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVRational} {\b r_frame_rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b priv_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b codec_info_duration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVFrac} {\b pts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AVRational} {\b time_base}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pts_wrap_bits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b stream_copy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AVDiscard {\b discard}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b quality}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b start_time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b duration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b language}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b need_parsing}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pAVCodecParserContext}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b cur_dts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b last_IP_duration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b last_IP_pts}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pAVIndexEntry}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nb_index_entries}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b index_entries_allocated_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b nb_frames}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64[] {\b pts_buffer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v codec\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:codec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVStream.codec}}
}\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v codec_info_duration\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:codec_info_duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVStream.codec_info_duration}}
}\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_dts\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:cur_dts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVStream.cur_dts}}
}\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v discard\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:discard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AVDiscard {\b Tao.FFmpeg.FFmpeg.AVStream.discard}}
}\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v duration\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVStream.duration}}
}\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v id\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.id}}
}\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v index\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.index}}
}\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v index_entries_allocated_size\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:index_entries_allocated_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.index_entries_allocated_size}}
}\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v language\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:language}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FFmpeg.FFmpeg.AVStream.language}}
}\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v last_IP_duration\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:last_IP_duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.last_IP_duration}}
}\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v last_IP_pts\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:last_IP_pts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVStream.last_IP_pts}}
}\par
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nb_frames\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:nb_frames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVStream.nb_frames}}
}\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nb_index_entries\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:nb_index_entries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.nb_index_entries}}
}\par
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v need_parsing\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:need_parsing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.need_parsing}}
}\par
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pAVCodecParserContext\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:pAVCodecParserContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVStream.pAVCodecParserContext}}
}\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pAVIndexEntry\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:pAVIndexEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVStream.pAVIndexEntry}}
}\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v priv_data\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:priv_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVStream.priv_data}}
}\par
{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pts\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:pts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVFrac} {\b Tao.FFmpeg.FFmpeg.AVStream.pts}}
}\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pts_buffer\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:pts_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 [] {\b Tao.FFmpeg.FFmpeg.AVStream.pts_buffer}}
}\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pts_wrap_bits\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:pts_wrap_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.pts_wrap_bits}}
}\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v quality\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:quality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.AVStream.quality}}
}\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v r_frame_rate\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:r_frame_rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVRational} {\b Tao.FFmpeg.FFmpeg.AVStream.r_frame_rate}}
}\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
real base frame rate of the stream. for example if the timebase is 1/90000 and all frames have either approximately 3600 or 1800 timer ticks then r_frame_rate will be 50/1 \par
}}
{\xe \v start_time\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:start_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.AVStream.start_time}}
}\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v stream_copy\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:stream_copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVStream.stream_copy}}
}\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v time_base\:Tao::FFmpeg::FFmpeg::AVStream}
{\xe \v Tao::FFmpeg::FFmpeg::AVStream\:time_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AVRational} {\b Tao.FFmpeg.FFmpeg.AVStream.time_base}}
}\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this is the fundamental unit of time (in seconds) in terms of which frame timestamps are represented. for fixed-fps content, timebase should be 1/framerate and timestamp increments should be identically 1. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVFormat.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVSubtitle Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVSubtitle}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitle}
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b start_display_time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b end_display_time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b num_rects}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b rects}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v end_display_time\:Tao::FFmpeg::FFmpeg::AVSubtitle}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitle\:end_display_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVSubtitle.end_display_time}}
}\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v format\:Tao::FFmpeg::FFmpeg::AVSubtitle}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitle\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FFmpeg.FFmpeg.AVSubtitle.format}}
}\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_rects\:Tao::FFmpeg::FFmpeg::AVSubtitle}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitle\:num_rects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVSubtitle.num_rects}}
}\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rects\:Tao::FFmpeg::FFmpeg::AVSubtitle}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitle\:rects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVSubtitle.rects}}
}\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v start_display_time\:Tao::FFmpeg::FFmpeg::AVSubtitle}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitle\:start_display_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.AVSubtitle.start_display_time}}
}\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.AVSubtitleRect Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b w}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b nb_colors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linesize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b bitmap}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bitmap\:Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect\:bitmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect.bitmap}}
}\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v h\:Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect.h}}
}\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v linesize\:Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect\:linesize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect.linesize}}
}\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nb_colors\:Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect\:nb_colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect.nb_colors}}
}\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v w\:Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect.w}}
}\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x\:Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect.x}}
}\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:Tao::FFmpeg::FFmpeg::AVSubtitleRect}
{\xe \v Tao::FFmpeg::FFmpeg::AVSubtitleRect\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect.y}}
}\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Bind.Properties.Bind Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Bind::Properties::Bind}
{\xe \v Tao::OpenGl::Bind::Properties::Bind}
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Bind} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Bind\:Tao::OpenGl::Bind::Properties::Bind}
{\xe \v Tao::OpenGl::Bind::Properties::Bind\:Bind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.OpenGl.Bind.Properties.Bind.Bind ()}
}\par
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Properties/{\b Bind.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.GlBindGen.Properties.Bind Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind}
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Bind} {\b Default}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputGLClass}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputNamespace}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputPath}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b InputPath}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputPlatformNamespace}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b WriteInternalImportsClass}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputEnumsClass}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputContextClass}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Default\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:Default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Bind} Tao.GlBindGen.Properties.Bind.Default{\f2  [static, get]}}
}\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v InputPath\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:InputPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.InputPath{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OutputContextClass\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:OutputContextClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.OutputContextClass{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OutputEnumsClass\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:OutputEnumsClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.OutputEnumsClass{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OutputGLClass\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:OutputGLClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.OutputGLClass{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OutputNamespace\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:OutputNamespace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.OutputNamespace{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OutputPath\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:OutputPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.OutputPath{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OutputPlatformNamespace\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:OutputPlatformNamespace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.OutputPlatformNamespace{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WriteInternalImportsClass\:Tao::GlBindGen::Properties::Bind}
{\xe \v Tao::GlBindGen::Properties::Bind\:WriteInternalImportsClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Tao.GlBindGen.Properties.Bind.WriteInternalImportsClass{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Properties/{\b Bind.Designer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.BindStreamWriter Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter}
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BindStreamWriter} (string file)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Indent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Unindent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Write} (string value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b WriteLine} (string value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Write} ({\b Bind.Structures.Enum} e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Write} ({\b Bind.Structures.Function} f)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BindStreamWriter\:Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter\:BindStreamWriter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.BindStreamWriter.BindStreamWriter (string {\i file})}
}\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Indent\:Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter\:Indent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.BindStreamWriter.Indent ()}
}\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Unindent\:Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter\:Unindent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.BindStreamWriter.Unindent ()}
}\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Write\:Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.BindStreamWriter.Write ({\b Bind.Structures.Enum} {\i e})}
}\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Write\:Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.BindStreamWriter.Write ({\b Bind.Structures.Function} {\i f})}
}\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Write\:Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Bind.BindStreamWriter.Write (string {\i value})}
}\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WriteLine\:Bind::BindStreamWriter}
{\xe \v Bind::BindStreamWriter\:WriteLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Bind.BindStreamWriter.WriteLine (string {\i value})}
}\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/{\b BindStreamWriter.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.ByteIOContext Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext}
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buffer_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b buf_ptr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b buf_end}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b opaque}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Read_PacketCallback {\b read_packet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WritePacketCallback {\b write_packet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SeekCallback {\b seek}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b pos}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b must_flush}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b eof_reached}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_flag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b is_streamed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_packet_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b checksum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b checksum_ptr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UpdateChecksumCallback {\b update_checksum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b error}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf_end\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:buf_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.ByteIOContext.buf_end}}
}\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v buf_ptr\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:buf_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.ByteIOContext.buf_ptr}}
}\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v buffer\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.ByteIOContext.buffer}}
}\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v buffer_size\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:buffer_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.ByteIOContext.buffer_size}}
}\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v checksum\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:checksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FFmpeg.FFmpeg.ByteIOContext.checksum}}
}\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v checksum_ptr\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:checksum_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.ByteIOContext.checksum_ptr}}
}\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v eof_reached\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:eof_reached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.ByteIOContext.eof_reached}}
}\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v error\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.ByteIOContext.error}}
}\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v is_streamed\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:is_streamed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.ByteIOContext.is_streamed}}
}\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v max_packet_size\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:max_packet_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.ByteIOContext.max_packet_size}}
}\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v must_flush\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:must_flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.ByteIOContext.must_flush}}
}\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v opaque\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:opaque}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FFmpeg.FFmpeg.ByteIOContext.opaque}}
}\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pos\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 {\b Tao.FFmpeg.FFmpeg.ByteIOContext.pos}}
}\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read_packet\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:read_packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Read_PacketCallback {\b Tao.FFmpeg.FFmpeg.ByteIOContext.read_packet}}
}\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v seek\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:seek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SeekCallback {\b Tao.FFmpeg.FFmpeg.ByteIOContext.seek}}
}\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v update_checksum\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:update_checksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UpdateChecksumCallback {\b Tao.FFmpeg.FFmpeg.ByteIOContext.update_checksum}}
}\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v write_flag\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:write_flag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.ByteIOContext.write_flag}}
}\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v write_packet\:Tao::FFmpeg::FFmpeg::ByteIOContext}
{\xe \v Tao::FFmpeg::FFmpeg::ByteIOContext\:write_packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WritePacketCallback {\b Tao.FFmpeg.FFmpeg.ByteIOContext.write_packet}}
}\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVUtil.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.Constant Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant}
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl constant in C# format. Both the constant name and value can be retrieved or set. The value can be either a number, another constant or an alias to a constant. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Constant} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty {\b Constant}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Constant} (string name, string value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\b Constant} with the given name and value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string that represents the full constant declaration without decorations (eg GL_XXX_YYY = (int)0xDEADBEEF or GL_XXX_YYY = GL_ZZZ.FOOBAR). }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the opengl constant (eg. GL_LINES). Undergoes processing unless the Settings.Legacy.NoAdvancedEnumProcessing flag is set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Value}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the value of the opengl constant (eg. 0x00000001). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Reference}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets a string indicating the OpenGL enum reference by this constant. Can be null. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Unchecked}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl constant in C# format. Both the constant name and value can be retrieved or set. The value can be either a number, another constant or an alias to a constant. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Constant\:Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant\:Constant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Constant.Constant ()}
}\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty {\b Constant}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Constant\:Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant\:Constant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Constant.Constant (string {\i name}, string {\i value})}
}\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\b Constant} with the given name and value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i name} The Name of the {\b Constant}.\par
{\i value} The {\b Type} of the {\b Constant}.\par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Constant.ToString ()}
}\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string that represents the full constant declaration without decorations (eg GL_XXX_YYY = (int)0xDEADBEEF or GL_XXX_YYY = GL_ZZZ.FOOBAR). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Name\:Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Constant.Name{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the opengl constant (eg. GL_LINES). Undergoes processing unless the Settings.Legacy.NoAdvancedEnumProcessing flag is set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Reference\:Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant\:Reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Constant.Reference{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets a string indicating the OpenGL enum reference by this constant. Can be null. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Unchecked\:Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant\:Unchecked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Constant.Unchecked{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Value\:Bind::Structures::Constant}
{\xe \v Bind::Structures::Constant\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Constant.Value{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the value of the opengl constant (eg. 0x00000001). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Constant.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.Constants Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants}
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal const int {\b QueuedAlready} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal const int {\b QueuedAfterReading} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal const int {\b QueuedAfterFlush} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal const int {\b CopyFromParent} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal const int {\b CWX} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal const int {\b InputOutput} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal const int {\b InputOnly} = 2\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v CopyFromParent\:Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants\:CopyFromParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal const int {\b Tao.Platform.X11.Constants.CopyFromParent} = 0}
}\par
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CWX\:Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants\:CWX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal const int {\b Tao.Platform.X11.Constants.CWX} = 1}
}\par
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v InputOnly\:Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants\:InputOnly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal const int {\b Tao.Platform.X11.Constants.InputOnly} = 2}
}\par
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v InputOutput\:Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants\:InputOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal const int {\b Tao.Platform.X11.Constants.InputOutput} = 1}
}\par
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QueuedAfterFlush\:Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants\:QueuedAfterFlush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal const int {\b Tao.Platform.X11.Constants.QueuedAfterFlush} = 2}
}\par
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QueuedAfterReading\:Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants\:QueuedAfterReading}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal const int {\b Tao.Platform.X11.Constants.QueuedAfterReading} = 1}
}\par
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QueuedAlready\:Tao::Platform::X11::Constants}
{\xe \v Tao::Platform::X11::Constants\:QueuedAlready}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal const int {\b Tao.Platform.X11.Constants.QueuedAlready} = 0}
}\par
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b API.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dContact Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dContact}
{\xe \v Tao::Ode::Ode::dContact}
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact structure used by contact joint. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dContact} ({\b dSurfaceParameters} _surface, {\b dContactGeom} _geom, {\b dVector3} _fdir1)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dSurfaceParameters} {\b surface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dContactGeom} {\b geom}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} {\b fdir1}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact structure used by contact joint. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dContact\:Tao::Ode::Ode::dContact}
{\xe \v Tao::Ode::Ode::dContact\:dContact}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dContact.dContact ({\b dSurfaceParameters} {\i _surface}, {\b dContactGeom} {\i _geom}, {\b dVector3} {\i _fdir1})}
}\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i _surface} \par
{\i _geom} \par
{\i _fdir1} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v fdir1\:Tao::Ode::Ode::dContact}
{\xe \v Tao::Ode::Ode::dContact\:fdir1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector3} {\b Tao.Ode.Ode.dContact.fdir1}}
}\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v geom\:Tao::Ode::Ode::dContact}
{\xe \v Tao::Ode::Ode::dContact\:geom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dContactGeom} {\b Tao.Ode.Ode.dContact.geom}}
}\par
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v surface\:Tao::Ode::Ode::dContact}
{\xe \v Tao::Ode::Ode::dContact\:surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dSurfaceParameters} {\b Tao.Ode.Ode.dContact.surface}}
}\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dContactGeom Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom}
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact info set by collision functions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} {\b pos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The contact position in global coordinates. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} {\b normal}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A unit length vector that is, generally speaking, perpendicular to the contact surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b depth}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The depth to which the two bodies inter-penetrate each other. If the depth is zero then the two bodies have a grazing contact, i.e. they "only just" touch. However, this is rare - the simulation is not perfectly accurate and will often step the bodies too far so that the depth is nonzero. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dGeomID {\b g1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The geometry objects that collided. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dGeomID {\b g2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b side1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(to be documented) - verbatim from the ODE source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b side2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact info set by collision functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v depth\:Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom\:depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dContactGeom.depth}}
}\par
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The depth to which the two bodies inter-penetrate each other. If the depth is zero then the two bodies have a grazing contact, i.e. they "only just" touch. However, this is rare - the simulation is not perfectly accurate and will often step the bodies too far so that the depth is nonzero. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v g1\:Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom\:g1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dGeomID {\b Tao.Ode.Ode.dContactGeom.g1}}
}\par
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The geometry objects that collided. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v g2\:Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom\:g2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dGeomID {\b Tao.Ode.Ode.dContactGeom.g2}}
}\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v normal\:Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom\:normal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector3} {\b Tao.Ode.Ode.dContactGeom.normal}}
}\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A unit length vector that is, generally speaking, perpendicular to the contact surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pos\:Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector3} {\b Tao.Ode.Ode.dContactGeom.pos}}
}\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The contact position in global coordinates. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v side1\:Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom\:side1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Ode.Ode.dContactGeom.side1}}
}\par
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(to be documented) - verbatim from the ODE source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v side2\:Tao::Ode::Ode::dContactGeom}
{\xe \v Tao::Ode::Ode::dContactGeom\:side2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Ode.Ode.dContactGeom.side2}}
}\par
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.Delegate Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate}
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl function. The return value, function name, function parameters and opengl version can be retrieved or set. }}\par
Inheritance diagram for Bind.Structures.Delegate:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_structures_1_1_delegate.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Delegate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Delegate} ({\b Delegate} d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b CallString} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b DeclarationString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representing the full non-delegate declaration without decorations. (ie "(unsafe) void glXxxYyy(int a, float b, IntPtr c)". }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representing the full delegate declaration without decorations. (ie "(unsafe) void delegate glXxxYyy(int a, float b, IntPtr c)". }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Delegate} {\b GetCLSCompliantDelegate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateWrappers} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TranslateParameters} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b notCLSCompliant} = false\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b CLSCompliant}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the CLSCompliant property. True if the delegate is not CLSCompliant. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Category}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NeedsWrapper}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates whether this function needs to be wrapped with a Marshaling function. This flag is set if a function contains an Array parameter, or returns an Array or string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b Unsafe}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the delegate must be declared as 'unsafe'. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Type} {\b ReturnType}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the return value of the opengl function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the opengl function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterCollection} {\b Parameters}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Version}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the opengl version that introduced this function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Extension}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl function. The return value, function name, function parameters and opengl version can be retrieved or set. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Delegate\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Delegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Delegate.Delegate ()}
}\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Delegate\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Delegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Delegate.Delegate ({\b Delegate} {\i d})}
}\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CallString\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:CallString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Delegate.CallString ()}
}\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CreateWrappers\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:CreateWrappers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.Delegate.CreateWrappers ()}
}\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DeclarationString\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:DeclarationString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Delegate.DeclarationString ()}
}\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representing the full non-delegate declaration without decorations. (ie "(unsafe) void glXxxYyy(int a, float b, IntPtr c)". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GetCLSCompliantDelegate\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:GetCLSCompliantDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Delegate} Bind.Structures.Delegate.GetCLSCompliantDelegate ()}
}\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToString\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Delegate.ToString ()}
}\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representing the full delegate declaration without decorations. (ie "(unsafe) void delegate glXxxYyy(int a, float b, IntPtr c)". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented in {\b Bind.Structures.Function} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABID \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v TranslateParameters\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:TranslateParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Bind.Structures.Delegate.TranslateParameters (){\f2  [protected, virtual]}}
}\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v notCLSCompliant\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:notCLSCompliant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Bind.Structures.Delegate.notCLSCompliant} = false{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Category\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Delegate.Category{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CLSCompliant\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:CLSCompliant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool Bind.Structures.Delegate.CLSCompliant{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the CLSCompliant property. True if the delegate is not CLSCompliant. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Extension\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Extension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Delegate.Extension{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Name\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual string Bind.Structures.Delegate.Name{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the opengl function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented in {\b Bind.Structures.Function} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v NeedsWrapper\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:NeedsWrapper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Delegate.NeedsWrapper{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates whether this function needs to be wrapped with a Marshaling function. This flag is set if a function contains an Array parameter, or returns an Array or string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Parameters\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Parameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ParameterCollection} Bind.Structures.Delegate.Parameters{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReturnType\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:ReturnType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Type} Bind.Structures.Delegate.ReturnType{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the return value of the opengl function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Unsafe\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Unsafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool Bind.Structures.Delegate.Unsafe{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the delegate must be declared as 'unsafe'. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented in {\b Bind.Structures.Function} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABIP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Version\:Bind::Structures::Delegate}
{\xe \v Bind::Structures::Delegate\:Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Delegate.Version{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the opengl version that introduced this function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Delegate.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.DelegateCollection Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::DelegateCollection}
{\xe \v Bind::Structures::DelegateCollection}
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} ({\b Delegate} d)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:Bind::Structures::DelegateCollection}
{\xe \v Bind::Structures::DelegateCollection\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.DelegateCollection.Add ({\b Delegate} {\i d})}
}\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Delegate.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Gdi.DEVMODE Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE}
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b DEVMODE}}  data structure contains information about the initialization and environment of a printer or a display device. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b dmDeviceName}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmSpecVersion}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmDriverVersion}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmDriverExtra}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmFields}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmOrientation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmPaperSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmPaperLength}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmPaperWidth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmScale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmCopies}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmDefaultSource}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmPrintQuality}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmColor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmDuplex}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmYResolution}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmTTOption}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmCollate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b dmFormName}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dmLogPixels}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmBitsPerPel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmPelsWidth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmPelsHeight}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmDisplayFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmDisplayFrequency}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmICMMethod}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmICMIntent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmMediaType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmDitherType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmReserved1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmReserved2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmPanningWidth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dmPanningHeight}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b DEVMODE}}  data structure contains information about the initialization and environment of a printer or a display device. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A device driver's private data follows the public portion of the {\b {\b DEVMODE}}  structure. The size of the public data can vary for different versions of the structure. The {\i dmSize}  member specifies the number of bytes of public data, and the {\i dmDriverExtra}  member specifies the number of bytes of private data. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid User.ChangeDisplaySettings(ref Tao.Platform.Windows.Gdi.DEVMODE, int), User.EnumDisplaySettings\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dmBitsPerPel\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmBitsPerPel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmBitsPerPel}}
}\par
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmCollate\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmCollate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmCollate}}
}\par
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmColor\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmColor}}
}\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmCopies\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmCopies}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmCopies}}
}\par
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDefaultSource\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDefaultSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDefaultSource}}
}\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDeviceName\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDeviceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDeviceName}}
}\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDisplayFlags\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDisplayFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDisplayFlags}}
}\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDisplayFrequency\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDisplayFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDisplayFrequency}}
}\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDitherType\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDitherType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDitherType}}
}\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDriverExtra\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDriverExtra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDriverExtra}}
}\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDriverVersion\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDriverVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDriverVersion}}
}\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmDuplex\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmDuplex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmDuplex}}
}\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmFields\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmFields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmFields}}
}\par
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmFormName\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmFormName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Platform.Windows.Gdi.DEVMODE.dmFormName}}
}\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmICMIntent\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmICMIntent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmICMIntent}}
}\par
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmICMMethod\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmICMMethod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmICMMethod}}
}\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmLogPixels\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmLogPixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmLogPixels}}
}\par
{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmMediaType\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmMediaType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmMediaType}}
}\par
{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmOrientation\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmOrientation}}
}\par
{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPanningHeight\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPanningHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPanningHeight}}
}\par
{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPanningWidth\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPanningWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPanningWidth}}
}\par
{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPaperLength\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPaperLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPaperLength}}
}\par
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPaperSize\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPaperSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPaperSize}}
}\par
{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPaperWidth\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPaperWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPaperWidth}}
}\par
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPelsHeight\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPelsHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPelsHeight}}
}\par
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPelsWidth\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPelsWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPelsWidth}}
}\par
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmPrintQuality\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmPrintQuality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmPrintQuality}}
}\par
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmReserved1\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmReserved1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmReserved1}}
}\par
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmReserved2\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmReserved2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.DEVMODE.dmReserved2}}
}\par
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmScale\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmScale}}
}\par
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmSize\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmSize}}
}\par
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmSpecVersion\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmSpecVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmSpecVersion}}
}\par
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmTTOption\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmTTOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmTTOption}}
}\par
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dmYResolution\:Tao::Platform::Windows::Gdi::DEVMODE}
{\xe \v Tao::Platform::Windows::Gdi::DEVMODE\:dmYResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.DEVMODE.dmYResolution}}
}\par
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Gdi.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dGeomClass Struct Reference\par \pard\plain 
{\tc\tcl2 \v dGeomClass}
{\xe \v dGeomClass}
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bytes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dGetColliderFnFn {\b collider}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dGetAABBFn {\b aabb}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dAABBTestFn {\b aabb_test}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dGeomDtorFn {\b dtor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v aabb\:dGeomClass}
{\xe \v dGeomClass\:aabb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dGetAABBFn {\b dGeomClass.aabb}}
}\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v aabb_test\:dGeomClass}
{\xe \v dGeomClass\:aabb_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dAABBTestFn {\b dGeomClass.aabb_test}}
}\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bytes\:dGeomClass}
{\xe \v dGeomClass\:bytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b dGeomClass.bytes}}
}\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v collider\:dGeomClass}
{\xe \v dGeomClass\:collider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dGetColliderFnFn {\b dGeomClass.collider}}
}\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dtor\:dGeomClass}
{\xe \v dGeomClass\:dtor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dGeomDtorFn {\b dGeomClass.dtor}}
}\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dJointFeedback Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dJointFeedback}
{\xe \v Tao::Ode::Ode::dJointFeedback}
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
During the world time step, the forces that are applied by each joint are computed. These forces are added directly to the joined bodies, and the user normally has no way of telling which joint contributed how much force. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dJointFeedback} ({\b dVector3} _f1, {\b dVector3} _t1, {\b dVector3} _f2, {\b dVector3} _t2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} {\b f1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force applied to body 1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} {\b t1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Torque applied to body 1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} {\b f2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force applied to body 2. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} {\b t2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Torque applied to body 2. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
During the world time step, the forces that are applied by each joint are computed. These forces are added directly to the joined bodies, and the user normally has no way of telling which joint contributed how much force. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If this information is desired then the user can allocate a {\b dJointFeedback} structure and pass its pointer to the dJointSetFeedback() function.\par
The feedback information structure is defined as follows:\par
typedef struct {\b dJointFeedback} \{ {\b dVector3} f1; // force that joint applies to body 1 {\b dVector3} t1; // torque that joint applies to body 1 {\b dVector3} f2; // force that joint applies to body 2 {\b dVector3} t2; // torque that joint applies to body 2 \} {\b dJointFeedback};\par
During the time step any feedback structures that are attached to joints will be filled in with the joint's force and torque information. The {\b dJointGetFeedback()} function returns the current feedback structure pointer, or 0 if none is used (this is the default). dJointSetFeedback() can be passed 0 to disable feedback for that joint.\par
Now for some API design notes. It might seem strange to require that users perform the allocation of these structures. Why not just store the data statically in each joint? The reason is that not all users will use the feedback information, and even when it is used not all joints will need it. It will waste memory to store it statically, especially as this structure could grow to store a lot of extra information in the future.\par
Why not have ODE allocate the structure itself, at the user's request? The reason is that contact joints (which are created and destroyed every time step) would require a lot of time to be spent in memory allocation if feedback is required. Letting the user do the allocation means that a better allocation strategy can be provided, e.g simply allocating them out of a fixed array.\par
The alternative to this API is to have a joint-force callback. This would work of course, but it has a few problems. First, callbacks tend to pollute APIs and sometimes require the user to go through unnatural contortions to get the data to the right place. Second, this would expose ODE to being changed in the middle of a step (which would have bad consequences), and there would have to be some kind of guard against this or a debugging check for it - which would complicate things. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dJointFeedback\:Tao::Ode::Ode::dJointFeedback}
{\xe \v Tao::Ode::Ode::dJointFeedback\:dJointFeedback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dJointFeedback.dJointFeedback ({\b dVector3} {\i _f1}, {\b dVector3} {\i _t1}, {\b dVector3} {\i _f2}, {\b dVector3} {\i _t2})}
}\par
{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v f1\:Tao::Ode::Ode::dJointFeedback}
{\xe \v Tao::Ode::Ode::dJointFeedback\:f1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector3} {\b Tao.Ode.Ode.dJointFeedback.f1}}
}\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force applied to body 1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v f2\:Tao::Ode::Ode::dJointFeedback}
{\xe \v Tao::Ode::Ode::dJointFeedback\:f2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector3} {\b Tao.Ode.Ode.dJointFeedback.f2}}
}\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force applied to body 2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v t1\:Tao::Ode::Ode::dJointFeedback}
{\xe \v Tao::Ode::Ode::dJointFeedback\:t1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector3} {\b Tao.Ode.Ode.dJointFeedback.t1}}
}\par
{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Torque applied to body 1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v t2\:Tao::Ode::Ode::dJointFeedback}
{\xe \v Tao::Ode::Ode::dJointFeedback\:t2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector3} {\b Tao.Ode.Ode.dJointFeedback.t2}}
}\par
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Torque applied to body 2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dMass Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dMass}
{\xe \v Tao::Ode::Ode::dMass}
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Describes the mass parameters of a rigid body. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dMass} (dReal _mass, {\b dVector4} _c, {\b dMatrix3} _I)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b mass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector4} {\b c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dMatrix3} {\b I}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Describes the mass parameters of a rigid body. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mass - the total mass of the rigid body c - center of gravity position in body frame (x,y,z) I - 3x3 inertia tensor in body frame, about POR \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dMass\:Tao::Ode::Ode::dMass}
{\xe \v Tao::Ode::Ode::dMass\:dMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dMass.dMass (dReal {\i _mass}, {\b dVector4} {\i _c}, {\b dMatrix3} {\i _I})}
}\par
{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i _mass} \par
{\i _c} \par
{\i _I} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v c\:Tao::Ode::Ode::dMass}
{\xe \v Tao::Ode::Ode::dMass\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dVector4} {\b Tao.Ode.Ode.dMass.c}}
}\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v I\:Tao::Ode::Ode::dMass}
{\xe \v Tao::Ode::Ode::dMass\:I}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dMatrix3} {\b Tao.Ode.Ode.dMass.I}}
}\par
{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mass\:Tao::Ode::Ode::dMass}
{\xe \v Tao::Ode::Ode::dMass\:mass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMass.mass}}
}\par
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dMatrix3 Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3}
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dMatrix3} (dReal[] values)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal[] {\b ToArray} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M00}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M01}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M02}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M03}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M10}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M12}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M13}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M20}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M21}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M22}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M23}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b this} [int index]{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dMatrix3\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:dMatrix3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dMatrix3.dMatrix3 (dReal[] {\i values})}
}\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i values} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToArray\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:ToArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal [] Tao.Ode.Ode.dMatrix3.ToArray ()}
}\par
{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v M00\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M00}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M00}}
}\par
{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M01\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M01}}
}\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M02\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M02}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M02}}
}\par
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M03\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M03}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M03}}
}\par
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M10\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M10}}
}\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M11\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M11}}
}\par
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M12\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M12}}
}\par
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M13\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M13}}
}\par
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M20\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M20}}
}\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M21\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M21}}
}\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M22\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M22}}
}\par
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M23\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:M23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix3.M23}}
}\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this\:Tao::Ode::Ode::dMatrix3}
{\xe \v Tao::Ode::Ode::dMatrix3\:this}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal Tao::Ode.Ode.dMatrix3::this{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i index} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dMatrix4 Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4}
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dMatrix4} (dReal[] values)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal[] {\b ToArray} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M00}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M01}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M02}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M03}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M10}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M12}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M13}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M20}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M21}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M22}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M23}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M30}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M31}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M32}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b M33}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b this} [int index]{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dMatrix4\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:dMatrix4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dMatrix4.dMatrix4 (dReal[] {\i values})}
}\par
{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i values} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToArray\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:ToArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal [] Tao.Ode.Ode.dMatrix4.ToArray ()}
}\par
{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v M00\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M00}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M00}}
}\par
{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M01\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M01}}
}\par
{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M02\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M02}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M02}}
}\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M03\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M03}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M03}}
}\par
{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M10\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M10}}
}\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M11\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M11}}
}\par
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M12\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M12}}
}\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M13\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M13}}
}\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M20\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M20}}
}\par
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M21\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M21}}
}\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M22\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M22}}
}\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M23\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M23}}
}\par
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M30\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M30}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M30}}
}\par
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M31\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M31}}
}\par
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M32\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M32}}
}\par
{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v M33\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:M33}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dMatrix4.M33}}
}\par
{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this\:Tao::Ode::Ode::dMatrix4}
{\xe \v Tao::Ode::Ode::dMatrix4\:this}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal Tao::Ode.Ode.dMatrix4::this{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i index} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dQuaternion Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion}
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dQuaternion} (dReal x, dReal y, dReal z, dReal w)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal[] {\b ToArray} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b W}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b X}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b Y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b Z}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b this} [int index]{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexer to support use of array syntax as found in ODE examples X = 0, Y = 1, Z = 2, W = 3. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dQuaternion\:Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion\:dQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dQuaternion.dQuaternion (dReal {\i x}, dReal {\i y}, dReal {\i z}, dReal {\i w})}
}\par
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
{\i z} \par
{\i w} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToArray\:Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion\:ToArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal [] Tao.Ode.Ode.dQuaternion.ToArray ()}
}\par
{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v W\:Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion\:W}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dQuaternion.W}}
}\par
{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v X\:Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dQuaternion.X}}
}\par
{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Y\:Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion\:Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dQuaternion.Y}}
}\par
{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Z\:Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion\:Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dQuaternion.Z}}
}\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this\:Tao::Ode::Ode::dQuaternion}
{\xe \v Tao::Ode::Ode::dQuaternion\:this}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal Tao.Ode.Ode.dQuaternion.this[int index]{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexer to support use of array syntax as found in ODE examples X = 0, Y = 1, Z = 2, W = 3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.DriverRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::DriverRec_}
{\xe \v Tao::FreeType::DriverRec_}
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dSurfaceParameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters}
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the properties of the colliding surfaces. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dSurfaceParameters} (int _mode, dReal _mu, dReal _mu2, dReal _bounce, dReal _bounce_vel, dReal _soft_erp, dReal _soft_cfm, dReal _motion1, dReal _motion2, dReal _slip1, dReal _slip2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact flags. This must always be set. This is a combination of one or more of the following flags: }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b mu}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Coulomb friction coefficient. This must be in the range 0 to dInfinity. 0 results in a frictionless contact, and dInfinity results in a contact that never slips. Note that frictionless contacts are less time consuming to compute than ones with friction, and infinite friction contacts can be cheaper than contacts with finite friction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b mu2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optional Coulomb friction coefficient for friction direction 2 (0..dInfinity). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b bounce}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restitution parameter (0..1). 0 means the surfaces are not bouncy at all, 1 is maximum bouncyness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b bounce_vel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restitution parameter (0..1). 0 means the surfaces are not bouncy at all, 1 is maximum bouncyness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b soft_erp}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact normal ``softness'' parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b soft_cfm}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact normal ``softness'' parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b motion1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surface velocity in friction directions 1 (in m/s). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b motion2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surface velocity in friction directions 1 (in m/s). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b slip1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The coefficients of force-dependent-slip (FDS) for friction directions 1 and 2. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b slip2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the properties of the colliding surfaces. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dSurfaceParameters\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:dSurfaceParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dSurfaceParameters.dSurfaceParameters (int {\i _mode}, dReal {\i _mu}, dReal {\i _mu2}, dReal {\i _bounce}, dReal {\i _bounce_vel}, dReal {\i _soft_erp}, dReal {\i _soft_cfm}, dReal {\i _motion1}, dReal {\i _motion2}, dReal {\i _slip1}, dReal {\i _slip2})}
}\par
{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bounce\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:bounce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.bounce}}
}\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restitution parameter (0..1). 0 means the surfaces are not bouncy at all, 1 is maximum bouncyness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is only set if the corresponding flag is set in mode. \par
}}
{\xe \v bounce_vel\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:bounce_vel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.bounce_vel}}
}\par
{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restitution parameter (0..1). 0 means the surfaces are not bouncy at all, 1 is maximum bouncyness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is only set if the corresponding flag is set in mode. \par
}}
{\xe \v mode\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Ode.Ode.dSurfaceParameters.mode}}
}\par
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact flags. This must always be set. This is a combination of one or more of the following flags: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dContactMu2 If not set, use mu for both friction directions. If set, use mu for friction direction 1, use mu2 for friction direction 2. dContactFDir1 If set, take fdir1 as friction direction 1, otherwise automatically compute friction direction 1 to be perpendicular to the contact normal (in which case its resulting orientation is unpredictable). dContactBounce If set, the contact surface is bouncy, in other words the bodies will bounce off each other. The exact amount of bouncyness is controlled by the bounce parameter. dContactSoftERP If set, the error reduction parameter of the contact normal can be set with the soft_erp parameter. This is useful to make surfaces soft. dContactSoftCFM If set, the constraint force mixing parameter of the contact normal can be set with the soft_cfm parameter. This is useful to make surfaces soft. dContactMotion1 If set, the contact surface is assumed to be moving independently of the motion of the bodies. This is kind of like a conveyor belt running over the surface. When this flag is set, motion1 defines the surface velocity in friction direction 1. dContactMotion2 The same thing as above, but for friction direction 2. dContactSlip1 Force-dependent-slip (FDS) in friction direction 1. dContactSlip2 Force-dependent-slip (FDS) in friction direction 2. dContactApprox0 TODO: Document me dContactApprox1_1 Use the friction pyramid approximation for friction direction 1. If this is not specified then the constant-force-limit approximation is used (and mu is a force limit). dContactApprox1_2 Use the friction pyramid approximation for friction direction 2. If this is not specified then the constant-force-limit approximation is used (and mu is a force limit). dContactApprox1 Equivalent to both dContactApprox1_1 and dContactApprox1_2. \par
}}
{\xe \v motion1\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:motion1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.motion1}}
}\par
{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surface velocity in friction directions 1 (in m/s). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only set if the corresponding flags are set in mode. \par
}}
{\xe \v motion2\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:motion2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.motion2}}
}\par
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surface velocity in friction directions 1 (in m/s). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only set if the corresponding flags are set in mode. \par
}}
{\xe \v mu\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:mu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.mu}}
}\par
{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Coulomb friction coefficient. This must be in the range 0 to dInfinity. 0 results in a frictionless contact, and dInfinity results in a contact that never slips. Note that frictionless contacts are less time consuming to compute than ones with friction, and infinite friction contacts can be cheaper than contacts with finite friction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This must always be set. \par
}}
{\xe \v mu2\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:mu2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.mu2}}
}\par
{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optional Coulomb friction coefficient for friction direction 2 (0..dInfinity). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is only set if the corresponding flag is set in mode. \par
}}
{\xe \v slip1\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:slip1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.slip1}}
}\par
{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The coefficients of force-dependent-slip (FDS) for friction directions 1 and 2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These are only set if the corresponding flags are set in mode.\par
FDS is an effect that causes the contacting surfaces to side past each other with a velocity that is proportional to the force that is being applied tangentially to that surface.\par
Consider a contact point where the coefficient of friction mu is infinite. Normally, if a force f is applied to the two contacting surfaces, to try and get them to slide past each other, they will not move. However, if the FDS coefficient is set to a positive value k then the surfaces will slide past each other, building up to a steady velocity of k*f relative to each other.\par
Note that this is quite different from normal frictional effects: the force does not cause a constant acceleration of the surfaces relative to each other - it causes a brief acceleration to achieve the steady velocity.\par
This is useful for modeling some situations, in particular tires. For example consider a car at rest on a road. Pushing the car in its direction of travel will cause it to start moving (i.e. the tires will start rolling). Pushing the car in the perpendicular direction will have no effect, as the tires do not roll in that direction. However - if the car is moving at a velocity v, applying a force f in the perpendicular direction will cause the tires to slip on the road with a velocity proportional to f*v (Yes, this really happens).\par
To model this in ODE set the tire-road contact parameters as follows: set friction direction 1 in the direction that the tire is rolling in, and set the FDS slip coefficient in friction direction 2 to k*v, where v is the tire rolling velocity and k is a tire parameter that you can choose based on experimentation.\par
Note that FDS is quite separate from the sticking/slipping effects of Coulomb friction - both modes can be used together at a single contact point. \par
}}
{\xe \v slip2\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:slip2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.slip2}}
}\par
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soft_cfm\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:soft_cfm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.soft_cfm}}
}\par
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact normal ``softness'' parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is only set if the corresponding flag is set in mode. \par
}}
{\xe \v soft_erp\:Tao::Ode::Ode::dSurfaceParameters}
{\xe \v Tao::Ode::Ode::dSurfaceParameters\:soft_erp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dSurfaceParameters.soft_erp}}
}\par
{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact normal ``softness'' parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is only set if the corresponding flag is set in mode. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dVector3 Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3}
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector3} (dReal x, dReal y, dReal z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal[] {\b ToArray} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b X}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b Y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b Z}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b SIMD_PADDING}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In ODE's common.h: typedef dReal {\b dVector3}[4];. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b this} [int index]{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexer to support use of array syntax as found in ODE examples X = 0, Y = 1, Z = 2. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dVector3\:Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3\:dVector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dVector3.dVector3 (dReal {\i x}, dReal {\i y}, dReal {\i z})}
}\par
{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
{\i z} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToArray\:Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3\:ToArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal [] Tao.Ode.Ode.dVector3.ToArray ()}
}\par
{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v SIMD_PADDING\:Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3\:SIMD_PADDING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector3.SIMD_PADDING}}
}\par
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In ODE's common.h: typedef dReal {\b dVector3}[4];. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
From ODE mailing list: {\b dVector3} is a dReal[4] to allow for future SIMD extension (the {\b dMatrix3} is similarily defined).\par
However, there may already be a speed difference by defining it as a dReal[4]; the reason is that properly alligned memory data can be accessed more efficiently by the CPU. You should go to great lengths to ensure that every instance of {\b dVector3} in your projects are atleast 4-byte aligned (virtually default), 16-byte alignments are better still and usually need to be enforced.\par
This ensures that memory access (read/write) can be performed just a little bit faster.\par
For example: You'll notice that if you used dReal[3] for an array of {\b dVector3}, then not every vector would fall onto a 16-byte boundary (provided that the first vector was properly alligned). Whereas it is guaranteed with dReal[4] (provided that the first vector was properly alligned). \par
}}
{\xe \v X\:Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector3.X}}
}\par
{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Y\:Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3\:Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector3.Y}}
}\par
{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Z\:Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3\:Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector3.Z}}
}\par
{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this\:Tao::Ode::Ode::dVector3}
{\xe \v Tao::Ode::Ode::dVector3\:this}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal Tao.Ode.Ode.dVector3.this[int index]{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexer to support use of array syntax as found in ODE examples X = 0, Y = 1, Z = 2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Ode.Ode.dVector4 Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4}
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dVector4} (dReal x, dReal y, dReal z, dReal w)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal[] {\b ToArray} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b X}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b Y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b Z}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b W}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dReal {\b this} [int index]{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexer to support use of array syntax as found in ODE examples X = 0, Y = 1, Z = 2, W = 3. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dVector4\:Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4\:dVector4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Ode.Ode.dVector4.dVector4 (dReal {\i x}, dReal {\i y}, dReal {\i z}, dReal {\i w})}
}\par
{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
{\i z} \par
{\i w} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToArray\:Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4\:ToArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal [] Tao.Ode.Ode.dVector4.ToArray ()}
}\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v W\:Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4\:W}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector4.W}}
}\par
{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v X\:Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector4.X}}
}\par
{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Y\:Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4\:Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector4.Y}}
}\par
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Z\:Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4\:Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal {\b Tao.Ode.Ode.dVector4.Z}}
}\par
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this\:Tao::Ode::Ode::dVector4}
{\xe \v Tao::Ode::Ode::dVector4\:this}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dReal Tao.Ode.Ode.dVector4.this[int index]{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexer to support use of array syntax as found in ODE examples X = 0, Y = 1, Z = 2, W = 3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Ode/{\b Ode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.Enum Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::Enum}
{\xe \v Bind::Structures::Enum}
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Enum} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Enum} (string name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b TranslateName} (string name)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
System.Collections.Hashtable {\b ConstantCollection}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Enum\:Bind::Structures::Enum}
{\xe \v Bind::Structures::Enum\:Enum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Enum.Enum ()}
}\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Enum\:Bind::Structures::Enum}
{\xe \v Bind::Structures::Enum\:Enum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Enum.Enum (string {\i name})}
}\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Bind::Structures::Enum}
{\xe \v Bind::Structures::Enum\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Enum.ToString ()}
}\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TranslateName\:Bind::Structures::Enum}
{\xe \v Bind::Structures::Enum\:TranslateName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Bind.Structures.Enum.TranslateName (string {\i name}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ConstantCollection\:Bind::Structures::Enum}
{\xe \v Bind::Structures::Enum\:ConstantCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
System.Collections.Hashtable Bind.Structures.Enum.ConstantCollection{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Name\:Bind::Structures::Enum}
{\xe \v Bind::Structures::Enum\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Enum.Name{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Enum.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.EnumCollection Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::EnumCollection}
{\xe \v Bind::Structures::EnumCollection}
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Enum.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.Face_InternalRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::Face_InternalRec_}
{\xe \v Tao::FreeType::Face_InternalRec_}
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlGfx.FPSmanager Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlGfx::FPSmanager}
{\xe \v Tao::Sdl::SdlGfx::FPSmanager}
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b framecount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rateticks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lastticks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rate}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v framecount\:Tao::Sdl::SdlGfx::FPSmanager}
{\xe \v Tao::Sdl::SdlGfx::FPSmanager\:framecount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlGfx.FPSmanager.framecount}}
}\par
{\bkmkstart AAAAAAAESD}
{\bkmkend AAAAAAAESD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v lastticks\:Tao::Sdl::SdlGfx::FPSmanager}
{\xe \v Tao::Sdl::SdlGfx::FPSmanager\:lastticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlGfx.FPSmanager.lastticks}}
}\par
{\bkmkstart AAAAAAAESE}
{\bkmkend AAAAAAAESE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rate\:Tao::Sdl::SdlGfx::FPSmanager}
{\xe \v Tao::Sdl::SdlGfx::FPSmanager\:rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlGfx.FPSmanager.rate}}
}\par
{\bkmkstart AAAAAAAESF}
{\bkmkend AAAAAAAESF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rateticks\:Tao::Sdl::SdlGfx::FPSmanager}
{\xe \v Tao::Sdl::SdlGfx::FPSmanager\:rateticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.Sdl.SdlGfx.FPSmanager.rateticks}}
}\par
{\bkmkstart AAAAAAAESG}
{\bkmkend AAAAAAAESG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlGfx.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT}
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main {\b FreeType} method class. Call FT_Init_FreeType to initialise. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Init_FreeType} (out IntPtralibrary)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize a new {\b FreeType} library object. The set of modules that are registered by this function is determined at build time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b FT_Library_Version} (IntPtrlibrary, ref int amajor, ref int aminor, ref int apatch)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the version of the {\b FreeType} library being used. This is useful when dynamically linking to the library, since one cannot use the macros FREETYPE_MAJOR, FREETYPE_MINOR, and FREETYPE_PATCH. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Done_FreeType} (IntPtrlibrary)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a given {\b FreeType} library object and all of its children, including resources, drivers, faces, sizes, etc. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_New_Face} (IntPtrlibrary, string filepathname, int face_index, out IntPtraface)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Open_Face to open a font by its pathname. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_New_Memory_Face} (IntPtrlibrary,[In] byte[] file_base, int file_size, int face_index, IntPtraface)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Open_Face to open a font which has been loaded into memory. You must not deallocate the memory before calling FT_Done_Face. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Open_Face} (IntPtrlibrary, {\b FT_Open_Args} args, int face_index, IntPtraface)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a face object from a given resource described by {\b FT_Open_Args}. Unlike {\b FreeType} 1.x, this function automatically creates a glyph slot for the face object which can be accessed directly through \'91face->glyph\'92. FT_Open_Face can be used to quickly check whether the font format of a given font resource is supported by {\b FreeType}. If the \'91face_index\'92 field is negative, the function's return value is 0 if the font format is recognized, or non-zero otherwise; the function returns a more or less empty face handle in \'91*aface\'92 (if \'91aface\'92 isn't NULL). The only useful field in this special case is \'91face->num_faces\'92 which gives the number of faces within the font file. After examination, the returned FT_Face structure should be deallocated with a call to FT_Done_Face. Each new face object created with this function also owns a default FT_Size object, accessible as \'91face->size\'92. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Attach_File} (IntPtrface, string filepathname)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Attach_Stream to attach a file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Attach_Stream} (IntPtrface, ref {\b FT_Open_Args} parameters)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'91Attach\'92 data to a face object. Normally, this is used to read additional information for the face object. For example, you can attach an AFM file that comes with a Type 1 font to get the kerning values and other metrics }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Done_Face} (IntPtrface)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Discard a given face object, as well as all of its child slots and sizes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Set_Char_Size} (IntPtrface, int char_width, int char_height, uint horz_resolution, uint vert_resolution)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Request_Size to request the nominal size (in points). If either the character width or height is zero, it is set equal to the other value. If either the horizontal or vertical resolution is zero, it is set equal to the other value. A character width or height smaller than 1pt is set to 1pt; if both resolution values are zero, they are set to 72dpi. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Set_Pixel_Sizes} (IntPtrface, uint pixel_width, uint pixel_height)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Request_Size to request the nominal size (in pixels). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Load_Glyph} (IntPtrface, uint glyph_index, int load_flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A function used to load a single glyph into the glyph slot of a face object. The loaded glyph may be transformed. See FT_Set_Transform for the details. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Load_Char} (IntPtrface, uint char_code, int load_flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A function used to load a single glyph into the glyph slot of a face object, according to its character code. This function simply calls FT_Get_Char_Index and FT_Load_Glyph. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b FT_Set_Transform} (IntPtrface, ref {\b FT_Matrix} matrix, ref {\b FT_Vector} delta)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A function used to set the transformation that is applied to glyph images when they are loaded into a glyph slot through FT_Load_Glyph. The transformation is only applied to scalable image formats after the glyph has been loaded. It means that hinting is unaltered by the transformation and is performed on the character size given in the last call to FT_Set_Char_Size or FT_Set_Pixel_Sizes. Note that this also transforms the \'91face.glyph.advance\'92 field, but not the values in \'91face.glyph.metrics\'92. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Render_Glyph} (ref {\b FT_GlyphSlotRec} slot, {\b FT_Render_Mode} render_mode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a given glyph image to a bitmap. It does so by inspecting the glyph image format, finding the relevant renderer, and invoking it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Get_Kerning} (IntPtrface, uint left_glyph, uint right_glyph, uint kern_mode, out {\b FT_Vector} akerning)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the kerning vector between two glyphs of a same face. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Get_Glyph_Name} (IntPtrface, uint glyph_index, IntPtr buffer, uint buffer_max)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the ASCII name of a given glyph in a face. This only works for those faces where FT_HAS_GLYPH_NAMES(face) returns 1 An error is returned if the face doesn't provide glyph names or if the glyph index is invalid. In all cases of failure, the first byte of \'91buffer\'92 is set to 0 to indicate an empty name. The glyph name is truncated to fit within the buffer if it is too long. The returned string is always zero-terminated. This function is not compiled within the library if the config macro \'91FT_CONFIG_OPTION_NO_GLYPH_NAMES\'92 is defined in \'91include/freetype/config/ftoptions.h\'92. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b FT_Get_Postscript_Name} (IntPtrface)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the ASCII Postscript name of a given face, if available. This only works with Postscript and TrueType fonts The returned pointer is owned by the face and is destroyed with it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Select_Charmap} (IntPtrface, {\b FT_Encoding} encoding)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a given charmap by its encoding tag (as listed in \'91freetype.h\'92). This function returns an error if no charmap in the face corresponds to the encoding queried here. Because many fonts contain more than a single cmap for Unicode encoding, this function has some special code to select the one which covers Unicode best. It is thus preferable to FT_Set_Charmap in this case. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Set_Charmap} (IntPtrface, ref {\b FT_CharMapRec} charmap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a given charmap for character code to glyph index mapping This function returns an error if the charmap is not part of the face (i.e., if it is not listed in the \'91face->charmaps\'92 table). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_Get_Charmap_Index} (ref {\b FT_CharMapRec} charmap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve index of a given charmap. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint {\b FT_Get_Char_Index} (IntPtrface, uint charcode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the glyph index of a given character code. This function uses a charmap object to do the mapping If you use {\b FreeType} to manipulate the contents of font files directly, be aware that the glyph index returned by this function doesn't always correspond to the internal indices used within the file. This is done to ensure that value 0 always corresponds to the \'91missing glyph\'92. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint {\b FT_Get_First_Char} (IntPtrface,[In, Out] uint[] agindex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used to return the first character code in the current charmap of a given face. It also returns the corresponding glyph index. You should use this function with FT_Get_Next_Char to be able to parse all character codes available in a given charmap. Note that \'91agindex\'92 is set to 0 if the charmap is empty. The result itself can be 0 in two cases: if the charmap is empty or when the value 0 is the first valid character code. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint {\b FT_Get_Next_Char} (IntPtrface, uint char_code,[In, Out] uint[] agindex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used to return the next character code in the current charmap of a given face following the value \'91char_code\'92, as well as the corresponding glyph index. You should use this function with FT_Get_First_Char to walk over all character codes available in a given charmap. See the note for this function for a simple code example. Note that \'91*agindex\'92 is set to 0 when there are no more codes in the charmap. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint {\b FT_Get_Name_Index} (IntPtrface,[In, Out] sbyte[] glyph_name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the glyph index of a given glyph name. This function uses driver specific objects to do the translation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_MulDiv} (int a, int b, int c)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to perform the computation \'91(a*b)/c\'92 with maximal accuracy (it uses a 64-bit intermediate integer whenever necessary). This function isn't necessarily as fast as some processor specific operations, but is at least completely portable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_MulFix} (int a, int b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to perform the computation \'91(a*b)/0x10000\'92 with maximal accuracy. Most of the time this is used to multiply a given value by a 16.16 fixed float factor This function has been optimized for the case where the absolute value of \'91a\'92 is less than 2048, and \'91b\'92 is a 16.16 scaling factor. As this happens mainly when scaling from notional units to fractional pixels in {\b FreeType}, it resulted in noticeable speed improvements between versions 2.x and 1.x. As a conclusion, always try to place a 16.16 factor as the second argument of this function; this can make a great difference. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_DivFix} (int a, int b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to perform the computation \'91(a*0x10000)/b\'92 with maximal accuracy. Most of the time, this is used to divide a given value by a 16.16 fixed float factor The optimization for {\b FT_DivFix()} is simple: If (a << 16) fits in 32 bits, then the division is computed directly. Otherwise, we use a specialized version of FT_MulDiv. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_RoundFix} (int a)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to round a 16.16 fixed number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_CeilFix} (int a)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to compute the ceiling function of a 16.16 fixed number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b FT_FloorFix} (int a)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to compute the floor function of a 16.16 fixed number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b FT_Vector_Transform} (ref {\b FT_Vector} vec, ref {\b FT_Matrix} matrix)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transform a single vector through a 2x2 matrix. The result is undefined if either \'91vector\'92 or \'91matrix\'92 is invalid. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_open_driver} = 0x8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_open_memory} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_open_params} = 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_open_pathname} = 0x4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_open_stream} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_outline_even_odd_fill} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_outline_high_precision} = 0x100\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_outline_ignore_dropouts} = 0x8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_outline_none} = 0x0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_outline_owner} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_outline_reverse_fill} = 0x4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_outline_single_pass} = 0x200\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_raster_flag_aa} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_raster_flag_clip} = 0x4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_raster_flag_default} = 0x0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ft_raster_flag_direct} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FREETYPE_MAJOR} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FREETYPE_MINOR} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FREETYPE_PATCH} = 9\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b ALIGNMENT} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Curve_Tag_Conic} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Curve_Tag_Cubic} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Curve_Tag_On} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Curve_Tag_Touch_X} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Curve_Tag_Touch_Y} = 16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CURVE_TAG_CONIC} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CURVE_TAG_CUBIC} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CURVE_TAG_ON} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CURVE_TAG_TOUCH_X} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CURVE_TAG_TOUCH_Y} = 16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_CROP_BITMAP} = 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_DEFAULT} = 0x0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_FORCE_AUTOHINT} = 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH} = 0x200\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_IGNORE_TRANSFORM} = 0x800\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_LINEAR_DESIGN} = 0x2000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_MONOCHROME} = 0x1000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_NO_BITMAP} = 0x8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_NO_HINTING} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_NO_RECURSE} = 0x400\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_NO_SCALE} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_PEDANTIC} = 0x80\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_RENDER} = 0x4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_SBITS_ONLY} = 0x4000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b FT_LOAD_VERTICAL_LAYOUT} = 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b MAX_MODULES} = 32\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OPEN_DRIVER} = 0x8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OPEN_MEMORY} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OPEN_PARAMS} = 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OPEN_PATHNAME} = 0x4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OPEN_STREAM} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OUTLINE_EVEN_ODD_FILL} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OUTLINE_HIGH_PRECISION} = 0x100\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OUTLINE_IGNORE_DROPOUTS} = 0x8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OUTLINE_NONE} = 0x0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OUTLINE_OWNER} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OUTLINE_REVERSE_FILL} = 0x4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_OUTLINE_SINGLE_PASS} = 0x200\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_RASTER_FLAG_AA} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_RASTER_FLAG_CLIP} = 0x4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_RASTER_FLAG_DEFAULT} = 0x0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FT_RASTER_FLAG_DIRECT} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b HAVE_FCNTL_H} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b HAVE_UNISTD_H} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b T1_MAX_CHARSTRINGS_OPERANDS} = 256\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b T1_MAX_DICT_DEPTH} = 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b T1_MAX_SUBRS_CALLS} = 16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Base} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Autohint} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_BDF} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Cache} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_CFF} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_CID} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Gzip} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_LZW} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_PCF} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_PFR} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_PSaux} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_PShinter} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_PSnames} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Raster} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_SFNT} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Smooth} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_TrueType} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Type1} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Type42} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Winfonts} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Mod_Err_Max} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Ok} = 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Cannot_Open_Resource} = (int)(0x01 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Unknown_File_Format} = (int)(0x02 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_File_Format} = (int)(0x03 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Version} = (int)(0x04 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Lower_Module_Version} = (int)(0x05 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Argument} = (int)(0x06 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Unimplemented_Feature} = (int)(0x07 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Table} = (int)(0x08 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Offset} = (int)(0x09 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Glyph_Index} = (int)(0x10 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Character_Code} = (int)(0x11 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Glyph_Format} = (int)(0x12 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Cannot_Render_Glyph} = (int)(0x13 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Outline} = (int)(0x14 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Composite} = (int)(0x15 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Too_Many_Hints} = (int)(0x16 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Pixel_Size} = (int)(0x17 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Handle} = (int)(0x20 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Library_Handle} = (int)(0x21 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Driver_Handle} = (int)(0x22 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Face_Handle} = (int)(0x23 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Size_Handle} = (int)(0x24 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Slot_Handle} = (int)(0x25 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_CharMap_Handle} = (int)(0x26 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Cache_Handle} = (int)(0x27 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Stream_Handle} = (int)(0x28 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Too_Many_Drivers} = (int)(0x30 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Too_Many_Extensions} = (int)(0x31 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Out_Of_Memory} = (int)(0x40 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Unlisted_Object} = (int)(0x41 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Cannot_Open_Stream} = (int)(0x51 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Stream_Seek} = (int)(0x52 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Stream_Skip} = (int)(0x53 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Stream_Read} = (int)(0x54 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Stream_Operation} = (int)(0x55 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Frame_Operation} = (int)(0x56 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Nested_Frame_Access} = (int)(0x57 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Frame_Read} = (int)(0x58 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Raster_Uninitialized} = (int)(0x60 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Raster_Corrupted} = (int)(0x61 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Raster_Overflow} = (int)(0x62 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Raster_Negative_Height} = (int)(0x63 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Too_Many_Caches} = (int)(0x70 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Opcode} = (int)(0x80 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Too_Few_Arguments} = (int)(0x81 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Stack_Overflow} = (int)(0x82 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Code_Overflow} = (int)(0x83 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Bad_Argument} = (int)(0x84 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Divide_By_Zero} = (int)(0x85 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Reference} = (int)(0x86 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Debug_OpCode} = (int)(0x87 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_ENDF_In_Exec_Stream} = (int)(0x88 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Nested_DEFS} = (int)(0x89 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_CodeRange} = (int)(0x8A + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Execution_Too_Long} = (int)(0x8B + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Too_Many_Function_Defs} = (int)(0x8C + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Too_Many_Instruction_Defs} = (int)(0x8D + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Table_Missing} = (int)(0x8E + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Horiz_Header_Missing} = (int)(0x8F + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Locations_Missing} = (int)(0x90 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Name_Table_Missing} = (int)(0x91 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_CMap_Table_Missing} = (int)(0x92 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Hmtx_Table_Missing} = (int)(0x93 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Post_Table_Missing} = (int)(0x94 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Horiz_Metrics} = (int)(0x95 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_CharMap_Format} = (int)(0x96 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_PPem} = (int)(0x97 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Vert_Metrics} = (int)(0x98 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Could_Not_Find_Context} = (int)(0x99 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Post_Table_Format} = (int)(0x9A + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Invalid_Post_Table} = (int)(0x9B + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Syntax_Error} = (int)(0xA0 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Stack_Underflow} = (int)(0xA1 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Ignore} = (int)(0xA2 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Missing_Startfont_Field} = (int)(0xB0 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Missing_Font_Field} = (int)(0xB1 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Missing_Size_Field} = (int)(0xB2 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Missing_Chars_Field} = (int)(0xB3 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Missing_Startchar_Field} = (int)(0xB4 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Missing_Encoding_Field} = (int)(0xB5 + 0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Err_Missing_Bbx_Field} = (int)(0xB6 + 0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Hashtable {\b ErrorStrings}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main {\b FreeType} method class. Call FT_Init_FreeType to initialise. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v FT_Attach_File\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Attach_File}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Attach_File (IntPtrface, string {\i filepathname})}
}\par
{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Attach_Stream to attach a file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} The target face object.\par
{\i filepathname} The pathname\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Attach_Stream\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Attach_Stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Attach_Stream (IntPtrface, ref {\b FT_Open_Args} {\i parameters})}
}\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'91Attach\'92 data to a face object. Normally, this is used to read additional information for the face object. For example, you can attach an AFM file that comes with a Type 1 font to get the kerning values and other metrics }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} The target face object\par
{\i parameters} A pointer to {\b FT_Open_Args} which must be filled by the caller\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_CeilFix\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_CeilFix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_CeilFix (int {\i a})}
}\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to compute the ceiling function of a 16.16 fixed number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} The number for which the ceiling function is to be computed\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The result of \'91(a + 0x10000 - 1) &-0x10000\'92\par
}}}
{\xe \v FT_DivFix\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_DivFix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_DivFix (int {\i a}, int {\i b})}
}\par
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to perform the computation \'91(a*0x10000)/b\'92 with maximal accuracy. Most of the time, this is used to divide a given value by a 16.16 fixed float factor The optimization for {\b FT_DivFix()} is simple: If (a << 16) fits in 32 bits, then the division is computed directly. Otherwise, we use a specialized version of FT_MulDiv. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} The first multiplier\par
{\i b} The second multiplier. Use a 16.16 factor here whenever possible\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The result of \'91(a*0x10000)/b\'92\par
}}}
{\xe \v FT_Done_Face\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Done_Face}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Done_Face (IntPtrface)}
}\par
{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Discard a given face object, as well as all of its child slots and sizes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to a target face object.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Done_FreeType\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Done_FreeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Done_FreeType (IntPtrlibrary)}
}\par
{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a given {\b FreeType} library object and all of its children, including resources, drivers, faces, sizes, etc. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i library} A handle to the target library object\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_FloorFix\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_FloorFix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_FloorFix (int {\i a})}
}\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to compute the floor function of a 16.16 fixed number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} The number for which the floor function is to be computed\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The result of \'91a & -0x10000\'92\par
}}}
{\xe \v FT_Get_Char_Index\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_Char_Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint Tao.FreeType.FT.FT_Get_Char_Index (IntPtrface, uint {\i charcode})}
}\par
{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the glyph index of a given character code. This function uses a charmap object to do the mapping If you use {\b FreeType} to manipulate the contents of font files directly, be aware that the glyph index returned by this function doesn't always correspond to the internal indices used within the file. This is done to ensure that value 0 always corresponds to the \'91missing glyph\'92. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
{\i charcode} The character code\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The glyph index. 0 means \'91undefined character code\'92\par
}}}
{\xe \v FT_Get_Charmap_Index\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_Charmap_Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Get_Charmap_Index (ref {\b FT_CharMapRec} {\i charmap})}
}\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve index of a given charmap. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i charmap} A handle to a charmap\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The index into the array of character maps within the face to which \'91charmap\'92 belongs\par
}}}
{\xe \v FT_Get_First_Char\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_First_Char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint Tao.FreeType.FT.FT_Get_First_Char (IntPtrface, [In, Out] uint[] {\i agindex})}
}\par
{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used to return the first character code in the current charmap of a given face. It also returns the corresponding glyph index. You should use this function with FT_Get_Next_Char to be able to parse all character codes available in a given charmap. Note that \'91agindex\'92 is set to 0 if the charmap is empty. The result itself can be 0 in two cases: if the charmap is empty or when the value 0 is the first valid character code. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
{\i agindex} Glyph index of first character code. 0 if charmap is empty\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The charmap's first character code\par
}}}
{\xe \v FT_Get_Glyph_Name\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_Glyph_Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Get_Glyph_Name (IntPtrface, uint {\i glyph_index}, IntPtr {\i buffer}, uint {\i buffer_max})}
}\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the ASCII name of a given glyph in a face. This only works for those faces where FT_HAS_GLYPH_NAMES(face) returns 1 An error is returned if the face doesn't provide glyph names or if the glyph index is invalid. In all cases of failure, the first byte of \'91buffer\'92 is set to 0 to indicate an empty name. The glyph name is truncated to fit within the buffer if it is too long. The returned string is always zero-terminated. This function is not compiled within the library if the config macro \'91FT_CONFIG_OPTION_NO_GLYPH_NAMES\'92 is defined in \'91include/freetype/config/ftoptions.h\'92. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to a source face object\par
{\i glyph_index} The glyph index\par
{\i buffer} A pointer to a target buffer where the name is copied to\par
{\i buffer_max} The maximal number of bytes available in the buffer\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Get_Kerning\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_Kerning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Get_Kerning (IntPtrface, uint {\i left_glyph}, uint {\i right_glyph}, uint {\i kern_mode}, out {\b FT_Vector} {\i akerning})}
}\par
{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the kerning vector between two glyphs of a same face. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to a source face object\par
{\i left_glyph} The index of the left glyph in the kern pair\par
{\i right_glyph} The index of the right glyph in the kern pair\par
{\i kern_mode} See FT_Kerning_Mode for more information. Determines the scale and dimension of the returned kerning vector\par
{\i akerning} The kerning vector. This is either in font units or in pixels (26.6 format) for scalable formats, and in pixels for fixed-sizes formats\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Get_Name_Index\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_Name_Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint Tao.FreeType.FT.FT_Get_Name_Index (IntPtrface, [In, Out] sbyte[] {\i glyph_name})}
}\par
{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the glyph index of a given glyph name. This function uses driver specific objects to do the translation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
{\i glyph_name} The glyph name\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The glyph index. 0 means \'91undefined character code\'92\par
}}}
{\xe \v FT_Get_Next_Char\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_Next_Char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint Tao.FreeType.FT.FT_Get_Next_Char (IntPtrface, uint {\i char_code}, [In, Out] uint[] {\i agindex})}
}\par
{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used to return the next character code in the current charmap of a given face following the value \'91char_code\'92, as well as the corresponding glyph index. You should use this function with FT_Get_First_Char to walk over all character codes available in a given charmap. See the note for this function for a simple code example. Note that \'91*agindex\'92 is set to 0 when there are no more codes in the charmap. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
{\i char_code} The starting character code\par
{\i agindex} Glyph index of first character code. 0 if charmap is empty\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The charmap's next character code\par
}}}
{\xe \v FT_Get_Postscript_Name\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Get_Postscript_Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.FreeType.FT.FT_Get_Postscript_Name (IntPtrface)}
}\par
{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the ASCII Postscript name of a given face, if available. This only works with Postscript and TrueType fonts The returned pointer is owned by the face and is destroyed with it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pointer to the face's Postscript name. NULL if unavailable\par
}}}
{\xe \v FT_Init_FreeType\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Init_FreeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Init_FreeType (out {\i IntPtralibrary})}
}\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize a new {\b FreeType} library object. The set of modules that are registered by this function is determined at build time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i alibrary} A handle to a new library object.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success.\par
}}}
{\xe \v FT_Library_Version\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Library_Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.FreeType.FT.FT_Library_Version (IntPtrlibrary, ref int {\i amajor}, ref int {\i aminor}, ref int {\i apatch})}
}\par
{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the version of the {\b FreeType} library being used. This is useful when dynamically linking to the library, since one cannot use the macros FREETYPE_MAJOR, FREETYPE_MINOR, and FREETYPE_PATCH. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i library} A source library handle.\par
{\i amajor} The major version number.\par
{\i aminor} The minor version number\par
{\i apatch} The patch version number\par
}
}}
{\xe \v FT_Load_Char\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Load_Char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Load_Char (IntPtrface, uint {\i char_code}, int {\i load_flags})}
}\par
{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A function used to load a single glyph into the glyph slot of a face object, according to its character code. This function simply calls FT_Get_Char_Index and FT_Load_Glyph. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to a target face object where the glyph is loaded.\par
{\i char_code} The glyph's character code, according to the current charmap used in the face\par
{\i load_flags} A flag indicating what to load for this glyph. The FT_LOAD_XXX constants can be used to control the glyph loading process (e.g., whether the outline should be scaled, whether to load bitmaps or not, whether to hint the outline, etc).\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Load_Glyph\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Load_Glyph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Load_Glyph (IntPtrface, uint {\i glyph_index}, int {\i load_flags})}
}\par
{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A function used to load a single glyph into the glyph slot of a face object. The loaded glyph may be transformed. See FT_Set_Transform for the details. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the target face object where the glyph is loaded.\par
{\i glyph_index} The index of the glyph in the font file. For CID-keyed fonts (either in PS or in CFF format) this argument specifies the CID value.\par
{\i load_flags} A flag indicating what to load for this glyph. The FT_LOAD_XXX constants can be used to control the glyph loading process (e.g., whether the outline should be scaled, whether to load bitmaps or not, whether to hint the outline, etc).\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success.\par
}}}
{\xe \v FT_MulDiv\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_MulDiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_MulDiv (int {\i a}, int {\i b}, int {\i c})}
}\par
{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to perform the computation \'91(a*b)/c\'92 with maximal accuracy (it uses a 64-bit intermediate integer whenever necessary). This function isn't necessarily as fast as some processor specific operations, but is at least completely portable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} The first multiplier\par
{\i b} The second multiplier\par
{\i c} The divisor\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The result of \'91(a*b)/c\'92. This function never traps when trying to divide by zero; it simply returns \'91MaxInt\'92 or \'91MinInt\'92 depending on the signs of \'91a\'92 and \'91b\'92\par
}}}
{\xe \v FT_MulFix\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_MulFix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_MulFix (int {\i a}, int {\i b})}
}\par
{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to perform the computation \'91(a*b)/0x10000\'92 with maximal accuracy. Most of the time this is used to multiply a given value by a 16.16 fixed float factor This function has been optimized for the case where the absolute value of \'91a\'92 is less than 2048, and \'91b\'92 is a 16.16 scaling factor. As this happens mainly when scaling from notional units to fractional pixels in {\b FreeType}, it resulted in noticeable speed improvements between versions 2.x and 1.x. As a conclusion, always try to place a 16.16 factor as the second argument of this function; this can make a great difference. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} The first multiplier\par
{\i b} The second multiplier. Use a 16.16 factor here whenever possible\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The result of \'91(a*b)/0x10000\'92\par
}}}
{\xe \v FT_New_Face\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_New_Face}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_New_Face (IntPtrlibrary, string {\i filepathname}, int {\i face_index}, out {\i IntPtraface})}
}\par
{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Open_Face to open a font by its pathname. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i library} A handle to the library resource.\par
{\i filepathname} A path to the font file\par
{\i face_index} The index of the face within the font. The first face has index 0\par
{\i aface} A handle to a new face object. If \'91face_index\'92 is greater than or equal to zero, it must be non-NULL. See FT_Open_Face for more details.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success.\par
}}}
{\xe \v FT_New_Memory_Face\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_New_Memory_Face}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_New_Memory_Face (IntPtrlibrary, [In] byte[] {\i file_base}, int {\i file_size}, int {\i face_index}, IntPtraface)}
}\par
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Open_Face to open a font which has been loaded into memory. You must not deallocate the memory before calling FT_Done_Face. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i library} A handle to the library resource\par
{\i file_base} A pointer to the beginning of the font data\par
{\i file_size} The size of the memory chunk used by the font data\par
{\i face_index} The index of the face within the font. The first face has index 0\par
{\i aface} A handle to a new face object. If \'91face_index\'92 is greater than or equal to zero, it must be non-NULL. See FT_Open_Face for more details.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success.\par
}}}
{\xe \v FT_Open_Face\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Open_Face}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Open_Face (IntPtrlibrary, {\b FT_Open_Args} {\i args}, int {\i face_index}, IntPtraface)}
}\par
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a face object from a given resource described by {\b FT_Open_Args}. Unlike {\b FreeType} 1.x, this function automatically creates a glyph slot for the face object which can be accessed directly through \'91face->glyph\'92. FT_Open_Face can be used to quickly check whether the font format of a given font resource is supported by {\b FreeType}. If the \'91face_index\'92 field is negative, the function's return value is 0 if the font format is recognized, or non-zero otherwise; the function returns a more or less empty face handle in \'91*aface\'92 (if \'91aface\'92 isn't NULL). The only useful field in this special case is \'91face->num_faces\'92 which gives the number of faces within the font file. After examination, the returned FT_Face structure should be deallocated with a call to FT_Done_Face. Each new face object created with this function also owns a default FT_Size object, accessible as \'91face->size\'92. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i library} A handle to the library resource\par
{\i args} A pointer to an \'91FT_Open_Args\'92 structure which must be filled by the caller.\par
{\i face_index} The index of the face within the font. The first face has index 0\par
{\i aface} A handle to a new face object. If \'91face_index\'92 is greater than or equal to zero, it must be non-NULL. See note below\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Render_Glyph\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Render_Glyph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Render_Glyph (ref {\b FT_GlyphSlotRec} {\i slot}, {\b FT_Render_Mode} {\i render_mode})}
}\par
{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a given glyph image to a bitmap. It does so by inspecting the glyph image format, finding the relevant renderer, and invoking it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i slot} A handle to the glyph slot containing the image to convert\par
{\i render_mode} This is the render mode used to render the glyph image into a bitmap. See FT_Render_Mode for a list of possible values\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_RoundFix\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_RoundFix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_RoundFix (int {\i a})}
}\par
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A very simple function used to round a 16.16 fixed number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} The number to be rounded\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The result of \'91(a + 0x8000) & -0x10000\'92\par
}}}
{\xe \v FT_Select_Charmap\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Select_Charmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Select_Charmap (IntPtrface, {\b FT_Encoding} {\i encoding})}
}\par
{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a given charmap by its encoding tag (as listed in \'91freetype.h\'92). This function returns an error if no charmap in the face corresponds to the encoding queried here. Because many fonts contain more than a single cmap for Unicode encoding, this function has some special code to select the one which covers Unicode best. It is thus preferable to FT_Set_Charmap in this case. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
{\i encoding} A handle to the selected encoding\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Set_Char_Size\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Set_Char_Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Set_Char_Size (IntPtrface, int {\i char_width}, int {\i char_height}, uint {\i horz_resolution}, uint {\i vert_resolution})}
}\par
{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Request_Size to request the nominal size (in points). If either the character width or height is zero, it is set equal to the other value. If either the horizontal or vertical resolution is zero, it is set equal to the other value. A character width or height smaller than 1pt is set to 1pt; if both resolution values are zero, they are set to 72dpi. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to a target face object\par
{\i char_width} The nominal width, in 26.6 fractional points\par
{\i char_height} The nominal height, in 26.6 fractional points\par
{\i horz_resolution} The horizontal resolution in dpi\par
{\i vert_resolution} The vertical resolution in dpi\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Set_Charmap\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Set_Charmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Set_Charmap (IntPtrface, ref {\b FT_CharMapRec} {\i charmap})}
}\par
{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a given charmap for character code to glyph index mapping This function returns an error if the charmap is not part of the face (i.e., if it is not listed in the \'91face->charmaps\'92 table). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
{\i charmap} A handle to the selected charmap\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Set_Pixel_Sizes\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Set_Pixel_Sizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.FreeType.FT.FT_Set_Pixel_Sizes (IntPtrface, uint {\i pixel_width}, uint {\i pixel_height})}
}\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calls FT_Request_Size to request the nominal size (in pixels). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the target face object.\par
{\i pixel_width} The nominal width, in pixels.\par
{\i pixel_height} The nominal height, in pixels\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b FreeType} error code. 0 means success\par
}}}
{\xe \v FT_Set_Transform\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Set_Transform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.FreeType.FT.FT_Set_Transform (IntPtrface, ref {\b FT_Matrix} {\i matrix}, ref {\b FT_Vector} {\i delta})}
}\par
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A function used to set the transformation that is applied to glyph images when they are loaded into a glyph slot through FT_Load_Glyph. The transformation is only applied to scalable image formats after the glyph has been loaded. It means that hinting is unaltered by the transformation and is performed on the character size given in the last call to FT_Set_Char_Size or FT_Set_Pixel_Sizes. Note that this also transforms the \'91face.glyph.advance\'92 field, but not the values in \'91face.glyph.metrics\'92. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i face} A handle to the source face object\par
{\i matrix} A pointer to the transformation's 2x2 matrix. Use 0 for the identity matrix\par
{\i delta} A pointer to the translation vector. Use 0 for the null vector\par
}
}}
{\xe \v FT_Vector_Transform\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_Vector_Transform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.FreeType.FT.FT_Vector_Transform (ref {\b FT_Vector} {\i vec}, ref {\b FT_Matrix} {\i matrix})}
}\par
{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transform a single vector through a 2x2 matrix. The result is undefined if either \'91vector\'92 or \'91matrix\'92 is invalid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i vec} The target vector to transform\par
{\i matrix} A pointer to the source 2x2 matrix\par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ALIGNMENT\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ALIGNMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.ALIGNMENT} = 8}
}\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Curve_Tag_Conic\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Curve_Tag_Conic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Curve_Tag_Conic} = 0}
}\par
{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CURVE_TAG_CONIC\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:CURVE_TAG_CONIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.CURVE_TAG_CONIC} = 0}
}\par
{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Curve_Tag_Cubic\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Curve_Tag_Cubic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Curve_Tag_Cubic} = 2}
}\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CURVE_TAG_CUBIC\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:CURVE_TAG_CUBIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.CURVE_TAG_CUBIC} = 2}
}\par
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Curve_Tag_On\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Curve_Tag_On}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Curve_Tag_On} = 1}
}\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CURVE_TAG_ON\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:CURVE_TAG_ON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.CURVE_TAG_ON} = 1}
}\par
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Curve_Tag_Touch_X\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Curve_Tag_Touch_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Curve_Tag_Touch_X} = 8}
}\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CURVE_TAG_TOUCH_X\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:CURVE_TAG_TOUCH_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.CURVE_TAG_TOUCH_X} = 8}
}\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Curve_Tag_Touch_Y\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Curve_Tag_Touch_Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Curve_Tag_Touch_Y} = 16}
}\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CURVE_TAG_TOUCH_Y\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:CURVE_TAG_TOUCH_Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.CURVE_TAG_TOUCH_Y} = 16}
}\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Bad_Argument\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Bad_Argument}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Bad_Argument} = (int)(0x84 + 0)}
}\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Cannot_Open_Resource\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Cannot_Open_Resource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Cannot_Open_Resource} = (int)(0x01 + 0)}
}\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Cannot_Open_Stream\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Cannot_Open_Stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Cannot_Open_Stream} = (int)(0x51 + 0)}
}\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Cannot_Render_Glyph\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Cannot_Render_Glyph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Cannot_Render_Glyph} = (int)(0x13 + 0)}
}\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_CMap_Table_Missing\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_CMap_Table_Missing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_CMap_Table_Missing} = (int)(0x92 + 0)}
}\par
{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Code_Overflow\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Code_Overflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Code_Overflow} = (int)(0x83 + 0)}
}\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Could_Not_Find_Context\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Could_Not_Find_Context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Could_Not_Find_Context} = (int)(0x99 + 0)}
}\par
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Debug_OpCode\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Debug_OpCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Debug_OpCode} = (int)(0x87 + 0)}
}\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Divide_By_Zero\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Divide_By_Zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Divide_By_Zero} = (int)(0x85 + 0)}
}\par
{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_ENDF_In_Exec_Stream\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_ENDF_In_Exec_Stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_ENDF_In_Exec_Stream} = (int)(0x88 + 0)}
}\par
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Execution_Too_Long\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Execution_Too_Long}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Execution_Too_Long} = (int)(0x8B + 0)}
}\par
{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Hmtx_Table_Missing\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Hmtx_Table_Missing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Hmtx_Table_Missing} = (int)(0x93 + 0)}
}\par
{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Horiz_Header_Missing\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Horiz_Header_Missing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Horiz_Header_Missing} = (int)(0x8F + 0)}
}\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Ignore\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Ignore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Ignore} = (int)(0xA2 + 0)}
}\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Argument\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Argument}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Argument} = (int)(0x06 + 0)}
}\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Cache_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Cache_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Cache_Handle} = (int)(0x27 + 0)}
}\par
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Character_Code\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Character_Code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Character_Code} = (int)(0x11 + 0)}
}\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_CharMap_Format\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_CharMap_Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_CharMap_Format} = (int)(0x96 + 0)}
}\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_CharMap_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_CharMap_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_CharMap_Handle} = (int)(0x26 + 0)}
}\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_CodeRange\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_CodeRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_CodeRange} = (int)(0x8A + 0)}
}\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Composite\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Composite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Composite} = (int)(0x15 + 0)}
}\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Driver_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Driver_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Driver_Handle} = (int)(0x22 + 0)}
}\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Face_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Face_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Face_Handle} = (int)(0x23 + 0)}
}\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_File_Format\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_File_Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_File_Format} = (int)(0x03 + 0)}
}\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Frame_Operation\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Frame_Operation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Frame_Operation} = (int)(0x56 + 0)}
}\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Frame_Read\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Frame_Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Frame_Read} = (int)(0x58 + 0)}
}\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Glyph_Format\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Glyph_Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Glyph_Format} = (int)(0x12 + 0)}
}\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Glyph_Index\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Glyph_Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Glyph_Index} = (int)(0x10 + 0)}
}\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Handle} = (int)(0x20 + 0)}
}\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Horiz_Metrics\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Horiz_Metrics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Horiz_Metrics} = (int)(0x95 + 0)}
}\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Library_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Library_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Library_Handle} = (int)(0x21 + 0)}
}\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Offset\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Offset} = (int)(0x09 + 0)}
}\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Opcode\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Opcode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Opcode} = (int)(0x80 + 0)}
}\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Outline\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Outline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Outline} = (int)(0x14 + 0)}
}\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Pixel_Size\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Pixel_Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Pixel_Size} = (int)(0x17 + 0)}
}\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Post_Table\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Post_Table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Post_Table} = (int)(0x9B + 0)}
}\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Post_Table_Format\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Post_Table_Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Post_Table_Format} = (int)(0x9A + 0)}
}\par
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_PPem\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_PPem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_PPem} = (int)(0x97 + 0)}
}\par
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Reference\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Reference} = (int)(0x86 + 0)}
}\par
{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Size_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Size_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Size_Handle} = (int)(0x24 + 0)}
}\par
{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Slot_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Slot_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Slot_Handle} = (int)(0x25 + 0)}
}\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Stream_Handle\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Stream_Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Stream_Handle} = (int)(0x28 + 0)}
}\par
{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Stream_Operation\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Stream_Operation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Stream_Operation} = (int)(0x55 + 0)}
}\par
{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Stream_Read\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Stream_Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Stream_Read} = (int)(0x54 + 0)}
}\par
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Stream_Seek\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Stream_Seek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Stream_Seek} = (int)(0x52 + 0)}
}\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Stream_Skip\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Stream_Skip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Stream_Skip} = (int)(0x53 + 0)}
}\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Table\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Table} = (int)(0x08 + 0)}
}\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Version\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Version} = (int)(0x04 + 0)}
}\par
{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Invalid_Vert_Metrics\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Invalid_Vert_Metrics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Invalid_Vert_Metrics} = (int)(0x98 + 0)}
}\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Locations_Missing\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Locations_Missing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Locations_Missing} = (int)(0x90 + 0)}
}\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Lower_Module_Version\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Lower_Module_Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Lower_Module_Version} = (int)(0x05 + 0)}
}\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Missing_Bbx_Field\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Missing_Bbx_Field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Missing_Bbx_Field} = (int)(0xB6 + 0)}
}\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Missing_Chars_Field\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Missing_Chars_Field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Missing_Chars_Field} = (int)(0xB3 + 0)}
}\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Missing_Encoding_Field\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Missing_Encoding_Field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Missing_Encoding_Field} = (int)(0xB5 + 0)}
}\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Missing_Font_Field\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Missing_Font_Field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Missing_Font_Field} = (int)(0xB1 + 0)}
}\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Missing_Size_Field\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Missing_Size_Field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Missing_Size_Field} = (int)(0xB2 + 0)}
}\par
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Missing_Startchar_Field\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Missing_Startchar_Field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Missing_Startchar_Field} = (int)(0xB4 + 0)}
}\par
{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Missing_Startfont_Field\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Missing_Startfont_Field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Missing_Startfont_Field} = (int)(0xB0 + 0)}
}\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Name_Table_Missing\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Name_Table_Missing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Name_Table_Missing} = (int)(0x91 + 0)}
}\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Nested_DEFS\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Nested_DEFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Nested_DEFS} = (int)(0x89 + 0)}
}\par
{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Nested_Frame_Access\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Nested_Frame_Access}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Nested_Frame_Access} = (int)(0x57 + 0)}
}\par
{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Ok\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Ok} = 0x00}
}\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Out_Of_Memory\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Out_Of_Memory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Out_Of_Memory} = (int)(0x40 + 0)}
}\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Post_Table_Missing\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Post_Table_Missing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Post_Table_Missing} = (int)(0x94 + 0)}
}\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Raster_Corrupted\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Raster_Corrupted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Raster_Corrupted} = (int)(0x61 + 0)}
}\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Raster_Negative_Height\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Raster_Negative_Height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Raster_Negative_Height} = (int)(0x63 + 0)}
}\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Raster_Overflow\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Raster_Overflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Raster_Overflow} = (int)(0x62 + 0)}
}\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Raster_Uninitialized\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Raster_Uninitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Raster_Uninitialized} = (int)(0x60 + 0)}
}\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Stack_Overflow\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Stack_Overflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Stack_Overflow} = (int)(0x82 + 0)}
}\par
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Stack_Underflow\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Stack_Underflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Stack_Underflow} = (int)(0xA1 + 0)}
}\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Syntax_Error\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Syntax_Error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Syntax_Error} = (int)(0xA0 + 0)}
}\par
{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Table_Missing\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Table_Missing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Table_Missing} = (int)(0x8E + 0)}
}\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Too_Few_Arguments\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Too_Few_Arguments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Too_Few_Arguments} = (int)(0x81 + 0)}
}\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Too_Many_Caches\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Too_Many_Caches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Too_Many_Caches} = (int)(0x70 + 0)}
}\par
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Too_Many_Drivers\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Too_Many_Drivers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Too_Many_Drivers} = (int)(0x30 + 0)}
}\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Too_Many_Extensions\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Too_Many_Extensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Too_Many_Extensions} = (int)(0x31 + 0)}
}\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Too_Many_Function_Defs\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Too_Many_Function_Defs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Too_Many_Function_Defs} = (int)(0x8C + 0)}
}\par
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Too_Many_Hints\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Too_Many_Hints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Too_Many_Hints} = (int)(0x16 + 0)}
}\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Too_Many_Instruction_Defs\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Too_Many_Instruction_Defs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Too_Many_Instruction_Defs} = (int)(0x8D + 0)}
}\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Unimplemented_Feature\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Unimplemented_Feature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Unimplemented_Feature} = (int)(0x07 + 0)}
}\par
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Unknown_File_Format\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Unknown_File_Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Unknown_File_Format} = (int)(0x02 + 0)}
}\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Err_Unlisted_Object\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Err_Unlisted_Object}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Err_Unlisted_Object} = (int)(0x41 + 0)}
}\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ErrorStrings\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ErrorStrings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Hashtable {\b Tao.FreeType.FT.ErrorStrings}{\f2  [static]}}
}\par
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FREETYPE_MAJOR\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FREETYPE_MAJOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FREETYPE_MAJOR} = 2}
}\par
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FREETYPE_MINOR\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FREETYPE_MINOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FREETYPE_MINOR} = 1}
}\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FREETYPE_PATCH\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FREETYPE_PATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FREETYPE_PATCH} = 9}
}\par
{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_CROP_BITMAP\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_CROP_BITMAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_CROP_BITMAP} = 0x40}
}\par
{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_DEFAULT\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_DEFAULT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_DEFAULT} = 0x0}
}\par
{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_FORCE_AUTOHINT\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_FORCE_AUTOHINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_FORCE_AUTOHINT} = 0x20}
}\par
{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH} = 0x200}
}\par
{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_IGNORE_TRANSFORM\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_IGNORE_TRANSFORM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_IGNORE_TRANSFORM} = 0x800}
}\par
{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_LINEAR_DESIGN\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_LINEAR_DESIGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_LINEAR_DESIGN} = 0x2000}
}\par
{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_MONOCHROME\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_MONOCHROME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_MONOCHROME} = 0x1000}
}\par
{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_NO_BITMAP\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_NO_BITMAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_NO_BITMAP} = 0x8}
}\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_NO_HINTING\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_NO_HINTING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_NO_HINTING} = 0x2}
}\par
{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_NO_RECURSE\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_NO_RECURSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_NO_RECURSE} = 0x400}
}\par
{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_NO_SCALE\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_NO_SCALE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_NO_SCALE} = 0x1}
}\par
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_PEDANTIC\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_PEDANTIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_PEDANTIC} = 0x80}
}\par
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_RENDER\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_RENDER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_RENDER} = 0x4}
}\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_SBITS_ONLY\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_SBITS_ONLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_SBITS_ONLY} = 0x4000}
}\par
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_LOAD_VERTICAL_LAYOUT\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_LOAD_VERTICAL_LAYOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.FT_LOAD_VERTICAL_LAYOUT} = 0x10}
}\par
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_open_driver\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_open_driver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_open_driver} = 0x8}
}\par
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OPEN_DRIVER\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OPEN_DRIVER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OPEN_DRIVER} = 0x8}
}\par
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_open_memory\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_open_memory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_open_memory} = 0x1}
}\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OPEN_MEMORY\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OPEN_MEMORY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OPEN_MEMORY} = 0x1}
}\par
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_open_params\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_open_params}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_open_params} = 0x10}
}\par
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OPEN_PARAMS\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OPEN_PARAMS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OPEN_PARAMS} = 0x10}
}\par
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OPEN_PATHNAME\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OPEN_PATHNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OPEN_PATHNAME} = 0x4}
}\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_open_pathname\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_open_pathname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_open_pathname} = 0x4}
}\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_open_stream\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_open_stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_open_stream} = 0x2}
}\par
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OPEN_STREAM\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OPEN_STREAM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OPEN_STREAM} = 0x2}
}\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OUTLINE_EVEN_ODD_FILL\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OUTLINE_EVEN_ODD_FILL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OUTLINE_EVEN_ODD_FILL} = 0x2}
}\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_outline_even_odd_fill\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_outline_even_odd_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_outline_even_odd_fill} = 0x2}
}\par
{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_outline_high_precision\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_outline_high_precision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_outline_high_precision} = 0x100}
}\par
{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OUTLINE_HIGH_PRECISION\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OUTLINE_HIGH_PRECISION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OUTLINE_HIGH_PRECISION} = 0x100}
}\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_outline_ignore_dropouts\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_outline_ignore_dropouts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_outline_ignore_dropouts} = 0x8}
}\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OUTLINE_IGNORE_DROPOUTS\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OUTLINE_IGNORE_DROPOUTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OUTLINE_IGNORE_DROPOUTS} = 0x8}
}\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_outline_none\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_outline_none}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_outline_none} = 0x0}
}\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OUTLINE_NONE\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OUTLINE_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OUTLINE_NONE} = 0x0}
}\par
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_outline_owner\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_outline_owner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_outline_owner} = 0x1}
}\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OUTLINE_OWNER\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OUTLINE_OWNER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OUTLINE_OWNER} = 0x1}
}\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_outline_reverse_fill\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_outline_reverse_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_outline_reverse_fill} = 0x4}
}\par
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OUTLINE_REVERSE_FILL\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OUTLINE_REVERSE_FILL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OUTLINE_REVERSE_FILL} = 0x4}
}\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_outline_single_pass\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_outline_single_pass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_outline_single_pass} = 0x200}
}\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_OUTLINE_SINGLE_PASS\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_OUTLINE_SINGLE_PASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_OUTLINE_SINGLE_PASS} = 0x200}
}\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_raster_flag_aa\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_raster_flag_aa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_raster_flag_aa} = 0x1}
}\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_RASTER_FLAG_AA\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_RASTER_FLAG_AA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_RASTER_FLAG_AA} = 0x1}
}\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_raster_flag_clip\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_raster_flag_clip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_raster_flag_clip} = 0x4}
}\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_RASTER_FLAG_CLIP\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_RASTER_FLAG_CLIP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_RASTER_FLAG_CLIP} = 0x4}
}\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_raster_flag_default\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_raster_flag_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_raster_flag_default} = 0x0}
}\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_RASTER_FLAG_DEFAULT\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_RASTER_FLAG_DEFAULT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_RASTER_FLAG_DEFAULT} = 0x0}
}\par
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FT_RASTER_FLAG_DIRECT\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:FT_RASTER_FLAG_DIRECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.FT_RASTER_FLAG_DIRECT} = 0x2}
}\par
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ft_raster_flag_direct\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:ft_raster_flag_direct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.FreeType.FT.ft_raster_flag_direct} = 0x2}
}\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v HAVE_FCNTL_H\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:HAVE_FCNTL_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.HAVE_FCNTL_H} = 1}
}\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v HAVE_UNISTD_H\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:HAVE_UNISTD_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.HAVE_UNISTD_H} = 1}
}\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MAX_MODULES\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:MAX_MODULES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.MAX_MODULES} = 32}
}\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Autohint\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Autohint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Autohint} = 0}
}\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Base\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Base} = 0}
}\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_BDF\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_BDF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_BDF} = 0}
}\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Cache\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Cache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Cache} = 0}
}\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_CFF\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_CFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_CFF} = 0}
}\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_CID\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_CID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_CID} = 0}
}\par
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Gzip\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Gzip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Gzip} = 0}
}\par
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_LZW\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_LZW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_LZW} = 0}
}\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Max\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Max} = 1}
}\par
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_PCF\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_PCF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_PCF} = 0}
}\par
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_PFR\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_PFR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_PFR} = 0}
}\par
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_PSaux\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_PSaux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_PSaux} = 0}
}\par
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_PShinter\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_PShinter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_PShinter} = 0}
}\par
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_PSnames\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_PSnames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_PSnames} = 0}
}\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Raster\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Raster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Raster} = 0}
}\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_SFNT\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_SFNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_SFNT} = 0}
}\par
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Smooth\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Smooth} = 0}
}\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_TrueType\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_TrueType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_TrueType} = 0}
}\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Type1\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Type1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Type1} = 0}
}\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Type42\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Type42}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Type42} = 0}
}\par
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mod_Err_Winfonts\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:Mod_Err_Winfonts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.Mod_Err_Winfonts} = 0}
}\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v T1_MAX_CHARSTRINGS_OPERANDS\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:T1_MAX_CHARSTRINGS_OPERANDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.T1_MAX_CHARSTRINGS_OPERANDS} = 256}
}\par
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v T1_MAX_DICT_DEPTH\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:T1_MAX_DICT_DEPTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.T1_MAX_DICT_DEPTH} = 5}
}\par
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v T1_MAX_SUBRS_CALLS\:Tao::FreeType::FT}
{\xe \v Tao::FreeType::FT\:T1_MAX_SUBRS_CALLS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.FreeType.FT.T1_MAX_SUBRS_CALLS} = 16}
}\par
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_BBox Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_BBox}
{\xe \v Tao::FreeType::FT_BBox}
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold an outline's bounding box, i.e., the coordinates of its extrema in the horizontal and vertical directions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xMin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yMin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xMax}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yMax}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold an outline's bounding box, i.e., the coordinates of its extrema in the horizontal and vertical directions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v xMax\:Tao::FreeType::FT_BBox}
{\xe \v Tao::FreeType::FT_BBox\:xMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_BBox.xMax}}
}\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xMin\:Tao::FreeType::FT_BBox}
{\xe \v Tao::FreeType::FT_BBox\:xMin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_BBox.xMin}}
}\par
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v yMax\:Tao::FreeType::FT_BBox}
{\xe \v Tao::FreeType::FT_BBox\:yMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_BBox.yMax}}
}\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v yMin\:Tao::FreeType::FT_BBox}
{\xe \v Tao::FreeType::FT_BBox\:yMin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_BBox.yMin}}
}\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Bitmap Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap}
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a bitmap or pixmap to the raster. Note that we now manage pixmaps of various depths through the \'91pixel_mode\'92 field. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rows}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pitch}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b num_grays}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sbyte {\b pixel_mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sbyte {\b palette_mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b palette}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a bitmap or pixmap to the raster. Note that we now manage pixmaps of various depths through the \'91pixel_mode\'92 field. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buffer\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Bitmap.buffer}}
}\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_grays\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:num_grays}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_Bitmap.num_grays}}
}\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v palette\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:palette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Bitmap.palette}}
}\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v palette_mode\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:palette_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sbyte {\b Tao.FreeType.FT_Bitmap.palette_mode}}
}\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pitch\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:pitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Bitmap.pitch}}
}\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pixel_mode\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:pixel_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sbyte {\b Tao.FreeType.FT_Bitmap.pixel_mode}}
}\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rows\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:rows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Bitmap.rows}}
}\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v width\:Tao::FreeType::FT_Bitmap}
{\xe \v Tao::FreeType::FT_Bitmap\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Bitmap.width}}
}\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Bitmap_Size Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Bitmap_Size}
{\xe \v Tao::FreeType::FT_Bitmap_Size}
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure models the metrics of a bitmap strike (i.e., a set of glyphs for a given point size and resolution) in a bitmap font. It is used for the \'91available_sizes\'92 field of FT_Face. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x_ppem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y_ppem}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure models the metrics of a bitmap strike (i.e., a set of glyphs for a given point size and resolution) in a bitmap font. It is used for the \'91available_sizes\'92 field of FT_Face. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v height\:Tao::FreeType::FT_Bitmap_Size}
{\xe \v Tao::FreeType::FT_Bitmap_Size\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_Bitmap_Size.height}}
}\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v size\:Tao::FreeType::FT_Bitmap_Size}
{\xe \v Tao::FreeType::FT_Bitmap_Size\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Bitmap_Size.size}}
}\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v width\:Tao::FreeType::FT_Bitmap_Size}
{\xe \v Tao::FreeType::FT_Bitmap_Size\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_Bitmap_Size.width}}
}\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x_ppem\:Tao::FreeType::FT_Bitmap_Size}
{\xe \v Tao::FreeType::FT_Bitmap_Size\:x_ppem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Bitmap_Size.x_ppem}}
}\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y_ppem\:Tao::FreeType::FT_Bitmap_Size}
{\xe \v Tao::FreeType::FT_Bitmap_Size\:y_ppem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Bitmap_Size.y_ppem}}
}\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_CharMapRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_CharMapRec}
{\xe \v Tao::FreeType::FT_CharMapRec}
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base charmap structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b face}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Encoding} {\b encoding}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b platform_id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b encoding_id}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base charmap structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v encoding\:Tao::FreeType::FT_CharMapRec}
{\xe \v Tao::FreeType::FT_CharMapRec\:encoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Encoding} {\b Tao.FreeType.FT_CharMapRec.encoding}}
}\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v encoding_id\:Tao::FreeType::FT_CharMapRec}
{\xe \v Tao::FreeType::FT_CharMapRec\:encoding_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FreeType.FT_CharMapRec.encoding_id}}
}\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v face\:Tao::FreeType::FT_CharMapRec}
{\xe \v Tao::FreeType::FT_CharMapRec\:face}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_CharMapRec.face}}
}\par
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v platform_id\:Tao::FreeType::FT_CharMapRec}
{\xe \v Tao::FreeType::FT_CharMapRec\:platform_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FreeType.FT_CharMapRec.platform_id}}
}\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Data Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Data}
{\xe \v Tao::FreeType::FT_Data}
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read-only binary data represented as a pointer and a length. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pointer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b length}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read-only binary data represented as a pointer and a length. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v length\:Tao::FreeType::FT_Data}
{\xe \v Tao::FreeType::FT_Data\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Data.length}}
}\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pointer\:Tao::FreeType::FT_Data}
{\xe \v Tao::FreeType::FT_Data\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Data.pointer}}
}\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_FaceRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec}
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root face class structure. A face object models a typeface in a font file. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_faces}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b face_index}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b face_flags}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b style_flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_glyphs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b family_name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b style_name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_fixed_sizes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b available_sizes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_charmaps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b charmaps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Generic} {\b generic}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_BBox} {\b bbox}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b units_per_EM}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b ascender}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b descender}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b max_advance_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b max_advance_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b underline_position}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b underline_thickness}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b glyph}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b charmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b driver}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b memory}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b stream}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_ListRec} {\b sizes_list}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Generic} {\b autohint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b extensions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b _internal}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root face class structure. A face object models a typeface in a font file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _internal\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:_internal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec._internal}}
}\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ascender\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:ascender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_FaceRec.ascender}}
}\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v autohint\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:autohint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Generic} {\b Tao.FreeType.FT_FaceRec.autohint}}
}\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v available_sizes\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:available_sizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.available_sizes}}
}\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bbox\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:bbox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_BBox} {\b Tao.FreeType.FT_FaceRec.bbox}}
}\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v charmap\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:charmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.charmap}}
}\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v charmaps\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:charmaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.charmaps}}
}\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v descender\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:descender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_FaceRec.descender}}
}\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v driver\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:driver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.driver}}
}\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v extensions\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:extensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.extensions}}
}\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v face_flags\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:face_flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_FaceRec.face_flags}}
}\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v face_index\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:face_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_FaceRec.face_index}}
}\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v family_name\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:family_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.family_name}}
}\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v generic\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:generic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Generic} {\b Tao.FreeType.FT_FaceRec.generic}}
}\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v glyph\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:glyph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.glyph}}
}\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v height\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_FaceRec.height}}
}\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v max_advance_height\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:max_advance_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_FaceRec.max_advance_height}}
}\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v max_advance_width\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:max_advance_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_FaceRec.max_advance_width}}
}\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v memory\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:memory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.memory}}
}\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_charmaps\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:num_charmaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_FaceRec.num_charmaps}}
}\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_faces\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:num_faces}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_FaceRec.num_faces}}
}\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_fixed_sizes\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:num_fixed_sizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_FaceRec.num_fixed_sizes}}
}\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_glyphs\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:num_glyphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_FaceRec.num_glyphs}}
}\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v size\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.size}}
}\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v sizes_list\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:sizes_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_ListRec} {\b Tao.FreeType.FT_FaceRec.sizes_list}}
}\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v stream\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.stream}}
}\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v style_flags\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:style_flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_FaceRec.style_flags}}
}\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v style_name\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:style_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_FaceRec.style_name}}
}\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v underline_position\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:underline_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_FaceRec.underline_position}}
}\par
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v underline_thickness\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:underline_thickness}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_FaceRec.underline_thickness}}
}\par
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v units_per_EM\:Tao::FreeType::FT_FaceRec}
{\xe \v Tao::FreeType::FT_FaceRec\:units_per_EM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FreeType.FT_FaceRec.units_per_EM}}
}\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Generic Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Generic}
{\xe \v Tao::FreeType::FT_Generic}
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Client applications often need to associate their own data to a variety of {\b FreeType} core objects. For example, a text layout API might want to associate a glyph cache to a given size object. Most {\b FreeType} object contains a \'91generic\'92 field, of type {\b FT_Generic}, which usage is left to client applications and font servers. It can be used to store a pointer to client-specific data, as well as the address of a \'91finalizer\'92 function, which will be called by {\b FreeType} when the object is destroyed (for example, the previous client example would put the address of the glyph cache destructor in the \'91finalizer\'92 field). }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b finalizer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Client applications often need to associate their own data to a variety of {\b FreeType} core objects. For example, a text layout API might want to associate a glyph cache to a given size object. Most {\b FreeType} object contains a \'91generic\'92 field, of type {\b FT_Generic}, which usage is left to client applications and font servers. It can be used to store a pointer to client-specific data, as well as the address of a \'91finalizer\'92 function, which will be called by {\b FreeType} when the object is destroyed (for example, the previous client example would put the address of the glyph cache destructor in the \'91finalizer\'92 field). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:Tao::FreeType::FT_Generic}
{\xe \v Tao::FreeType::FT_Generic\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Generic.data}}
}\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v finalizer\:Tao::FreeType::FT_Generic}
{\xe \v Tao::FreeType::FT_Generic\:finalizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Generic.finalizer}}
}\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Glyph_Metrics Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics}
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model the metrics of a single glyph. The values are expressed in 26.6 fractional pixel format; if the flag FT_LOAD_NO_SCALE has been used while loading the glyph, values are expressed in font units instead. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b horiBearingX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b horiBearingY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b horiAdvance}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vertBearingX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vertBearingY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vertAdvance}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model the metrics of a single glyph. The values are expressed in 26.6 fractional pixel format; if the flag FT_LOAD_NO_SCALE has been used while loading the glyph, values are expressed in font units instead. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v height\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.height}}
}\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v horiAdvance\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:horiAdvance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.horiAdvance}}
}\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v horiBearingX\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:horiBearingX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.horiBearingX}}
}\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v horiBearingY\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:horiBearingY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.horiBearingY}}
}\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v vertAdvance\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:vertAdvance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.vertAdvance}}
}\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v vertBearingX\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:vertBearingX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.vertBearingX}}
}\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v vertBearingY\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:vertBearingY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.vertBearingY}}
}\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v width\:Tao::FreeType::FT_Glyph_Metrics}
{\xe \v Tao::FreeType::FT_Glyph_Metrics\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Glyph_Metrics.width}}
}\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_GlyphSlotRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec}
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root glyph slot class structure. A glyph slot is a container where individual glyphs can be loaded, be they in outline or bitmap format. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b library}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b face}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b reserved}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Generic} {\b generic}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Glyph_Metrics} {\b metrics}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linearHoriAdvance}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linearVertAdvance}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Vector} {\b advance}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Glyph_Format} {\b format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Bitmap} {\b bitmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bitmap_left}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bitmap_top}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Outline} {\b outline}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b num_subglyphs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b subglyphs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b control_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b control_len}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lsb_delta}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rsb_delta}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b other}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b _internal}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root glyph slot class structure. A glyph slot is a container where individual glyphs can be loaded, be they in outline or bitmap format. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _internal\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:_internal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_GlyphSlotRec._internal}}
}\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v advance\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:advance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Vector} {\b Tao.FreeType.FT_GlyphSlotRec.advance}}
}\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bitmap\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:bitmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Bitmap} {\b Tao.FreeType.FT_GlyphSlotRec.bitmap}}
}\par
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bitmap_left\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:bitmap_left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_GlyphSlotRec.bitmap_left}}
}\par
{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bitmap_top\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:bitmap_top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_GlyphSlotRec.bitmap_top}}
}\par
{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v control_data\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:control_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_GlyphSlotRec.control_data}}
}\par
{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v control_len\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:control_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_GlyphSlotRec.control_len}}
}\par
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v face\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:face}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_GlyphSlotRec.face}}
}\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v format\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Glyph_Format} {\b Tao.FreeType.FT_GlyphSlotRec.format}}
}\par
{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v generic\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:generic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Generic} {\b Tao.FreeType.FT_GlyphSlotRec.generic}}
}\par
{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v library\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:library}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_GlyphSlotRec.library}}
}\par
{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v linearHoriAdvance\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:linearHoriAdvance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_GlyphSlotRec.linearHoriAdvance}}
}\par
{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v linearVertAdvance\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:linearVertAdvance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_GlyphSlotRec.linearVertAdvance}}
}\par
{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v lsb_delta\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:lsb_delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_GlyphSlotRec.lsb_delta}}
}\par
{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v metrics\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:metrics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Glyph_Metrics} {\b Tao.FreeType.FT_GlyphSlotRec.metrics}}
}\par
{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v next\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_GlyphSlotRec.next}}
}\par
{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_subglyphs\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:num_subglyphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FreeType.FT_GlyphSlotRec.num_subglyphs}}
}\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v other\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:other}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_GlyphSlotRec.other}}
}\par
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v outline\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:outline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Outline} {\b Tao.FreeType.FT_GlyphSlotRec.outline}}
}\par
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v reserved\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FreeType.FT_GlyphSlotRec.reserved}}
}\par
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rsb_delta\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:rsb_delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_GlyphSlotRec.rsb_delta}}
}\par
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v subglyphs\:Tao::FreeType::FT_GlyphSlotRec}
{\xe \v Tao::FreeType::FT_GlyphSlotRec\:subglyphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_GlyphSlotRec.subglyphs}}
}\par
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_ListNodeRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_ListNodeRec}
{\xe \v Tao::FreeType::FT_ListNodeRec}
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a single list element. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b prev}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b next}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a single list element. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:Tao::FreeType::FT_ListNodeRec}
{\xe \v Tao::FreeType::FT_ListNodeRec\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_ListNodeRec.data}}
}\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v next\:Tao::FreeType::FT_ListNodeRec}
{\xe \v Tao::FreeType::FT_ListNodeRec\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_ListNodeRec.next}}
}\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v prev\:Tao::FreeType::FT_ListNodeRec}
{\xe \v Tao::FreeType::FT_ListNodeRec\:prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_ListNodeRec.prev}}
}\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_ListRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_ListRec}
{\xe \v Tao::FreeType::FT_ListRec}
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a simple double-linked list. These are used in many parts of {\b FreeType}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b head}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b tail}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a simple double-linked list. These are used in many parts of {\b FreeType}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v head\:Tao::FreeType::FT_ListRec}
{\xe \v Tao::FreeType::FT_ListRec\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_ListRec.head}}
}\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tail\:Tao::FreeType::FT_ListRec}
{\xe \v Tao::FreeType::FT_ListRec\:tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_ListRec.tail}}
}\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Matrix Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Matrix}
{\xe \v Tao::FreeType::FT_Matrix}
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2x2 matrix. Coefficients are in 16.16 fixed float format. The computation performed is: x' = x*xx + y*xy y' = x*yx + y*yy. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yy}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2x2 matrix. Coefficients are in 16.16 fixed float format. The computation performed is: x' = x*xx + y*xy y' = x*yx + y*yy. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v xx\:Tao::FreeType::FT_Matrix}
{\xe \v Tao::FreeType::FT_Matrix\:xx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Matrix.xx}}
}\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xy\:Tao::FreeType::FT_Matrix}
{\xe \v Tao::FreeType::FT_Matrix\:xy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Matrix.xy}}
}\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v yx\:Tao::FreeType::FT_Matrix}
{\xe \v Tao::FreeType::FT_Matrix\:yx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Matrix.yx}}
}\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v yy\:Tao::FreeType::FT_Matrix}
{\xe \v Tao::FreeType::FT_Matrix\:yy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Matrix.yy}}
}\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Open_Args Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args}
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to indicate how to open a new font file or stream. A pointer to such a structure can be used as a parameter for the functions FT_Open_Face and FT_Attach_Stream. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b memory_base}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b memory_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pathname}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b stream}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b driver}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_params}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b _params}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to indicate how to open a new font file or stream. A pointer to such a structure can be used as a parameter for the functions FT_Open_Face and FT_Attach_Stream. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _params\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:_params}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Open_Args._params}}
}\par
{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v driver\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:driver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Open_Args.driver}}
}\par
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FreeType.FT_Open_Args.flags}}
}\par
{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v memory_base\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:memory_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Open_Args.memory_base}}
}\par
{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v memory_size\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:memory_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Open_Args.memory_size}}
}\par
{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v num_params\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:num_params}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Open_Args.num_params}}
}\par
{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pathname\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:pathname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Open_Args.pathname}}
}\par
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v stream\:Tao::FreeType::FT_Open_Args}
{\xe \v Tao::FreeType::FT_Open_Args\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Open_Args.stream}}
}\par
{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Outline Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Outline}
{\xe \v Tao::FreeType::FT_Outline}
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure is used to describe an outline to the scan-line converter. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b n_contours}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b n_points}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b points}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b tags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b contours}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure is used to describe an outline to the scan-line converter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v contours\:Tao::FreeType::FT_Outline}
{\xe \v Tao::FreeType::FT_Outline\:contours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Outline.contours}}
}\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FreeType::FT_Outline}
{\xe \v Tao::FreeType::FT_Outline\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Outline.flags}}
}\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v n_contours\:Tao::FreeType::FT_Outline}
{\xe \v Tao::FreeType::FT_Outline\:n_contours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_Outline.n_contours}}
}\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v n_points\:Tao::FreeType::FT_Outline}
{\xe \v Tao::FreeType::FT_Outline\:n_points}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_Outline.n_points}}
}\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v points\:Tao::FreeType::FT_Outline}
{\xe \v Tao::FreeType::FT_Outline\:points}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Outline.points}}
}\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tags\:Tao::FreeType::FT_Outline}
{\xe \v Tao::FreeType::FT_Outline\:tags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Outline.tags}}
}\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Outline_Funcs Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Outline_Funcs}
{\xe \v Tao::FreeType::FT_Outline_Funcs}
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold various function pointers used during outline decomposition in order to emit segments, conic, and cubic B\'E9ziers, as well as \'91move to\'92 and \'91close to\'92 operations. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b move_to}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b line_to}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b conic_to}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b cubic_to}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b shift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b delta}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold various function pointers used during outline decomposition in order to emit segments, conic, and cubic B\'E9ziers, as well as \'91move to\'92 and \'91close to\'92 operations. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v conic_to\:Tao::FreeType::FT_Outline_Funcs}
{\xe \v Tao::FreeType::FT_Outline_Funcs\:conic_to}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Outline_Funcs.conic_to}}
}\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cubic_to\:Tao::FreeType::FT_Outline_Funcs}
{\xe \v Tao::FreeType::FT_Outline_Funcs\:cubic_to}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Outline_Funcs.cubic_to}}
}\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v delta\:Tao::FreeType::FT_Outline_Funcs}
{\xe \v Tao::FreeType::FT_Outline_Funcs\:delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Outline_Funcs.delta}}
}\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v line_to\:Tao::FreeType::FT_Outline_Funcs}
{\xe \v Tao::FreeType::FT_Outline_Funcs\:line_to}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Outline_Funcs.line_to}}
}\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v move_to\:Tao::FreeType::FT_Outline_Funcs}
{\xe \v Tao::FreeType::FT_Outline_Funcs\:move_to}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Outline_Funcs.move_to}}
}\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v shift\:Tao::FreeType::FT_Outline_Funcs}
{\xe \v Tao::FreeType::FT_Outline_Funcs\:shift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Outline_Funcs.shift}}
}\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Parameter Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Parameter}
{\xe \v Tao::FreeType::FT_Parameter}
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to pass more or less generic parameters to FT_Open_Face. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b tag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to pass more or less generic parameters to FT_Open_Face. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:Tao::FreeType::FT_Parameter}
{\xe \v Tao::FreeType::FT_Parameter\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Parameter.data}}
}\par
{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tag\:Tao::FreeType::FT_Parameter}
{\xe \v Tao::FreeType::FT_Parameter\:tag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FreeType.FT_Parameter.tag}}
}\par
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Raster_Funcs Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Raster_Funcs}
{\xe \v Tao::FreeType::FT_Raster_Funcs}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a given raster class to the library. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Glyph_Format} {\b glyph_format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b raster_new}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b raster_reset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b raster_set_mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b raster_render}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b raster_done}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a given raster class to the library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v glyph_format\:Tao::FreeType::FT_Raster_Funcs}
{\xe \v Tao::FreeType::FT_Raster_Funcs\:glyph_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Glyph_Format} {\b Tao.FreeType.FT_Raster_Funcs.glyph_format}}
}\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v raster_done\:Tao::FreeType::FT_Raster_Funcs}
{\xe \v Tao::FreeType::FT_Raster_Funcs\:raster_done}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Funcs.raster_done}}
}\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v raster_new\:Tao::FreeType::FT_Raster_Funcs}
{\xe \v Tao::FreeType::FT_Raster_Funcs\:raster_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Funcs.raster_new}}
}\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v raster_render\:Tao::FreeType::FT_Raster_Funcs}
{\xe \v Tao::FreeType::FT_Raster_Funcs\:raster_render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Funcs.raster_render}}
}\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v raster_reset\:Tao::FreeType::FT_Raster_Funcs}
{\xe \v Tao::FreeType::FT_Raster_Funcs\:raster_reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Funcs.raster_reset}}
}\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v raster_set_mode\:Tao::FreeType::FT_Raster_Funcs}
{\xe \v Tao::FreeType::FT_Raster_Funcs\:raster_set_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Funcs.raster_set_mode}}
}\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Raster_Params Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params}
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold the arguments used by a raster's render functions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b target}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b source}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b gray_spans}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b black_spans}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b bit_test}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b bit_set}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b user}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_BBox} {\b clip_box}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold the arguments used by a raster's render functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bit_set\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:bit_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Params.bit_set}}
}\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bit_test\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:bit_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Params.bit_test}}
}\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v black_spans\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:black_spans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Params.black_spans}}
}\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v clip_box\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:clip_box}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_BBox} {\b Tao.FreeType.FT_Raster_Params.clip_box}}
}\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Raster_Params.flags}}
}\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v gray_spans\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:gray_spans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Params.gray_spans}}
}\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v source\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Params.source}}
}\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v target\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Params.target}}
}\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v user\:Tao::FreeType::FT_Raster_Params}
{\xe \v Tao::FreeType::FT_Raster_Params\:user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_Raster_Params.user}}
}\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Size_Metrics Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics}
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size metrics structure gives the metrics of a size object. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b x_ppem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b y_ppem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x_scale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y_scale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ascender}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b descender}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_advance}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size metrics structure gives the metrics of a size object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ascender\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:ascender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Size_Metrics.ascender}}
}\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v descender\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:descender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Size_Metrics.descender}}
}\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v height\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Size_Metrics.height}}
}\par
{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v max_advance\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:max_advance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Size_Metrics.max_advance}}
}\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x_ppem\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:x_ppem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FreeType.FT_Size_Metrics.x_ppem}}
}\par
{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x_scale\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:x_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Size_Metrics.x_scale}}
}\par
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y_ppem\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:y_ppem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FreeType.FT_Size_Metrics.y_ppem}}
}\par
{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y_scale\:Tao::FreeType::FT_Size_Metrics}
{\xe \v Tao::FreeType::FT_Size_Metrics\:y_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Size_Metrics.y_scale}}
}\par
{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_SizeRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_SizeRec}
{\xe \v Tao::FreeType::FT_SizeRec}
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root size class structure. A size object models a face object at a given size. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b face}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Generic} {\b generic}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_Size_Metrics} {\b metrics}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b _internal}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root size class structure. A size object models a face object at a given size. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _internal\:Tao::FreeType::FT_SizeRec}
{\xe \v Tao::FreeType::FT_SizeRec\:_internal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_SizeRec._internal}}
}\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v face\:Tao::FreeType::FT_SizeRec}
{\xe \v Tao::FreeType::FT_SizeRec\:face}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_SizeRec.face}}
}\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v generic\:Tao::FreeType::FT_SizeRec}
{\xe \v Tao::FreeType::FT_SizeRec\:generic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Generic} {\b Tao.FreeType.FT_SizeRec.generic}}
}\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v metrics\:Tao::FreeType::FT_SizeRec}
{\xe \v Tao::FreeType::FT_SizeRec\:metrics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_Size_Metrics} {\b Tao.FreeType.FT_SizeRec.metrics}}
}\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Span Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Span}
{\xe \v Tao::FreeType::FT_Span}
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model a single span of gray (or black) pixels when rendering a monochrome or anti-aliased bitmap. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b len}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b coverage}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model a single span of gray (or black) pixels when rendering a monochrome or anti-aliased bitmap. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v coverage\:Tao::FreeType::FT_Span}
{\xe \v Tao::FreeType::FT_Span\:coverage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.FreeType.FT_Span.coverage}}
}\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v len\:Tao::FreeType::FT_Span}
{\xe \v Tao::FreeType::FT_Span\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.FreeType.FT_Span.len}}
}\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x\:Tao::FreeType::FT_Span}
{\xe \v Tao::FreeType::FT_Span\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_Span.x}}
}\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_StreamDesc Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_StreamDesc}
{\xe \v Tao::FreeType::FT_StreamDesc}
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union type used to store either a long or a pointer. This is used to store a file descriptor or a \'91FILE*\'92 in an input stream. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pointer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union type used to store either a long or a pointer. This is used to store a file descriptor or a \'91FILE*\'92 in an input stream. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _value\:Tao::FreeType::FT_StreamDesc}
{\xe \v Tao::FreeType::FT_StreamDesc\:_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_StreamDesc._value}}
}\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pointer\:Tao::FreeType::FT_StreamDesc}
{\xe \v Tao::FreeType::FT_StreamDesc\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_StreamDesc.pointer}}
}\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_StreamRec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec}
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe an input stream. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b _base}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b pos}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_StreamDesc} {\b descriptor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_StreamDesc} {\b pathname}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b read}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b close}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b memory}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b cursor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b limit}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe an input stream. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _base\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_StreamRec._base}}
}\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v close\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_StreamRec.close}}
}\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cursor\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_StreamRec.cursor}}
}\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v descriptor\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:descriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_StreamDesc} {\b Tao.FreeType.FT_StreamRec.descriptor}}
}\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v limit\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:limit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_StreamRec.limit}}
}\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v memory\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:memory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_StreamRec.memory}}
}\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pathname\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:pathname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_StreamDesc} {\b Tao.FreeType.FT_StreamRec.pathname}}
}\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pos\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FreeType.FT_StreamRec.pos}}
}\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v read\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.FT_StreamRec.read}}
}\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v size\:Tao::FreeType::FT_StreamRec}
{\xe \v Tao::FreeType::FT_StreamRec\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.FreeType.FT_StreamRec.size}}
}\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_UnitVector Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_UnitVector}
{\xe \v Tao::FreeType::FT_UnitVector}
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector unit vector. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector unit vector. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x\:Tao::FreeType::FT_UnitVector}
{\xe \v Tao::FreeType::FT_UnitVector\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_UnitVector.x}}
}\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:Tao::FreeType::FT_UnitVector}
{\xe \v Tao::FreeType::FT_UnitVector\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.FreeType.FT_UnitVector.y}}
}\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.FT_Vector Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::FT_Vector}
{\xe \v Tao::FreeType::FT_Vector}
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector; coordinates are of the FT_Pos type. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector; coordinates are of the FT_Pos type. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x\:Tao::FreeType::FT_Vector}
{\xe \v Tao::FreeType::FT_Vector\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Vector.x}}
}\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:Tao::FreeType::FT_Vector}
{\xe \v Tao::FreeType::FT_Vector\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FreeType.FT_Vector.y}}
}\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTFont Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont}
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Font abstract class. }}\par
Inheritance diagram for Tao.FtGl.FtGl.FTFont:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_font.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTFont} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Destroy} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b LineHeight} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CharMap} ({\b FT_Encoding} encoding)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BBox} (string str, out float x1, out float y1, out float z1, out float x2, out float y2, out float z2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BBox} (string str, int len, out float x1, out float y1, out float z1, out float x2, out float y2, out float z2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FaceSize} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FaceSize} (int size, int res)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FaceSize} (int size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Descender} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Ascender} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Advance} (string str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Depth} (float depth)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Outset} (float front, float back)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Render} (string str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Error} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Attach} (string pathFont)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Attach} (string p, int size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CharMapCount} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b FT_Encoding} > {\b CharMapList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetDisplayList} (bool use)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b _ptr} = IntPtr.Zero\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b _data} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GCHandle {\b _gch}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b Pointer}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Font abstract class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTFont\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:FTFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTFont.FTFont ()}
}\par
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Advance\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Advance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Tao.FtGl.FtGl.FTFont.Advance (string {\i str})}
}\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i str} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Ascender\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Ascender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Tao.FtGl.FtGl.FTFont.Ascender ()}
}\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Attach\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Tao.FtGl.FtGl.FTFont.Attach (string {\i pathFont})}
}\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pathFont} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Attach\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Tao.FtGl.FtGl.FTFont.Attach (string {\i p}, int {\i size})}
}\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i p} \par
{\i size} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v BBox\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:BBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTFont.BBox (string {\i str}, out float {\i x1}, out float {\i y1}, out float {\i z1}, out float {\i x2}, out float {\i y2}, out float {\i z2})}
}\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i str} \par
{\i x1} \par
{\i y1} \par
{\i z1} \par
{\i x2} \par
{\i y2} \par
{\i z2} \par
}
}}
{\xe \v BBox\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:BBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTFont.BBox (string {\i str}, int {\i len}, out float {\i x1}, out float {\i y1}, out float {\i z1}, out float {\i x2}, out float {\i y2}, out float {\i z2})}
}\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i str} \par
{\i start} \par
{\i end} \par
{\i x1} \par
{\i y1} \par
{\i z1} \par
{\i x2} \par
{\i y2} \par
{\i z2} \par
}
}}
{\xe \v CharMap\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:CharMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.FtGl.FtGl.FTFont.CharMap ({\b FT_Encoding} {\i encoding})}
}\par
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i encoding} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v CharMapCount\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:CharMapCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.FtGl.FtGl.FTFont.CharMapCount ()}
}\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v CharMapList\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:CharMapList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b FT_Encoding}> Tao.FtGl.FtGl.FTFont.CharMapList ()}
}\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Depth\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTFont.Depth (float {\i depth})}
}\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i depth} \par
}
}}
{\xe \v Descender\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Descender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Tao.FtGl.FtGl.FTFont.Descender ()}
}\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Destroy\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Destroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTFont.Destroy ()}
}\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Error\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.FtGl.FtGl.FTFont.Error ()}
}\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v FaceSize\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:FaceSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.FtGl.FtGl.FTFont.FaceSize (int {\i size}, int {\i res})}
}\par
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i size} \par
{\i res} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v FaceSize\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:FaceSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.FtGl.FtGl.FTFont.FaceSize (int {\i size})}
}\par
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i size} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v FaceSize\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:FaceSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.FtGl.FtGl.FTFont.FaceSize ()}
}\par
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v LineHeight\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:LineHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Tao.FtGl.FtGl.FTFont.LineHeight ()}
}\par
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Outset\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Outset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTFont.Outset (float {\i front}, float {\i back})}
}\par
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i front} \par
{\i back} \par
}
}}
{\xe \v Render\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTFont.Render (string {\i str})}
}\par
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i str} \par
}
}}
{\xe \v SetDisplayList\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:SetDisplayList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTFont.SetDisplayList (bool {\i use})}
}\par
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i use} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _data\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.FtGl.FtGl.FTFont._data} = null{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v _gch\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:_gch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GCHandle {\b Tao.FtGl.FtGl.FTFont._gch}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v _ptr\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FtGl.FtGl.FTFont._ptr} = IntPtr.Zero{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Pointer\:Tao::FtGl::FtGl::FTFont}
{\xe \v Tao::FtGl::FtGl::FTFont\:Pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr Tao.FtGl.FtGl.FTFont.Pointer{\f2  [get]}}
}\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTGLBitmapFont Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTGLBitmapFont}
{\xe \v Tao::FtGl::FtGl::FTGLBitmapFont}
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
Inheritance diagram for Tao.FtGl.FtGl.FTGLBitmapFont:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_g_l_bitmap_font.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLBitmapFont} (string namefont)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLBitmapFont} (byte[] data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTGLBitmapFont\:Tao::FtGl::FtGl::FTGLBitmapFont}
{\xe \v Tao::FtGl::FtGl::FTGLBitmapFont\:FTGLBitmapFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLBitmapFont.FTGLBitmapFont (string {\i namefont})}
}\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i namefont} \par
}
}}
{\xe \v FTGLBitmapFont\:Tao::FtGl::FtGl::FTGLBitmapFont}
{\xe \v Tao::FtGl::FtGl::FTGLBitmapFont\:FTGLBitmapFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLBitmapFont.FTGLBitmapFont (byte[] {\i data})}
}\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTGLExtrudeFont Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTGLExtrudeFont}
{\xe \v Tao::FtGl::FtGl::FTGLExtrudeFont}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
Inheritance diagram for Tao.FtGl.FtGl.FTGLExtrudeFont:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_g_l_extrude_font.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLExtrudeFont} (string namefont)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLExtrudeFont} (byte[] data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTGLExtrudeFont\:Tao::FtGl::FtGl::FTGLExtrudeFont}
{\xe \v Tao::FtGl::FtGl::FTGLExtrudeFont\:FTGLExtrudeFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLExtrudeFont.FTGLExtrudeFont (string {\i namefont})}
}\par
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i namefont} \par
}
}}
{\xe \v FTGLExtrudeFont\:Tao::FtGl::FtGl::FTGLExtrudeFont}
{\xe \v Tao::FtGl::FtGl::FTGLExtrudeFont\:FTGLExtrudeFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLExtrudeFont.FTGLExtrudeFont (byte[] {\i data})}
}\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTGLOutlineFont Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTGLOutlineFont}
{\xe \v Tao::FtGl::FtGl::FTGLOutlineFont}
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
Inheritance diagram for Tao.FtGl.FtGl.FTGLOutlineFont:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_g_l_outline_font.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLOutlineFont} (string namefont)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLOutlineFont} (byte[] data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTGLOutlineFont\:Tao::FtGl::FtGl::FTGLOutlineFont}
{\xe \v Tao::FtGl::FtGl::FTGLOutlineFont\:FTGLOutlineFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLOutlineFont.FTGLOutlineFont (string {\i namefont})}
}\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i namefont} \par
}
}}
{\xe \v FTGLOutlineFont\:Tao::FtGl::FtGl::FTGLOutlineFont}
{\xe \v Tao::FtGl::FtGl::FTGLOutlineFont\:FTGLOutlineFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLOutlineFont.FTGLOutlineFont (byte[] {\i data})}
}\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTGLPixmapFont Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTGLPixmapFont}
{\xe \v Tao::FtGl::FtGl::FTGLPixmapFont}
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
Inheritance diagram for Tao.FtGl.FtGl.FTGLPixmapFont:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_g_l_pixmap_font.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLPixmapFont} (string namefont)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLPixmapFont} (byte[] data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTGLPixmapFont\:Tao::FtGl::FtGl::FTGLPixmapFont}
{\xe \v Tao::FtGl::FtGl::FTGLPixmapFont\:FTGLPixmapFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLPixmapFont.FTGLPixmapFont (string {\i namefont})}
}\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i namefont} \par
}
}}
{\xe \v FTGLPixmapFont\:Tao::FtGl::FtGl::FTGLPixmapFont}
{\xe \v Tao::FtGl::FtGl::FTGLPixmapFont\:FTGLPixmapFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLPixmapFont.FTGLPixmapFont (byte[] {\i data})}
}\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTGLPolygonFont Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTGLPolygonFont}
{\xe \v Tao::FtGl::FtGl::FTGLPolygonFont}
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
Inheritance diagram for Tao.FtGl.FtGl.FTGLPolygonFont:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_g_l_polygon_font.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLPolygonFont} (string namefont)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLPolygonFont} (byte[] data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTGLPolygonFont\:Tao::FtGl::FtGl::FTGLPolygonFont}
{\xe \v Tao::FtGl::FtGl::FTGLPolygonFont\:FTGLPolygonFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLPolygonFont.FTGLPolygonFont (string {\i namefont})}
}\par
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i namefont} \par
}
}}
{\xe \v FTGLPolygonFont\:Tao::FtGl::FtGl::FTGLPolygonFont}
{\xe \v Tao::FtGl::FtGl::FTGLPolygonFont\:FTGLPolygonFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLPolygonFont.FTGLPolygonFont (byte[] {\i data})}
}\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTGLTextureFont Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTGLTextureFont}
{\xe \v Tao::FtGl::FtGl::FTGLTextureFont}
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
Inheritance diagram for Tao.FtGl.FtGl.FTGLTextureFont:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_g_l_texture_font.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLTextureFont} (string namefont)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTGLTextureFont} (byte[] data)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTGLTextureFont\:Tao::FtGl::FtGl::FTGLTextureFont}
{\xe \v Tao::FtGl::FtGl::FTGLTextureFont\:FTGLTextureFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLTextureFont.FTGLTextureFont (string {\i namefont})}
}\par
{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i namefont} \par
}
}}
{\xe \v FTGLTextureFont\:Tao::FtGl::FtGl::FTGLTextureFont}
{\xe \v Tao::FtGl::FtGl::FTGLTextureFont\:FTGLTextureFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTGLTextureFont.FTGLTextureFont (byte[] {\i data})}
}\par
{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTLayout Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTLayout}
{\xe \v Tao::FtGl::FtGl::FTLayout}
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Layout abstract class. }}\par
Inheritance diagram for Tao.FtGl.FtGl.FTLayout:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_layout.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTLayout} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Destroy} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BBox} (string str, out float x1, out float y1, out float z1, out float x2, out float y2, out float z2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetFont} ({\b FTFont} font)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTFont} {\b GetFont} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b _ptr} = IntPtr.Zero\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Layout abstract class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTLayout\:Tao::FtGl::FtGl::FTLayout}
{\xe \v Tao::FtGl::FtGl::FTLayout\:FTLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTLayout.FTLayout ()}
}\par
{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BBox\:Tao::FtGl::FtGl::FTLayout}
{\xe \v Tao::FtGl::FtGl::FTLayout\:BBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTLayout.BBox (string {\i str}, out float {\i x1}, out float {\i y1}, out float {\i z1}, out float {\i x2}, out float {\i y2}, out float {\i z2})}
}\par
{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i str} \par
{\i x1} \par
{\i y1} \par
{\i z1} \par
{\i x2} \par
{\i y2} \par
{\i z2} \par
}
}}
{\xe \v Destroy\:Tao::FtGl::FtGl::FTLayout}
{\xe \v Tao::FtGl::FtGl::FTLayout\:Destroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTLayout.Destroy ()}
}\par
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GetFont\:Tao::FtGl::FtGl::FTLayout}
{\xe \v Tao::FtGl::FtGl::FTLayout\:GetFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FTFont} Tao.FtGl.FtGl.FTLayout.GetFont ()}
}\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetFont\:Tao::FtGl::FtGl::FTLayout}
{\xe \v Tao::FtGl::FtGl::FTLayout\:SetFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTLayout.SetFont ({\b FTFont} {\i font})}
}\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i font} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _ptr\:Tao::FtGl::FtGl::FTLayout}
{\xe \v Tao::FtGl::FtGl::FTLayout\:_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FtGl.FtGl.FTLayout._ptr} = IntPtr.Zero{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FtGl.FtGl.FTSimpleLayout Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout}
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
Inheritance diagram for Tao.FtGl.FtGl.FTSimpleLayout:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tao_1_1_ft_gl_1_1_ft_gl_1_1_f_t_simple_layout.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FTSimpleLayout} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RenderMode} (string str, RenderMode mode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RenderSpace} (string str, float extraSpace)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetLineLength} (float length)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b GetLineLength} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetAlignment} (TextAlignment align)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TextAlignment {\b GetAlignment} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetLineSpacing} (float space)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b GetLineSpacing} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FTSimpleLayout\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:FTSimpleLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.FtGl.FtGl.FTSimpleLayout.FTSimpleLayout ()}
}\par
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetAlignment\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:GetAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TextAlignment Tao.FtGl.FtGl.FTSimpleLayout.GetAlignment ()}
}\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLineLength\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:GetLineLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Tao.FtGl.FtGl.FTSimpleLayout.GetLineLength ()}
}\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLineSpacing\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:GetLineSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Tao.FtGl.FtGl.FTSimpleLayout.GetLineSpacing ()}
}\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v RenderMode\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:RenderMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTSimpleLayout.RenderMode (string {\i str}, RenderMode {\i mode})}
}\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i str} \par
{\i mode} \par
}
}}
{\xe \v RenderSpace\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:RenderSpace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTSimpleLayout.RenderSpace (string {\i str}, float {\i extraSpace})}
}\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i str} \par
{\i extraSpace} \par
}
}}
{\xe \v SetAlignment\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:SetAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTSimpleLayout.SetAlignment (TextAlignment {\i align})}
}\par
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i align} \par
}
}}
{\xe \v SetLineLength\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:SetLineLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTSimpleLayout.SetLineLength (float {\i length})}
}\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i length} \par
}
}}
{\xe \v SetLineSpacing\:Tao::FtGl::FtGl::FTSimpleLayout}
{\xe \v Tao::FtGl::FtGl::FTSimpleLayout\:SetLineSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.FtGl.FtGl.FTSimpleLayout.SetLineSpacing (float {\i space})}
}\par
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i space} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FtGl/{\b FtGl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.Function Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::Function}
{\xe \v Bind::Structures::Function}
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
Inheritance diagram for Bind.Structures.Function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_structures_1_1_function.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Function} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Function} ({\b Delegate} d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TurnVoidPointersToIntPtr} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Signature} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representing the full delegate declaration without decorations. (ie "(unsafe) void delegate glXxxYyy(int a, float b, IntPtr c)". }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b Function} other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WrapParameters} (List< {\b Function} > wrappers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WrapParametersComplete} (List< {\b Function} > wrappers)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds to the wrapper list all possible wrapper permutations for every possible parameter combination. "void Delegates.f(IntPtr p, IntPtr q)" where p and q are pointers to void arrays needs the following wrappers: "void f(IntPtr p, IntPtr q)" "void f(IntPtr p, object q)" "void f(object p, IntPtr q)" "void f(object p, object q)". }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WrapVoidPointers} (List< {\b Function} > wrappers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WrapReturnType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateBody} (bool wantCLSCompliance)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TrimmedName}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b Unsafe}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the delegate must be declared as 'unsafe'. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionBody} {\b Body}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Name}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the opengl function. If no {\b Tao} compatibility is set, set TrimmedName to Name, after removing [u][bsifd][v]. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Function\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:Function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Function.Function ()}
}\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Function\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:Function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Function.Function ({\b Delegate} {\i d})}
}\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateBody\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:CreateBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.Function.CreateBody (bool {\i wantCLSCompliance})}
}\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Equals\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Function.Equals ({\b Function} {\i other})}
}\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Signature\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:Signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Function.Signature ()}
}\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToString\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Function.ToString ()}
}\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representing the full delegate declaration without decorations. (ie "(unsafe) void delegate glXxxYyy(int a, float b, IntPtr c)". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented from {\b Bind.Structures.Delegate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABIC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v TurnVoidPointersToIntPtr\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:TurnVoidPointersToIntPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.Function.TurnVoidPointersToIntPtr ()}
}\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WrapParameters\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:WrapParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.Function.WrapParameters (List< {\b Function} > {\i wrappers})}
}\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WrapParametersComplete\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:WrapParametersComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.Function.WrapParametersComplete (List< {\b Function} > {\i wrappers})}
}\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds to the wrapper list all possible wrapper permutations for every possible parameter combination. "void Delegates.f(IntPtr p, IntPtr q)" where p and q are pointers to void arrays needs the following wrappers: "void f(IntPtr p, IntPtr q)" "void f(IntPtr p, object q)" "void f(object p, IntPtr q)" "void f(object p, object q)". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i wrappers} \par
}
}}
{\xe \v WrapReturnType\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:WrapReturnType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.Function.WrapReturnType ()}
}\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WrapVoidPointers\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:WrapVoidPointers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.Function.WrapVoidPointers (List< {\b Function} > {\i wrappers})}
}\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v TrimmedName\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:TrimmedName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.Structures.Function.TrimmedName}}
}\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Body\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:Body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionBody} Bind.Structures.Function.Body{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Name\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Function.Name{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the opengl function. If no {\b Tao} compatibility is set, set TrimmedName to Name, after removing [u][bsifd][v]. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented from {\b Bind.Structures.Delegate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Unsafe\:Bind::Structures::Function}
{\xe \v Bind::Structures::Function\:Unsafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Bind.Structures.Function.Unsafe{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the delegate must be declared as 'unsafe'. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented from {\b Bind.Structures.Delegate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABIO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Function.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.FunctionBody Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody}
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionBody} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionBody} ({\b FunctionBody} fb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Indent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Unindent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
new void {\b Add} (string s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
new void {\b AddRange} (IEnumerable< string > collection)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionBody\:Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody\:FunctionBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.FunctionBody.FunctionBody ()}
}\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FunctionBody\:Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody\:FunctionBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.FunctionBody.FunctionBody ({\b FunctionBody} {\i fb})}
}\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
new void Bind.Structures.FunctionBody.Add (string {\i s})}
}\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AddRange\:Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody\:AddRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
new void Bind.Structures.FunctionBody.AddRange (IEnumerable< string > {\i collection})}
}\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Indent\:Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody\:Indent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.FunctionBody.Indent ()}
}\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToString\:Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.FunctionBody.ToString ()}
}\par
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Unindent\:Bind::Structures::FunctionBody}
{\xe \v Bind::Structures::FunctionBody\:Unindent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.FunctionBody.Unindent ()}
}\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Function.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.FunctionCollection Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::FunctionCollection}
{\xe \v Bind::Structures::FunctionCollection}
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} ({\b Function} f)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddRange} (IEnumerable< {\b Function} > functions)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddChecked} ({\b Function} f)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the function to the collection, if a function with the same name and parameters doesn't already exist. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:Bind::Structures::FunctionCollection}
{\xe \v Bind::Structures::FunctionCollection\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.FunctionCollection.Add ({\b Function} {\i f})}
}\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AddChecked\:Bind::Structures::FunctionCollection}
{\xe \v Bind::Structures::FunctionCollection\:AddChecked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.FunctionCollection.AddChecked ({\b Function} {\i f})}
}\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the function to the collection, if a function with the same name and parameters doesn't already exist. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i f} The {\b Function} to add.\par
}
}{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
unsignedFunctions.IsMatch( \par
}}\par
}
{\xe \v AddRange\:Bind::Structures::FunctionCollection}
{\xe \v Bind::Structures::FunctionCollection\:AddRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.Structures.FunctionCollection.AddRange (IEnumerable< {\b Function} > {\i functions})}
}\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Function.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.Functions Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::Functions}
{\xe \v Tao::Platform::X11::Functions}
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Functions.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.GL2.Generator Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator}
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
Inheritance diagram for Bind.GL2.Generator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_g_l2_1_1_generator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Process} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b DelegateCollection} {\b ReadDelegates} (StreamReader specFile)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b EnumCollection} {\b ReadEnums} (StreamReader specFile)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual Dictionary< string, string > {\b ReadTypeMap} (StreamReader specFile)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual Dictionary< string, string > {\b ReadCSTypeMap} (StreamReader specFile)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteBindings} ({\b DelegateCollection} delegates, {\b FunctionCollection} functions, {\b EnumCollection} enums)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b WriteDelegates} ({\b BindStreamWriter} sw, {\b DelegateCollection} delegates)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b WriteImports} ({\b BindStreamWriter} sw, {\b DelegateCollection} delegates)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteWrappers} ({\b BindStreamWriter} sw, {\b FunctionCollection} wrappers, Dictionary< string, string > CSTypes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteTypes} ({\b BindStreamWriter} sw, Dictionary< string, string > CSTypes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteEnums} ({\b BindStreamWriter} sw, {\b EnumCollection} enums)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MakeCLScompliant} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b glTypemap} = "GL2\\\\gl.tm"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b csTypemap} = "csharp.tm"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b enumSpec} = "GL2\\\\enum.spec"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b enumSpecExt} = "GL2\\\\enumext.spec"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b glSpec} = "GL2\\\\gl.spec"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b glSpecExt} = ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b importsFile} = "GLCore.cs"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b delegatesFile} = "GLDelegates.cs"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b enumsFile} = "GLEnums.cs"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b wrappersFile} = "GL.cs"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b loadAllFuncName} = "LoadAll"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Regex {\b enumToDotNet} = new Regex("_[a-z|A-Z]?", RegexOptions.Compiled)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Generator\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:Generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.GL2.Generator.Generator ()}
}\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Bind.Glu.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Bind.Glx.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Bind.Wgl.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v MakeCLScompliant\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:MakeCLScompliant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.GL2.Generator.MakeCLScompliant (){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Process\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:Process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Bind.GL2.Generator.Process (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Bind.IBind} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b Bind.Glu.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Bind.Glx.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Bind.Wgl.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ReadCSTypeMap\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:ReadCSTypeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Dictionary<string, string> Bind.GL2.Generator.ReadCSTypeMap (StreamReader {\i specFile}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadDelegates\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:ReadDelegates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b DelegateCollection} Bind.GL2.Generator.ReadDelegates (StreamReader {\i specFile}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadEnums\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:ReadEnums}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b EnumCollection} Bind.GL2.Generator.ReadEnums (StreamReader {\i specFile}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadTypeMap\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:ReadTypeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Dictionary<string, string> Bind.GL2.Generator.ReadTypeMap (StreamReader {\i specFile}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WriteBindings\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:WriteBindings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.GL2.Generator.WriteBindings ({\b DelegateCollection} {\i delegates}, {\b FunctionCollection} {\i functions}, {\b EnumCollection} {\i enums})}
}\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Bind.ISpecWriter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteDelegates\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:WriteDelegates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Bind.GL2.Generator.WriteDelegates ({\b BindStreamWriter} {\i sw}, {\b DelegateCollection} {\i delegates}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Bind.ISpecWriter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteEnums\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:WriteEnums}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.GL2.Generator.WriteEnums ({\b BindStreamWriter} {\i sw}, {\b EnumCollection} {\i enums})}
}\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Bind.ISpecWriter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteImports\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:WriteImports}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Bind.GL2.Generator.WriteImports ({\b BindStreamWriter} {\i sw}, {\b DelegateCollection} {\i delegates}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WriteTypes\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:WriteTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.GL2.Generator.WriteTypes ({\b BindStreamWriter} {\i sw}, Dictionary< string, string > {\i CSTypes})}
}\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Bind.ISpecWriter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteWrappers\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:WriteWrappers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.GL2.Generator.WriteWrappers ({\b BindStreamWriter} {\i sw}, {\b FunctionCollection} {\i wrappers}, Dictionary< string, string > {\i CSTypes})}
}\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Bind.ISpecWriter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v csTypemap\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:csTypemap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.csTypemap} = "csharp.tm"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v delegatesFile\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:delegatesFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.delegatesFile} = "GLDelegates.cs"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enumsFile\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:enumsFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.enumsFile} = "GLEnums.cs"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enumSpec\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:enumSpec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.enumSpec} = "GL2\\\\enum.spec"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enumSpecExt\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:enumSpecExt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.enumSpecExt} = "GL2\\\\enumext.spec"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enumToDotNet\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:enumToDotNet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Regex {\b Bind.GL2.Generator.enumToDotNet} = new Regex("_[a-z|A-Z]?", RegexOptions.Compiled){\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v glSpec\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:glSpec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.glSpec} = "GL2\\\\gl.spec"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v glSpecExt\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:glSpecExt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.glSpecExt} = ""{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v glTypemap\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:glTypemap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.glTypemap} = "GL2\\\\gl.tm"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v importsFile\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:importsFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.importsFile} = "GLCore.cs"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v loadAllFuncName\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:loadAllFuncName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.loadAllFuncName} = "LoadAll"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wrappersFile\:Bind::GL2::Generator}
{\xe \v Bind::GL2::Generator\:wrappersFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Bind.GL2.Generator.wrappersFile} = "GL.cs"{\f2  [static, protected]}}
}\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/GL2/{\b Generator.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Glu.Generator Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Glu::Generator}
{\xe \v Bind::Glu::Generator}
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
Inheritance diagram for Bind.Glu.Generator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_glu_1_1_generator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Process} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Generator\:Bind::Glu::Generator}
{\xe \v Bind::Glu::Generator\:Generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Glu.Generator.Generator ()}
}\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Process\:Bind::Glu::Generator}
{\xe \v Bind::Glu::Generator\:Process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Bind.Glu.Generator.Process (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Glu/{\b Generator.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Glx.Generator Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Glx::Generator}
{\xe \v Bind::Glx::Generator}
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
Inheritance diagram for Bind.Glx.Generator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_glx_1_1_generator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Process} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Generator\:Bind::Glx::Generator}
{\xe \v Bind::Glx::Generator\:Generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Glx.Generator.Generator ()}
}\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Process\:Bind::Glx::Generator}
{\xe \v Bind::Glx::Generator\:Process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Bind.Glx.Generator.Process (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Glx/{\b Generator.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Wgl.Generator Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Wgl::Generator}
{\xe \v Bind::Wgl::Generator}
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
Inheritance diagram for Bind.Wgl.Generator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_wgl_1_1_generator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generator} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Process} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b Bind.Structures.DelegateCollection} {\b ReadDelegates} (System.IO.StreamReader specFile)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Generator\:Bind::Wgl::Generator}
{\xe \v Bind::Wgl::Generator\:Generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Wgl.Generator.Generator ()}
}\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Process\:Bind::Wgl::Generator}
{\xe \v Bind::Wgl::Generator\:Process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Bind.Wgl.Generator.Process (){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ReadDelegates\:Bind::Wgl::Generator}
{\xe \v Bind::Wgl::Generator\:ReadDelegates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b Bind.Structures.DelegateCollection} Bind.Wgl.Generator.ReadDelegates (System.IO.StreamReader {\i specFile})}
}\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Wgl/{\b Generator.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.GlExtensionLoader Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader}
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GlContextInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b GetProcAddress} (string s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsExtensionSupported} (string extname)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns trueif the extension with the given name is supported in the global static context. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsExtensionSupported} (object contextGl, string extname)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the extension with the given name is supported in the given context. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b LoadExtension} (string extname)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to load the extension with the specified name into the global static context. Returns true on success. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b LoadExtension} (object contextGl, string extname)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b LoadExtension} (object contextGl, string extname, bool forceLoad)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b LoadAllExtensions} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b LoadAllExtensions} (object contextGl)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetProcAddress\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:GetProcAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.OpenGl.GlExtensionLoader.GetProcAddress (string {\i s}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i s} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v IsExtensionSupported\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:IsExtensionSupported}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.OpenGl.GlExtensionLoader.IsExtensionSupported (string {\i extname}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns trueif the extension with the given name is supported in the global static context. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i extname} The extension name.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v IsExtensionSupported\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:IsExtensionSupported}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.OpenGl.GlExtensionLoader.IsExtensionSupported (object {\i contextGl}, string {\i extname}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the extension with the given name is supported in the given context. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contextGl} The context which to query.\par
{\i extname} The extension name.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v LoadAllExtensions\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:LoadAllExtensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.OpenGl.GlExtensionLoader.LoadAllExtensions (object {\i contextGl}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contextGl} \par
}
}}
{\xe \v LoadAllExtensions\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:LoadAllExtensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.OpenGl.GlExtensionLoader.LoadAllExtensions (){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v LoadExtension\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:LoadExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.OpenGl.GlExtensionLoader.LoadExtension (string {\i extname}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempt to load the extension with the specified name into the global static context. Returns true on success. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i extname} The extension name.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v LoadExtension\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:LoadExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.OpenGl.GlExtensionLoader.LoadExtension (object {\i contextGl}, string {\i extname}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contextGl} \par
{\i extname} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v LoadExtension\:Tao::OpenGl::GlExtensionLoader}
{\xe \v Tao::OpenGl::GlExtensionLoader\:LoadExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.OpenGl.GlExtensionLoader.LoadExtension (object {\i contextGl}, string {\i extname}, bool {\i forceLoad}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i contextGl} \par
{\i extname} \par
{\i forceLoad} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b GlExtensionLoader.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Glfw.Glfw.GLFWimage Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Glfw::Glfw::GLFWimage}
{\xe \v Tao::Glfw::Glfw::GLFWimage}
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Width}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image width resolution. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Height}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image height resolution. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Format}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL pixel format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BytesPerPixel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of bytes per pixel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image pixel data. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BytesPerPixel\:Tao::Glfw::Glfw::GLFWimage}
{\xe \v Tao::Glfw::Glfw::GLFWimage\:BytesPerPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWimage.BytesPerPixel}}
}\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of bytes per pixel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Data\:Tao::Glfw::Glfw::GLFWimage}
{\xe \v Tao::Glfw::Glfw::GLFWimage\:Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] {\b Tao.Glfw.Glfw.GLFWimage.Data}}
}\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image pixel data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Format\:Tao::Glfw::Glfw::GLFWimage}
{\xe \v Tao::Glfw::Glfw::GLFWimage\:Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWimage.Format}}
}\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL pixel format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Height\:Tao::Glfw::Glfw::GLFWimage}
{\xe \v Tao::Glfw::Glfw::GLFWimage\:Height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWimage.Height}}
}\par
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image height resolution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Width\:Tao::Glfw::Glfw::GLFWimage}
{\xe \v Tao::Glfw::Glfw::GLFWimage\:Width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWimage.Width}}
}\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image width resolution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Glfw/{\b Glfw.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Glfw.Glfw.GLFWvidmode Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Glfw::Glfw::GLFWvidmode}
{\xe \v Tao::Glfw::Glfw::GLFWvidmode}
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video mode. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Width}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video width resolution. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Height}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video height resolution. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b RedBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of red bits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlueBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of blue bits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GreenBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of green bits. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BlueBits\:Tao::Glfw::Glfw::GLFWvidmode}
{\xe \v Tao::Glfw::Glfw::GLFWvidmode\:BlueBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWvidmode.BlueBits}}
}\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of blue bits. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GreenBits\:Tao::Glfw::Glfw::GLFWvidmode}
{\xe \v Tao::Glfw::Glfw::GLFWvidmode\:GreenBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWvidmode.GreenBits}}
}\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of green bits. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Height\:Tao::Glfw::Glfw::GLFWvidmode}
{\xe \v Tao::Glfw::Glfw::GLFWvidmode\:Height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWvidmode.Height}}
}\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video height resolution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v RedBits\:Tao::Glfw::Glfw::GLFWvidmode}
{\xe \v Tao::Glfw::Glfw::GLFWvidmode\:RedBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWvidmode.RedBits}}
}\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of red bits. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Width\:Tao::Glfw::Glfw::GLFWvidmode}
{\xe \v Tao::Glfw::Glfw::GLFWvidmode\:Width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Glfw.Glfw.GLFWvidmode.Width}}
}\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video width resolution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Glfw/{\b Glfw.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Glu.GLUnurbs Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Glu::GLUnurbs}
{\xe \v Tao::OpenGl::Glu::GLUnurbs}
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b Glu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Glu.GLUnurbsObj Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Glu::GLUnurbsObj}
{\xe \v Tao::OpenGl::Glu::GLUnurbsObj}
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b Glu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Glu.GLUquadric Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Glu::GLUquadric}
{\xe \v Tao::OpenGl::Glu::GLUquadric}
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b Glu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Glu.GLUquadricObj Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Glu::GLUquadricObj}
{\xe \v Tao::OpenGl::Glu::GLUquadricObj}
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b Glu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Glu.GLUtesselator Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Glu::GLUtesselator}
{\xe \v Tao::OpenGl::Glu::GLUtesselator}
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b Glu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Glu.GLUtesselatorObj Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Glu::GLUtesselatorObj}
{\xe \v Tao::OpenGl::Glu::GLUtesselatorObj}
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b Glu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.Glu.GLUtriangulatorObj Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::Glu::GLUtriangulatorObj}
{\xe \v Tao::OpenGl::Glu::GLUtriangulatorObj}
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU triangulator object. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU triangulator object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b Glu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.Glx Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx}
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLX (OpenGL XWindow Extensions) binding for .NET, implementing GLX 1.4. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXChooseVisual} (IntPtr dpy, int {\b screen}, IntPtr attriblist)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b glXCopyContext} (IntPtr dpy, IntPtr src, IntPtr dst, ulong mask)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXCreateContext} (IntPtr dpy, IntPtr vis, IntPtr shareList, bool direct)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXCreateGLXPixmap} (IntPtr dpy, IntPtr vis, IntPtr pixmap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b glXDestroyContext} (IntPtr dpy, IntPtr context)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXDestroyGLXPixmap} (IntPtr dpy, IntPtr pix)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXGetConfig} (IntPtr dpy, IntPtr vis, int attrib, IntPtr value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXGetCurrentContext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXGetCurrentDrawable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b glXIsDirect} (IntPtr dpy, IntPtr ctx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b glXMakeCurrent} (IntPtr display, IntPtr drawable, IntPtr context)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b glXQueryExtension} (IntPtr dpy, IntPtr errorBase, IntPtr eventBase)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe bool {\b glXQueryExtension} (IntPtr dpy, int *errorBase, int *eventBase)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b glXQueryVersion} (IntPtr dpy, IntPtr major, IntPtr minor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe bool {\b glXQueryVersion} (IntPtr dpy, int *major, int *minor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b glXSwapBuffers} (IntPtr display, IntPtr drawable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b glXUseXFont} (IntPtr font, int first, int count, int listBase)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b glXWaitGL} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b glXWaitX} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b glXGetClientString} (IntPtr dpy, int name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b glXQueryServerString} (IntPtr dpy, int {\b screen}, int name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b glXQueryExtensionsString} (IntPtr dpy, int {\b screen})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXGetFBConfigs} (IntPtr dpy, int {\b screen}, int *nelements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXGetFBConfigs} (IntPtr dpy, int {\b screen}, int element)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXGetFBConfigs} (IntPtr dpy, int {\b screen}, int[] nelements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXChooseFBConfig} (IntPtr dpy, int {\b screen}, int *attrib_list, int *nelements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXChooseFBConfig} (IntPtr dpy, int {\b screen}, int attrib_list, int nelements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXChooseFBConfig} (IntPtr dpy, int {\b screen}, int[] attrib_list, int[] nelements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe int {\b glXGetFBConfigAttrib} (IntPtr dpy, IntPtr config, int attribute, int *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXGetFBConfigAttrib} (IntPtr dpy, IntPtr config, int attribute, int value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXGetFBConfigAttrib} (IntPtr dpy, IntPtr config, int attribute, int[] value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXGetVisualFromFBConfig} (IntPtr dpy, IntPtr config)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe int {\b glXCreateWindow} (IntPtr dpy, IntPtr config, int win, int *attrib_list)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXCreateWindow} (IntPtr dpy, IntPtr config, int win, int[] attrib_list)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXDestroyWindow} (IntPtr dpy, int win)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe int {\b glXCreatePixmap} (IntPtr dpy, IntPtr config, IntPtr pixmap, int *attrib_list)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXCreatePixmap} (IntPtr dpy, IntPtr config, IntPtr pixmap, int[] attrib_list)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXDestroyPixmap} (IntPtr dpy, int pixmap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXCreatePbuffer} (IntPtr dpy, IntPtr config, int *attrib_list)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXCreatePbuffer} (IntPtr dpy, IntPtr config, int[] attrib_list)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXDestroyPbuffer} (IntPtr dpy, IntPtr pbuf)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXQueryDrawable} (IntPtr dpy, IntPtr draw, int attribute, uint *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b glXQueryDrawable} (IntPtr dpy, IntPtr draw, int attribute, uint[] value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXCreateNewContext} (IntPtr dpy, IntPtr config, int render_type, IntPtr share_list, bool direct)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe bool {\b glXMakeContextCurrent} (IntPtr display, IntPtr draw, IntPtr read, IntPtr ctx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXGetCurrentReadDrawable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXGetCurrentDisplay} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe int {\b glXQueryContext} (IntPtr dpy, IntPtr ctx, int attribute, int *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXQueryContext} (IntPtr dpy, IntPtr ctx, int attribute, int value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXQueryContext} (IntPtr dpy, IntPtr ctx, int attribute, int[] value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXSelectEvent} (IntPtr dpy, IntPtr draw, ulong event_mask)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXGetSelectedEvent} (IntPtr dpy, IntPtr draw, ulong *event_mask)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXGetSelectedEvent} (IntPtr dpy, IntPtr draw, ulong event_mask)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glxGetProcAddress} ([MarshalAs(UnmanagedType.LPTStr)] string procName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe int {\b glXGetContextIDEXT} (IntPtr ctx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXImportContextEXT} (IntPtr dpy, int contextID)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe void {\b glXFreeContextEXT} (IntPtr dpy, IntPtr ctx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe int {\b glXQueryContextInfoEXT} (IntPtr dpy, IntPtr ctx, int attribute, int *value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe int {\b glXQueryContextInfoEXT} (IntPtr dpy, IntPtr ctx, int attribute, int value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe IntPtr {\b glXGetCurrentDisplayEXT} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXGetProcAddressARB} ([MarshalAs(UnmanagedType.LPTStr)] string procName)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXChooseVisual} (IntPtr dpy, int {\b screen}, int attrib)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b glXChooseVisual} (IntPtr dpy, int {\b screen}, int[] attriblist)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXGetConfig} (IntPtr dpy, IntPtr vis, int attrib, int val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b glXGetConfig} (IntPtr dpy, IntPtr vis, int attrib, int[] val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe bool {\b glXQueryExtension} (IntPtr dpy, int errorBase, int eventBase)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsafe bool {\b glXQueryExtension} (IntPtr dpy, int[] errorBase, int[] eventBase)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_VERSION_1_1} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_VERSION_1_2} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_VERSION_1_3} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_VERSION_1_4} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_USE_GL} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BUFFER_SIZE} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_LEVEL} = 3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_RGBA} = 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_DOUBLEBUFFER} = 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_STEREO} = 6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_AUX_BUFFERS} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_RED_SIZE} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_GREEN_SIZE} = 9\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BLUE_SIZE} = 10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_ALPHA_SIZE} = 11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_DEPTH_SIZE} = 12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_STENCIL_SIZE} = 13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_ACCUM_RED_SIZE} = 14\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_ACCUM_GREEN_SIZE} = 15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_ACCUM_BLUE_SIZE} = 16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_ACCUM_ALPHA_SIZE} = 17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_X_VISUAL_TYPE} = 0x22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_CONFIG_CAVEAT} = 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_TYPE} = 0x23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_INDEX_VALUE} = 0x24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_RED_VALUE} = 0x25\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_GREEN_VALUE} = 0x26\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_BLUE_VALUE} = 0x27\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_ALPHA_VALUE} = 0x28\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_DRAWABLE_TYPE} = 0x8010\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_RENDER_TYPE} = 0x8011\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_X_RENDERABLE} = 0x8012\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_FBCONFIG_ID} = 0x8013\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_MAX_PBUFFER_WIDTH} = 0x8016\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_MAX_PBUFFER_HEIGHT} = 0x8017\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_MAX_PBUFFER_PIXELS} = 0x8018\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_VISUAL_ID} = 0x800B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_OPTIMAL_PBUFFER_WIDTH_SGIX} = 0x8019\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX} = 0x801A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BAD_SCREEN} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BAD_ATTRIBUTE} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_NO_EXTENSION} = 3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BAD_VISUAL} = 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BAD_CONTEXT} = 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BAD_VALUE} = 6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BAD_ENUM} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b GLX_DONT_CARE} = 0xFFFFFFFF\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_RGBA_BIT} = 0x00000001\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_COLOR_INDEX_BIT} = 0x00000002\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_WINDOW_BIT} = 0x00000001\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PIXMAP_BIT} = 0x00000002\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PBUFFER_BIT} = 0x00000004\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_NONE} = 0x8000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SLOW_CONFIG} = 0x8001\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_NON_CONFORMANT_CONFIG} = 0x800D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRUE_COLOR} = 0x8002\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_DIRECT_COLOR} = 0x8003\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PSEUDO_COLOR} = 0x8004\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_STATIC_COLOR} = 0x8005\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_GRAY_SCALE} = 0x8006\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_STATIC_GRAY} = 0x8007\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_RGB} = 0x8008\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_INDEX} = 0x8009\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PRESERVED_CONTENTS} = 0x801B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_LARGEST_PBUFFER} = 0x801C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PBUFFER_HEIGHT} = 0x8040\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PBUFFER_WIDTH} = 0x8041\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_WIDTH} = 0x801D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_HEIGHT} = 0x801E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_EVENT_MASK} = 0x801F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_RGBA_TYPE} = 0x8014\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_COLOR_INDEX_TYPE} = 0x8015\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SCREEN} = 0x800C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PBUFFER_CLOBBER_MASK} = 0x08000000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_DAMAGED} = 0x8020\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SAVED} = 0x8021\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_WINDOW} = 0x8022\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PBUFFER} = 0x8023\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_FRONT_LEFT_BUFFER_BIT} = 0x00000001\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_FRONT_RIGHT_BUFFER_BIT} = 0x00000002\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BACK_LEFT_BUFFER_BIT} = 0x00000004\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_BACK_RIGHT_BUFFER_BIT} = 0x00000008\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_AUX_BUFFERS_BIT} = 0x00000010\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_DEPTH_BUFFER_BIT} = 0x00000020\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_STENCIL_BUFFER_BIT} = 0x00000040\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_ACCUM_BUFFER_BIT} = 0x00000080\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_X_VISUAL_TYPE_EXT} = 0x22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_TYPE_EXT} = 0x23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_INDEX_VALUE_EXT} = 0x24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_RED_VALUE_EXT} = 0x25\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_GREEN_VALUE_EXT} = 0x26\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_BLUE_VALUE_EXT} = 0x27\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_ALPHA_VALUE_EXT} = 0x28\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRUE_COLOR_EXT} = 0x8002\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_DIRECT_COLOR_EXT} = 0x8003\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_PSEUDO_COLOR_EXT} = 0x8004\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_STATIC_COLOR_EXT} = 0x8005\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_GRAY_SCALE_EXT} = 0x8006\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_STATIC_GRAY_EXT} = 0x8007\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_NONE_EXT} = 0x8000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_RGB_EXT} = 0x8008\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_TRANSPARENT_INDEX_EXT} = 0x8009\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_VISUAL_CAVEAT_EXT} = 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SLOW_VISUAL_EXT} = 0x8001\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_NON_CONFORMANT_VISUAL_EXT} = 0x800D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SWAP_METHOD_OML} = 0x8060\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SWAP_EXCHANGE_OML} = 0x8061\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SWAP_COPY_OML} = 0x8062\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SWAP_UNDEFINED_OML} = 0x8063\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_VISUAL_SELECT_GROUP_SGIX} = 0x8028\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_VENDOR} = 0x1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_VERSION} = 0x2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_EXTENSIONS} = 0x3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SHARE_CONTEXT_EXT} = 0x800A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_VISUAL_ID_EXT} = 0x800B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SCREEN_EXT} = 0x800C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SAMPLE_BUFFERS_SGIS} = 100000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b GLX_SAMPLES_SGIS} = 100001\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_EXT_import_context} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_EXT_visual_info} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_EXT_visual_rating} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const bool {\b GLX_ARB_get_proc_address} = true\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLX (OpenGL XWindow Extensions) binding for .NET, implementing GLX 1.4. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds functions and definitions in libGL.so. \par
The OpenGL XWindow Extensions (GLX) library contains several groups of functions that complement the core OpenGL interface by providing integration with XWindows. \par
These utility functions make use of core OpenGL functions, so any OpenGL implementation is guaranteed to support the utility functions. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v glXChooseFBConfig\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXChooseFBConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXChooseFBConfig (IntPtr {\i dpy}, int {\i screen}, int * {\i attrib_list}, int * {\i nelements})}
}\par
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i attrib_list} \par
{\i nelements} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXChooseFBConfig\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXChooseFBConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXChooseFBConfig (IntPtr {\i dpy}, int {\i screen}, int {\i attrib_list}, int {\i nelements})}
}\par
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i attrib_list} \par
{\i nelements} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXChooseFBConfig\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXChooseFBConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXChooseFBConfig (IntPtr {\i dpy}, int {\i screen}, int[] {\i attrib_list}, int[] {\i nelements})}
}\par
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i attrib_list} \par
{\i nelements} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXChooseVisual\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXChooseVisual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXChooseVisual (IntPtr {\i dpy}, int {\i screen}, IntPtr {\i attriblist})}
}\par
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i attriblist} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXChooseVisual\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXChooseVisual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXChooseVisual (IntPtr {\i dpy}, int {\i screen}, int {\i attrib}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i attrib} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXChooseVisual\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXChooseVisual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXChooseVisual (IntPtr {\i dpy}, int {\i screen}, int[] {\i attriblist}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i attriblist} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCopyContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCopyContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Platform.X11.Glx.glXCopyContext (IntPtr {\i dpy}, IntPtr {\i src}, IntPtr {\i dst}, ulong {\i mask})}
}\par
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i src} \par
{\i dst} \par
{\i mask} \par
}
}}
{\xe \v glXCreateContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreateContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXCreateContext (IntPtr {\i dpy}, IntPtr {\i vis}, IntPtr {\i shareList}, bool {\i direct})}
}\par
{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i vis} \par
{\i shareList} \par
{\i direct} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreateGLXPixmap\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreateGLXPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXCreateGLXPixmap (IntPtr {\i dpy}, IntPtr {\i vis}, IntPtr {\i pixmap})}
}\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i vis} \par
{\i pixmap} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreateNewContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreateNewContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXCreateNewContext (IntPtr {\i dpy}, IntPtr {\i config}, int {\i render_type}, IntPtr {\i share_list}, bool {\i direct})}
}\par
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i render_type} \par
{\i share_list} \par
{\i direct} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreatePbuffer\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreatePbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXCreatePbuffer (IntPtr {\i dpy}, IntPtr {\i config}, int * {\i attrib_list})}
}\par
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i attrib_list} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreatePbuffer\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreatePbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXCreatePbuffer (IntPtr {\i dpy}, IntPtr {\i config}, int[] {\i attrib_list})}
}\par
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i attrib_list} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreatePixmap\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreatePixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe int Tao.Platform.X11.Glx.glXCreatePixmap (IntPtr {\i dpy}, IntPtr {\i config}, IntPtr {\i pixmap}, int * {\i attrib_list})}
}\par
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i pixmap} \par
{\i attrib_list} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreatePixmap\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreatePixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXCreatePixmap (IntPtr {\i dpy}, IntPtr {\i config}, IntPtr {\i pixmap}, int[] {\i attrib_list})}
}\par
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i pixmap} \par
{\i attrib_list} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreateWindow\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreateWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe int Tao.Platform.X11.Glx.glXCreateWindow (IntPtr {\i dpy}, IntPtr {\i config}, int {\i win}, int * {\i attrib_list})}
}\par
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i win} \par
{\i attrib_list} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXCreateWindow\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXCreateWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXCreateWindow (IntPtr {\i dpy}, IntPtr {\i config}, int {\i win}, int[] {\i attrib_list})}
}\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i win} \par
{\i attrib_list} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXDestroyContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXDestroyContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Platform.X11.Glx.glXDestroyContext (IntPtr {\i dpy}, IntPtr {\i context})}
}\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i context} \par
}
}}
{\xe \v glXDestroyGLXPixmap\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXDestroyGLXPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXDestroyGLXPixmap (IntPtr {\i dpy}, IntPtr {\i pix})}
}\par
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i pix} \par
}
}}
{\xe \v glXDestroyPbuffer\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXDestroyPbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXDestroyPbuffer (IntPtr {\i dpy}, IntPtr {\i pbuf})}
}\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i pbuf} \par
}
}}
{\xe \v glXDestroyPixmap\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXDestroyPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXDestroyPixmap (IntPtr {\i dpy}, int {\i pixmap})}
}\par
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i pixmap} \par
}
}}
{\xe \v glXDestroyWindow\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXDestroyWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXDestroyWindow (IntPtr {\i dpy}, int {\i win})}
}\par
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i win} \par
}
}}
{\xe \v glXFreeContextEXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXFreeContextEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXFreeContextEXT (IntPtr {\i dpy}, IntPtr {\i ctx})}
}\par
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i ctx} \par
}
}}
{\xe \v glXGetClientString\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetClientString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Tao.Platform.X11.Glx.glXGetClientString (IntPtr {\i dpy}, int {\i name})}
}\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i name} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetConfig\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXGetConfig (IntPtr {\i dpy}, IntPtr {\i vis}, int {\i attrib}, IntPtr {\i value})}
}\par
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i vis} \par
{\i attrib} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetConfig\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXGetConfig (IntPtr {\i dpy}, IntPtr {\i vis}, int {\i attrib}, int {\i val}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i vis} \par
{\i attrib} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetConfig\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXGetConfig (IntPtr {\i dpy}, IntPtr {\i vis}, int {\i attrib}, int[] {\i val}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i vis} \par
{\i attrib} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetContextIDEXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetContextIDEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe int Tao.Platform.X11.Glx.glXGetContextIDEXT (IntPtr {\i ctx})}
}\par
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ctx} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetCurrentContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetCurrentContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXGetCurrentContext ()}
}\par
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetCurrentDisplay\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetCurrentDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXGetCurrentDisplay ()}
}\par
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetCurrentDisplayEXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetCurrentDisplayEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXGetCurrentDisplayEXT ()}
}\par
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetCurrentDrawable\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetCurrentDrawable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXGetCurrentDrawable ()}
}\par
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetCurrentReadDrawable\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetCurrentReadDrawable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXGetCurrentReadDrawable ()}
}\par
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetFBConfigAttrib\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetFBConfigAttrib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe int Tao.Platform.X11.Glx.glXGetFBConfigAttrib (IntPtr {\i dpy}, IntPtr {\i config}, int {\i attribute}, int * {\i value})}
}\par
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetFBConfigAttrib\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetFBConfigAttrib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXGetFBConfigAttrib (IntPtr {\i dpy}, IntPtr {\i config}, int {\i attribute}, int {\i value})}
}\par
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetFBConfigAttrib\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetFBConfigAttrib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXGetFBConfigAttrib (IntPtr {\i dpy}, IntPtr {\i config}, int {\i attribute}, int[] {\i value})}
}\par
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetFBConfigs\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetFBConfigs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXGetFBConfigs (IntPtr {\i dpy}, int {\i screen}, int[] {\i nelements})}
}\par
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i nelements} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetFBConfigs\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetFBConfigs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXGetFBConfigs (IntPtr {\i dpy}, int {\i screen}, int * {\i nelements})}
}\par
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i nelements} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetFBConfigs\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetFBConfigs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXGetFBConfigs (IntPtr {\i dpy}, int {\i screen}, int {\i element})}
}\par
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i element} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glxGetProcAddress\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glxGetProcAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glxGetProcAddress ([MarshalAs(UnmanagedType.LPTStr)] string {\i procName})}
}\par
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i procName} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetProcAddressARB\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetProcAddressARB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr Tao.Platform.X11.Glx.glXGetProcAddressARB ([MarshalAs(UnmanagedType.LPTStr)] string {\i procName})}
}\par
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i procName} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXGetSelectedEvent\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetSelectedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXGetSelectedEvent (IntPtr {\i dpy}, IntPtr {\i draw}, ulong * {\i event_mask})}
}\par
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i draw} \par
{\i event_mask} \par
}
}}
{\xe \v glXGetSelectedEvent\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetSelectedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXGetSelectedEvent (IntPtr {\i dpy}, IntPtr {\i draw}, ulong {\i event_mask})}
}\par
{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i draw} \par
{\i event_mask} \par
}
}}
{\xe \v glXGetVisualFromFBConfig\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXGetVisualFromFBConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXGetVisualFromFBConfig (IntPtr {\i dpy}, IntPtr {\i config})}
}\par
{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i config} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXImportContextEXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXImportContextEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe IntPtr Tao.Platform.X11.Glx.glXImportContextEXT (IntPtr {\i dpy}, int {\i contextID})}
}\par
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i contextID} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXIsDirect\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXIsDirect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.Platform.X11.Glx.glXIsDirect (IntPtr {\i dpy}, IntPtr {\i ctx})}
}\par
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i ctx} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXMakeContextCurrent\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXMakeContextCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe bool Tao.Platform.X11.Glx.glXMakeContextCurrent (IntPtr {\i display}, IntPtr {\i draw}, IntPtr {\i read}, IntPtr {\i ctx})}
}\par
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i display} \par
{\i draw} \par
{\i read} \par
{\i ctx} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXMakeCurrent\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXMakeCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.Platform.X11.Glx.glXMakeCurrent (IntPtr {\i display}, IntPtr {\i drawable}, IntPtr {\i context})}
}\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i display} \par
{\i drawable} \par
{\i context} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXQueryContext (IntPtr {\i dpy}, IntPtr {\i ctx}, int {\i attribute}, int {\i value})}
}\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i ctx} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe int Tao.Platform.X11.Glx.glXQueryContext (IntPtr {\i dpy}, IntPtr {\i ctx}, int {\i attribute}, int * {\i value})}
}\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i ctx} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryContext\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Tao.Platform.X11.Glx.glXQueryContext (IntPtr {\i dpy}, IntPtr {\i ctx}, int {\i attribute}, int[] {\i value})}
}\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i ctx} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryContextInfoEXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryContextInfoEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe int Tao.Platform.X11.Glx.glXQueryContextInfoEXT (IntPtr {\i dpy}, IntPtr {\i ctx}, int {\i attribute}, int * {\i value})}
}\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i ctx} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryContextInfoEXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryContextInfoEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe int Tao.Platform.X11.Glx.glXQueryContextInfoEXT (IntPtr {\i dpy}, IntPtr {\i ctx}, int {\i attribute}, int {\i value})}
}\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i ctx} \par
{\i attribute} \par
{\i value} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryDrawable\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryDrawable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Platform.X11.Glx.glXQueryDrawable (IntPtr {\i dpy}, IntPtr {\i draw}, int {\i attribute}, uint[] {\i value})}
}\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i draw} \par
{\i attribute} \par
{\i value} \par
}
}}
{\xe \v glXQueryDrawable\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryDrawable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXQueryDrawable (IntPtr {\i dpy}, IntPtr {\i draw}, int {\i attribute}, uint * {\i value})}
}\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i draw} \par
{\i attribute} \par
{\i value} \par
}
}}
{\xe \v glXQueryExtension\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe bool Tao.Platform.X11.Glx.glXQueryExtension (IntPtr {\i dpy}, int * {\i errorBase}, int * {\i eventBase})}
}\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i errorBase} \par
{\i eventBase} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryExtension\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe bool Tao.Platform.X11.Glx.glXQueryExtension (IntPtr {\i dpy}, int[] {\i errorBase}, int[] {\i eventBase}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i errorBase} \par
{\i eventBase} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryExtension\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.Platform.X11.Glx.glXQueryExtension (IntPtr {\i dpy}, IntPtr {\i errorBase}, IntPtr {\i eventBase})}
}\par
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i errorBase} \par
{\i eventBase} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryExtension\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe bool Tao.Platform.X11.Glx.glXQueryExtension (IntPtr {\i dpy}, int {\i errorBase}, int {\i eventBase}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i errorBase} \par
{\i eventBase} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryExtensionsString\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryExtensionsString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Tao.Platform.X11.Glx.glXQueryExtensionsString (IntPtr {\i dpy}, int {\i screen})}
}\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryServerString\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryServerString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Tao.Platform.X11.Glx.glXQueryServerString (IntPtr {\i dpy}, int {\i screen}, int {\i name})}
}\par
{\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i screen} \par
{\i name} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryVersion\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe bool Tao.Platform.X11.Glx.glXQueryVersion (IntPtr {\i dpy}, int * {\i major}, int * {\i minor})}
}\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i major} \par
{\i minor} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXQueryVersion\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXQueryVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Tao.Platform.X11.Glx.glXQueryVersion (IntPtr {\i dpy}, IntPtr {\i major}, IntPtr {\i minor})}
}\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i major} \par
{\i minor} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v glXSelectEvent\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXSelectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsafe void Tao.Platform.X11.Glx.glXSelectEvent (IntPtr {\i dpy}, IntPtr {\i draw}, ulong {\i event_mask})}
}\par
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dpy} \par
{\i draw} \par
{\i event_mask} \par
}
}}
{\xe \v glXSwapBuffers\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXSwapBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Platform.X11.Glx.glXSwapBuffers (IntPtr {\i display}, IntPtr {\i drawable})}
}\par
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i display} \par
{\i drawable} \par
}
}}
{\xe \v glXUseXFont\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXUseXFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Platform.X11.Glx.glXUseXFont (IntPtr {\i font}, int {\i first}, int {\i count}, int {\i listBase})}
}\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i font} \par
{\i first} \par
{\i count} \par
{\i listBase} \par
}
}}
{\xe \v glXWaitGL\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXWaitGL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Platform.X11.Glx.glXWaitGL ()}
}\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v glXWaitX\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:glXWaitX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Tao.Platform.X11.Glx.glXWaitX ()}
}\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v GLX_ACCUM_ALPHA_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_ACCUM_ALPHA_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_ACCUM_ALPHA_SIZE} = 17}
}\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_ACCUM_BLUE_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_ACCUM_BLUE_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_ACCUM_BLUE_SIZE} = 16}
}\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_ACCUM_BUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_ACCUM_BUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_ACCUM_BUFFER_BIT} = 0x00000080}
}\par
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_ACCUM_GREEN_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_ACCUM_GREEN_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_ACCUM_GREEN_SIZE} = 15}
}\par
{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_ACCUM_RED_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_ACCUM_RED_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_ACCUM_RED_SIZE} = 14}
}\par
{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_ALPHA_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_ALPHA_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_ALPHA_SIZE} = 11}
}\par
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_ARB_get_proc_address\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_ARB_get_proc_address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_ARB_get_proc_address} = true}
}\par
{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_AUX_BUFFERS\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_AUX_BUFFERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_AUX_BUFFERS} = 7}
}\par
{\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_AUX_BUFFERS_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_AUX_BUFFERS_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_AUX_BUFFERS_BIT} = 0x00000010}
}\par
{\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BACK_LEFT_BUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BACK_LEFT_BUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BACK_LEFT_BUFFER_BIT} = 0x00000004}
}\par
{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BACK_RIGHT_BUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BACK_RIGHT_BUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BACK_RIGHT_BUFFER_BIT} = 0x00000008}
}\par
{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BAD_ATTRIBUTE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BAD_ATTRIBUTE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BAD_ATTRIBUTE} = 2}
}\par
{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BAD_CONTEXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BAD_CONTEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BAD_CONTEXT} = 5}
}\par
{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BAD_ENUM\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BAD_ENUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BAD_ENUM} = 7}
}\par
{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BAD_SCREEN\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BAD_SCREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BAD_SCREEN} = 1}
}\par
{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BAD_VALUE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BAD_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BAD_VALUE} = 6}
}\par
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BAD_VISUAL\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BAD_VISUAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BAD_VISUAL} = 4}
}\par
{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BLUE_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BLUE_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BLUE_SIZE} = 10}
}\par
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_BUFFER_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_BUFFER_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_BUFFER_SIZE} = 2}
}\par
{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_COLOR_INDEX_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_COLOR_INDEX_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_COLOR_INDEX_BIT} = 0x00000002}
}\par
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_COLOR_INDEX_TYPE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_COLOR_INDEX_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_COLOR_INDEX_TYPE} = 0x8015}
}\par
{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_CONFIG_CAVEAT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_CONFIG_CAVEAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_CONFIG_CAVEAT} = 0x20}
}\par
{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DAMAGED\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DAMAGED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_DAMAGED} = 0x8020}
}\par
{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DEPTH_BUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DEPTH_BUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_DEPTH_BUFFER_BIT} = 0x00000020}
}\par
{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DEPTH_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DEPTH_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_DEPTH_SIZE} = 12}
}\par
{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DIRECT_COLOR\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DIRECT_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_DIRECT_COLOR} = 0x8003}
}\par
{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DIRECT_COLOR_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DIRECT_COLOR_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_DIRECT_COLOR_EXT} = 0x8003}
}\par
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DONT_CARE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DONT_CARE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint {\b Tao.Platform.X11.Glx.GLX_DONT_CARE} = 0xFFFFFFFF}
}\par
{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DOUBLEBUFFER\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DOUBLEBUFFER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_DOUBLEBUFFER} = 5}
}\par
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_DRAWABLE_TYPE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_DRAWABLE_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_DRAWABLE_TYPE} = 0x8010}
}\par
{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_EVENT_MASK\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_EVENT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_EVENT_MASK} = 0x801F}
}\par
{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_EXT_import_context\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_EXT_import_context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_EXT_import_context} = true}
}\par
{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_EXT_visual_info\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_EXT_visual_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_EXT_visual_info} = true}
}\par
{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_EXT_visual_rating\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_EXT_visual_rating}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_EXT_visual_rating} = true}
}\par
{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_EXTENSIONS\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_EXTENSIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_EXTENSIONS} = 0x3}
}\par
{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_FBCONFIG_ID\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_FBCONFIG_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_FBCONFIG_ID} = 0x8013}
}\par
{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_FRONT_LEFT_BUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_FRONT_LEFT_BUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_FRONT_LEFT_BUFFER_BIT} = 0x00000001}
}\par
{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_FRONT_RIGHT_BUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_FRONT_RIGHT_BUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_FRONT_RIGHT_BUFFER_BIT} = 0x00000002}
}\par
{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_GRAY_SCALE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_GRAY_SCALE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_GRAY_SCALE} = 0x8006}
}\par
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_GRAY_SCALE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_GRAY_SCALE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_GRAY_SCALE_EXT} = 0x8006}
}\par
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_GREEN_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_GREEN_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_GREEN_SIZE} = 9}
}\par
{\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_HEIGHT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_HEIGHT} = 0x801E}
}\par
{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_LARGEST_PBUFFER\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_LARGEST_PBUFFER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_LARGEST_PBUFFER} = 0x801C}
}\par
{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_LEVEL\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_LEVEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_LEVEL} = 3}
}\par
{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_MAX_PBUFFER_HEIGHT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_MAX_PBUFFER_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_MAX_PBUFFER_HEIGHT} = 0x8017}
}\par
{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_MAX_PBUFFER_PIXELS\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_MAX_PBUFFER_PIXELS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_MAX_PBUFFER_PIXELS} = 0x8018}
}\par
{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_MAX_PBUFFER_WIDTH\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_MAX_PBUFFER_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_MAX_PBUFFER_WIDTH} = 0x8016}
}\par
{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_NO_EXTENSION\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_NO_EXTENSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_NO_EXTENSION} = 3}
}\par
{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_NON_CONFORMANT_CONFIG\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_NON_CONFORMANT_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_NON_CONFORMANT_CONFIG} = 0x800D}
}\par
{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_NON_CONFORMANT_VISUAL_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_NON_CONFORMANT_VISUAL_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_NON_CONFORMANT_VISUAL_EXT} = 0x800D}
}\par
{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_NONE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_NONE} = 0x8000}
}\par
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_NONE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_NONE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_NONE_EXT} = 0x8000}
}\par
{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX} = 0x801A}
}\par
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_OPTIMAL_PBUFFER_WIDTH_SGIX\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_OPTIMAL_PBUFFER_WIDTH_SGIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_OPTIMAL_PBUFFER_WIDTH_SGIX} = 0x8019}
}\par
{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PBUFFER\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PBUFFER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PBUFFER} = 0x8023}
}\par
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PBUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PBUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PBUFFER_BIT} = 0x00000004}
}\par
{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PBUFFER_CLOBBER_MASK\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PBUFFER_CLOBBER_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PBUFFER_CLOBBER_MASK} = 0x08000000}
}\par
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PBUFFER_HEIGHT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PBUFFER_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PBUFFER_HEIGHT} = 0x8040}
}\par
{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PBUFFER_WIDTH\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PBUFFER_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PBUFFER_WIDTH} = 0x8041}
}\par
{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PIXMAP_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PIXMAP_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PIXMAP_BIT} = 0x00000002}
}\par
{\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PRESERVED_CONTENTS\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PRESERVED_CONTENTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PRESERVED_CONTENTS} = 0x801B}
}\par
{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PSEUDO_COLOR\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PSEUDO_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PSEUDO_COLOR} = 0x8004}
}\par
{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_PSEUDO_COLOR_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_PSEUDO_COLOR_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_PSEUDO_COLOR_EXT} = 0x8004}
}\par
{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_RED_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_RED_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_RED_SIZE} = 8}
}\par
{\bkmkstart AAAAAAADOJ}
{\bkmkend AAAAAAADOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_RENDER_TYPE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_RENDER_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_RENDER_TYPE} = 0x8011}
}\par
{\bkmkstart AAAAAAADOK}
{\bkmkend AAAAAAADOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_RGBA\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_RGBA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_RGBA} = 4}
}\par
{\bkmkstart AAAAAAADOL}
{\bkmkend AAAAAAADOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_RGBA_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_RGBA_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_RGBA_BIT} = 0x00000001}
}\par
{\bkmkstart AAAAAAADOM}
{\bkmkend AAAAAAADOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_RGBA_TYPE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_RGBA_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_RGBA_TYPE} = 0x8014}
}\par
{\bkmkstart AAAAAAADON}
{\bkmkend AAAAAAADON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SAMPLE_BUFFERS_SGIS\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SAMPLE_BUFFERS_SGIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SAMPLE_BUFFERS_SGIS} = 100000}
}\par
{\bkmkstart AAAAAAADOO}
{\bkmkend AAAAAAADOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SAMPLES_SGIS\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SAMPLES_SGIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SAMPLES_SGIS} = 100001}
}\par
{\bkmkstart AAAAAAADOP}
{\bkmkend AAAAAAADOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SAVED\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SAVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SAVED} = 0x8021}
}\par
{\bkmkstart AAAAAAADOQ}
{\bkmkend AAAAAAADOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SCREEN\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SCREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SCREEN} = 0x800C}
}\par
{\bkmkstart AAAAAAADOR}
{\bkmkend AAAAAAADOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SCREEN_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SCREEN_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SCREEN_EXT} = 0x800C}
}\par
{\bkmkstart AAAAAAADOS}
{\bkmkend AAAAAAADOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SHARE_CONTEXT_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SHARE_CONTEXT_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SHARE_CONTEXT_EXT} = 0x800A}
}\par
{\bkmkstart AAAAAAADOT}
{\bkmkend AAAAAAADOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SLOW_CONFIG\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SLOW_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SLOW_CONFIG} = 0x8001}
}\par
{\bkmkstart AAAAAAADOU}
{\bkmkend AAAAAAADOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SLOW_VISUAL_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SLOW_VISUAL_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SLOW_VISUAL_EXT} = 0x8001}
}\par
{\bkmkstart AAAAAAADOV}
{\bkmkend AAAAAAADOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_STATIC_COLOR\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_STATIC_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_STATIC_COLOR} = 0x8005}
}\par
{\bkmkstart AAAAAAADOW}
{\bkmkend AAAAAAADOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_STATIC_COLOR_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_STATIC_COLOR_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_STATIC_COLOR_EXT} = 0x8005}
}\par
{\bkmkstart AAAAAAADOX}
{\bkmkend AAAAAAADOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_STATIC_GRAY\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_STATIC_GRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_STATIC_GRAY} = 0x8007}
}\par
{\bkmkstart AAAAAAADOY}
{\bkmkend AAAAAAADOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_STATIC_GRAY_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_STATIC_GRAY_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_STATIC_GRAY_EXT} = 0x8007}
}\par
{\bkmkstart AAAAAAADOZ}
{\bkmkend AAAAAAADOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_STENCIL_BUFFER_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_STENCIL_BUFFER_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_STENCIL_BUFFER_BIT} = 0x00000040}
}\par
{\bkmkstart AAAAAAADPA}
{\bkmkend AAAAAAADPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_STENCIL_SIZE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_STENCIL_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_STENCIL_SIZE} = 13}
}\par
{\bkmkstart AAAAAAADPB}
{\bkmkend AAAAAAADPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_STEREO\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_STEREO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_STEREO} = 6}
}\par
{\bkmkstart AAAAAAADPC}
{\bkmkend AAAAAAADPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SWAP_COPY_OML\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SWAP_COPY_OML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SWAP_COPY_OML} = 0x8062}
}\par
{\bkmkstart AAAAAAADPD}
{\bkmkend AAAAAAADPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SWAP_EXCHANGE_OML\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SWAP_EXCHANGE_OML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SWAP_EXCHANGE_OML} = 0x8061}
}\par
{\bkmkstart AAAAAAADPE}
{\bkmkend AAAAAAADPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SWAP_METHOD_OML\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SWAP_METHOD_OML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SWAP_METHOD_OML} = 0x8060}
}\par
{\bkmkstart AAAAAAADPF}
{\bkmkend AAAAAAADPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_SWAP_UNDEFINED_OML\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_SWAP_UNDEFINED_OML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_SWAP_UNDEFINED_OML} = 0x8063}
}\par
{\bkmkstart AAAAAAADPG}
{\bkmkend AAAAAAADPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_ALPHA_VALUE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_ALPHA_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_ALPHA_VALUE} = 0x28}
}\par
{\bkmkstart AAAAAAADPH}
{\bkmkend AAAAAAADPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_ALPHA_VALUE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_ALPHA_VALUE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_ALPHA_VALUE_EXT} = 0x28}
}\par
{\bkmkstart AAAAAAADPI}
{\bkmkend AAAAAAADPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_BLUE_VALUE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_BLUE_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_BLUE_VALUE} = 0x27}
}\par
{\bkmkstart AAAAAAADPJ}
{\bkmkend AAAAAAADPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_BLUE_VALUE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_BLUE_VALUE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_BLUE_VALUE_EXT} = 0x27}
}\par
{\bkmkstart AAAAAAADPK}
{\bkmkend AAAAAAADPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_GREEN_VALUE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_GREEN_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_GREEN_VALUE} = 0x26}
}\par
{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_GREEN_VALUE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_GREEN_VALUE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_GREEN_VALUE_EXT} = 0x26}
}\par
{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_INDEX\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_INDEX} = 0x8009}
}\par
{\bkmkstart AAAAAAADPN}
{\bkmkend AAAAAAADPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_INDEX_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_INDEX_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_INDEX_EXT} = 0x8009}
}\par
{\bkmkstart AAAAAAADPO}
{\bkmkend AAAAAAADPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_INDEX_VALUE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_INDEX_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_INDEX_VALUE} = 0x24}
}\par
{\bkmkstart AAAAAAADPP}
{\bkmkend AAAAAAADPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_INDEX_VALUE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_INDEX_VALUE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_INDEX_VALUE_EXT} = 0x24}
}\par
{\bkmkstart AAAAAAADPQ}
{\bkmkend AAAAAAADPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_RED_VALUE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_RED_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_RED_VALUE} = 0x25}
}\par
{\bkmkstart AAAAAAADPR}
{\bkmkend AAAAAAADPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_RED_VALUE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_RED_VALUE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_RED_VALUE_EXT} = 0x25}
}\par
{\bkmkstart AAAAAAADPS}
{\bkmkend AAAAAAADPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_RGB\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_RGB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_RGB} = 0x8008}
}\par
{\bkmkstart AAAAAAADPT}
{\bkmkend AAAAAAADPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_RGB_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_RGB_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_RGB_EXT} = 0x8008}
}\par
{\bkmkstart AAAAAAADPU}
{\bkmkend AAAAAAADPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_TYPE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_TYPE} = 0x23}
}\par
{\bkmkstart AAAAAAADPV}
{\bkmkend AAAAAAADPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRANSPARENT_TYPE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRANSPARENT_TYPE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRANSPARENT_TYPE_EXT} = 0x23}
}\par
{\bkmkstart AAAAAAADPW}
{\bkmkend AAAAAAADPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRUE_COLOR\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRUE_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRUE_COLOR} = 0x8002}
}\par
{\bkmkstart AAAAAAADPX}
{\bkmkend AAAAAAADPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_TRUE_COLOR_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_TRUE_COLOR_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_TRUE_COLOR_EXT} = 0x8002}
}\par
{\bkmkstart AAAAAAADPY}
{\bkmkend AAAAAAADPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_USE_GL\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_USE_GL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_USE_GL} = 1}
}\par
{\bkmkstart AAAAAAADPZ}
{\bkmkend AAAAAAADPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VENDOR\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VENDOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_VENDOR} = 0x1}
}\par
{\bkmkstart AAAAAAADQA}
{\bkmkend AAAAAAADQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VERSION\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_VERSION} = 0x2}
}\par
{\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VERSION_1_1\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VERSION_1_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_VERSION_1_1} = true}
}\par
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VERSION_1_2\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VERSION_1_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_VERSION_1_2} = true}
}\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VERSION_1_3\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VERSION_1_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_VERSION_1_3} = true}
}\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VERSION_1_4\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VERSION_1_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const bool {\b Tao.Platform.X11.Glx.GLX_VERSION_1_4} = true}
}\par
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VISUAL_CAVEAT_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VISUAL_CAVEAT_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_VISUAL_CAVEAT_EXT} = 0x20}
}\par
{\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VISUAL_ID\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VISUAL_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_VISUAL_ID} = 0x800B}
}\par
{\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VISUAL_ID_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VISUAL_ID_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_VISUAL_ID_EXT} = 0x800B}
}\par
{\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_VISUAL_SELECT_GROUP_SGIX\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_VISUAL_SELECT_GROUP_SGIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_VISUAL_SELECT_GROUP_SGIX} = 0x8028}
}\par
{\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_WIDTH\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_WIDTH} = 0x801D}
}\par
{\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_WINDOW\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_WINDOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_WINDOW} = 0x8022}
}\par
{\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_WINDOW_BIT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_WINDOW_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_WINDOW_BIT} = 0x00000001}
}\par
{\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_X_RENDERABLE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_X_RENDERABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_X_RENDERABLE} = 0x8012}
}\par
{\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_X_VISUAL_TYPE\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_X_VISUAL_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_X_VISUAL_TYPE} = 0x22}
}\par
{\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GLX_X_VISUAL_TYPE_EXT\:Tao::Platform::X11::Glx}
{\xe \v Tao::Platform::X11::Glx\:GLX_X_VISUAL_TYPE_EXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int {\b Tao.Platform.X11.Glx.GLX_X_VISUAL_TYPE_EXT} = 0x22}
}\par
{\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Glx.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT}
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b GLYPHMETRICSFLOAT}}  structure contains information about the placement and orientation of a glyph in a character cell. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gmfBlackBoxX}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the width of the smallest rectangle (the glyph's black box) that completely encloses the glyph. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gmfBlackBoxY}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the height of the smallest rectangle (the glyph's black box) that completely encloses the glyph. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b POINTFLOAT} {\b gmfptGlyphOrigin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the x and y coordinates of the upper-left corner of the smallest rectangle that completely encloses the glyph. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gmfCellIncX}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the horizontal distance from the origin of the current character cell to the origin of the next character cell. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gmfCellIncY}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the vertical distance from the origin of the current character cell to the origin of the next character cell. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b GLYPHMETRICSFLOAT}}  structure contains information about the placement and orientation of a glyph in a character cell. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values of {\b {\b GLYPHMETRICSFLOAT}}  are specified as notional units. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b POINTFLOAT}, Wgl.wglUseFontOutlinesA(IntPtr, int, int, int, float, float, int, Gdi.GLYPHMETRICSFLOAT[])\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v gmfBlackBoxX\:Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT\:gmfBlackBoxX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT.gmfBlackBoxX}}
}\par
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the width of the smallest rectangle (the glyph's black box) that completely encloses the glyph. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v gmfBlackBoxY\:Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT\:gmfBlackBoxY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT.gmfBlackBoxY}}
}\par
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the height of the smallest rectangle (the glyph's black box) that completely encloses the glyph. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v gmfCellIncX\:Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT\:gmfCellIncX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT.gmfCellIncX}}
}\par
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the horizontal distance from the origin of the current character cell to the origin of the next character cell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v gmfCellIncY\:Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT\:gmfCellIncY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT.gmfCellIncY}}
}\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the vertical distance from the origin of the current character cell to the origin of the next character cell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v gmfptGlyphOrigin\:Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::GLYPHMETRICSFLOAT\:gmfptGlyphOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b POINTFLOAT} {\b Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT.gmfptGlyphOrigin}}
}\par
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the x and y coordinates of the upper-left corner of the smallest rectangle that completely encloses the glyph. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Gdi.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.IBind Interface Reference\par \pard\plain 
{\tc\tcl2 \v Bind::IBind}
{\xe \v Bind::IBind}
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
Inheritance diagram for Bind.IBind:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_bind_1_1_i_bind.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Process} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Process\:Bind::IBind}
{\xe \v Bind::IBind\:Process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.IBind.Process ()}
}\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Bind.Glu.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Bind.Glx.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Bind.Wgl.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/{\b IBind.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.IlasmAttribute Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::IlasmAttribute}
{\xe \v Tao::Platform::Windows::IlasmAttribute}
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Injects supplied MSIL into the method's body. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IlasmAttribute} (string msil)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Injects the supplied MSIL into the tagged method's body. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Injects supplied MSIL into the method's body. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a hack as the C# compiler does not allow inline MSIL. This is extracted and the appropriate MSIL injected by the PostProcessTao utility. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v IlasmAttribute\:Tao::Platform::Windows::IlasmAttribute}
{\xe \v Tao::Platform::Windows::IlasmAttribute\:IlasmAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Platform.Windows.IlasmAttribute.IlasmAttribute (string {\i msil})}
}\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Injects the supplied MSIL into the tagged method's body. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i msil} The MSIL to inject. \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b IlasmAttribute.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.DevIl.ILinfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo}
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b Id}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/\\ }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILubyte[] {\b Data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b Width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b Height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b Depth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILubyte {\b Bpp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b SizeOfData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILenum {\b Format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILenum {\b Type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILenum {\b Origin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILubyte[] {\b Palette}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILenum {\b PalType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b PalSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILenum {\b CubeFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b NumNext}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b NumMips}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILuint {\b NumLayers}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Bpp\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Bpp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILubyte {\b Tao.DevIl.ILinfo.Bpp}}
}\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CubeFlags\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:CubeFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILenum {\b Tao.DevIl.ILinfo.CubeFlags}}
}\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Data\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILubyte [] {\b Tao.DevIl.ILinfo.Data}}
}\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Depth\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.Depth}}
}\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Format\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILenum {\b Tao.DevIl.ILinfo.Format}}
}\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Height\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.Height}}
}\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Id\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.Id}}
}\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/\\ }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v NumLayers\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:NumLayers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.NumLayers}}
}\par
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v NumMips\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:NumMips}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.NumMips}}
}\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v NumNext\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:NumNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.NumNext}}
}\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Origin\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Origin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILenum {\b Tao.DevIl.ILinfo.Origin}}
}\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Palette\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Palette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILubyte [] {\b Tao.DevIl.ILinfo.Palette}}
}\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v PalSize\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:PalSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.PalSize}}
}\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v PalType\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:PalType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILenum {\b Tao.DevIl.ILinfo.PalType}}
}\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SizeOfData\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:SizeOfData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.SizeOfData}}
}\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Type\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILenum {\b Tao.DevIl.ILinfo.Type}}
}\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Width\:Tao::DevIl::ILinfo}
{\xe \v Tao::DevIl::ILinfo\:Width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILuint {\b Tao.DevIl.ILinfo.Width}}
}\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.DevIl/{\b Ilu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.DevIl.ILpointf Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::DevIl::ILpointf}
{\xe \v Tao::DevIl::ILpointf}
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILfloat {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILfloat {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x\:Tao::DevIl::ILpointf}
{\xe \v Tao::DevIl::ILpointf\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILfloat {\b Tao.DevIl.ILpointf.x}}
}\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:Tao::DevIl::ILpointf}
{\xe \v Tao::DevIl::ILpointf\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILfloat {\b Tao.DevIl.ILpointf.y}}
}\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.DevIl/{\b Ilu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.DevIl.ILpointi Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::DevIl::ILpointi}
{\xe \v Tao::DevIl::ILpointi}
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILint {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ILint {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x\:Tao::DevIl::ILpointi}
{\xe \v Tao::DevIl::ILpointi\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILint {\b Tao.DevIl.ILpointi.x}}
}\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:Tao::DevIl::ILpointi}
{\xe \v Tao::DevIl::ILpointi\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ILint {\b Tao.DevIl.ILpointi.y}}
}\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.DevIl/{\b Ilu.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlNet.IPaddress Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlNet::IPaddress}
{\xe \v Tao::Sdl::SdlNet::IPaddress}
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IP Address and Port number. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b host}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 32-bit IPv4 address of a host, encoded in Network Byte Order. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b port}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 16-bit IPv4 port number of a socket, encoded in Network Byte Order. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IP Address and Port number. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This type contains the information used to form network connections and sockets. \par
Binds to C-function call in SDL_net.h: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct \{\par
                                Uint32 host;\par
                                Uint16 port;\par
                    \} IPaddress;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b UDPpacket}, SDLNet_TCP_Open, SDLNet_ResolveHost, SDLNet_ResolveIP\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v host\:Tao::Sdl::SdlNet::IPaddress}
{\xe \v Tao::Sdl::SdlNet::IPaddress\:host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlNet.IPaddress.host}}
}\par
{\bkmkstart AAAAAAAESQ}
{\bkmkend AAAAAAAESQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 32-bit IPv4 address of a host, encoded in Network Byte Order. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v port\:Tao::Sdl::SdlNet::IPaddress}
{\xe \v Tao::Sdl::SdlNet::IPaddress\:port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.SdlNet.IPaddress.port}}
}\par
{\bkmkstart AAAAAAAESR}
{\bkmkend AAAAAAAESR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 16-bit IPv4 port number of a socket, encoded in Network Byte Order. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlNet.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.ISpecReader Interface Reference\par \pard\plain 
{\tc\tcl2 \v Bind::ISpecReader}
{\xe \v Bind::ISpecReader}
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
Inheritance diagram for Bind.ISpecReader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_bind_1_1_i_spec_reader.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Bind.Structures.DelegateCollection} {\b ReadDelegates} (StreamReader specFile)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Bind.Structures.EnumCollection} {\b ReadEnums} (StreamReader specFile)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b ReadTypeMap} (StreamReader specFile)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b ReadCSTypeMap} (StreamReader specFile)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ReadCSTypeMap\:Bind::ISpecReader}
{\xe \v Bind::ISpecReader\:ReadCSTypeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> Bind.ISpecReader.ReadCSTypeMap (StreamReader {\i specFile})}
}\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadDelegates\:Bind::ISpecReader}
{\xe \v Bind::ISpecReader\:ReadDelegates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Bind.Structures.DelegateCollection} Bind.ISpecReader.ReadDelegates (StreamReader {\i specFile})}
}\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadEnums\:Bind::ISpecReader}
{\xe \v Bind::ISpecReader\:ReadEnums}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Bind.Structures.EnumCollection} Bind.ISpecReader.ReadEnums (StreamReader {\i specFile})}
}\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadTypeMap\:Bind::ISpecReader}
{\xe \v Bind::ISpecReader\:ReadTypeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> Bind.ISpecReader.ReadTypeMap (StreamReader {\i specFile})}
}\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/{\b ISpecReader.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.ISpecWriter Interface Reference\par \pard\plain 
{\tc\tcl2 \v Bind::ISpecWriter}
{\xe \v Bind::ISpecWriter}
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
Inheritance diagram for Bind.ISpecWriter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_bind_1_1_i_spec_writer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteBindings} ({\b DelegateCollection} delegates, {\b FunctionCollection} functions, {\b EnumCollection} enums)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteDelegates} ({\b BindStreamWriter} sw, {\b DelegateCollection} delegates)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteWrappers} ({\b BindStreamWriter} sw, {\b FunctionCollection} wrappers, Dictionary< string, string > CSTypes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteEnums} ({\b BindStreamWriter} sw, {\b EnumCollection} enums)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteTypes} ({\b BindStreamWriter} sw, Dictionary< string, string > CSTypes)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v WriteBindings\:Bind::ISpecWriter}
{\xe \v Bind::ISpecWriter\:WriteBindings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.ISpecWriter.WriteBindings ({\b DelegateCollection} {\i delegates}, {\b FunctionCollection} {\i functions}, {\b EnumCollection} {\i enums})}
}\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteDelegates\:Bind::ISpecWriter}
{\xe \v Bind::ISpecWriter\:WriteDelegates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.ISpecWriter.WriteDelegates ({\b BindStreamWriter} {\i sw}, {\b DelegateCollection} {\i delegates})}
}\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteEnums\:Bind::ISpecWriter}
{\xe \v Bind::ISpecWriter\:WriteEnums}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.ISpecWriter.WriteEnums ({\b BindStreamWriter} {\i sw}, {\b EnumCollection} {\i enums})}
}\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteTypes\:Bind::ISpecWriter}
{\xe \v Bind::ISpecWriter\:WriteTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.ISpecWriter.WriteTypes ({\b BindStreamWriter} {\i sw}, Dictionary< string, string > {\i CSTypes})}
}\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v WriteWrappers\:Bind::ISpecWriter}
{\xe \v Bind::ISpecWriter\:WriteWrappers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind.ISpecWriter.WriteWrappers ({\b BindStreamWriter} {\i sw}, {\b FunctionCollection} {\i wrappers}, Dictionary< string, string > {\i CSTypes})}
}\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Bind.GL2.Generator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/{\b ISpecWriter.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Winmm.JOYCAPS Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS}
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYCAPS} structure contains information about the joystick capabilities. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b wMid}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manufacturer identifier. Manufacturer identifiers are defined in Manufacturer and Product Identifiers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b wPid}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Product identifier. Product identifiers are defined in Manufacturer and Product Identifiers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b szPname}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Null-terminated string containing the joystick product name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wXmin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum X-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wXmax}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum X-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wYmin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum Y-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wYmax}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum Y-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wZmin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum Z-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wZmax}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum Z-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wNumButtons}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of joystick buttons. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wPeriodMin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smallest polling frequency supported when captured by the joySetCapture function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wPeriodMax}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Largest polling frequency supported when captured by joySetCapture. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wRmin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum rudder value. The rudder is a fourth axis of movement. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wRmax}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum rudder value. The rudder is a fourth axis of movement. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wUmin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum u-coordinate (fifth axis) values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wUmax}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum u-coordinate (fifth axis) values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wVmin}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum v-coordinate (sixth axis) values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wVmax}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum v-coordinate (sixth axis) values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wCaps}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick capabilities The following flags define individual capabilities that a joystick might have: }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wMaxAxes}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of axes supported by the joystick. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wNumAxes}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of axes currently in use by the joystick. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wMaxButtons}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of buttons supported by the joystick. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b szRegKey}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Null-terminated string containing the registry key for the joystick. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b szOEMVxD}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Null-terminated string identifying the joystick driver OEM. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYCAPS} structure contains information about the joystick capabilities. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Requirements}  \par
{\b Windows} NT/2000/XP: Included in {\b Windows} NT 3.1 and later. {\b Windows} 95/98/Me: Included in {\b Windows} 95 and later. Header: Declared in Mmsystem.h; include Windows.h. Unicode: Declared as Unicode and ANSI structures. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b Winmm.JOYINFO}, {\b Winmm.JOYINFOEX}, Winmm.joySetCapture\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v szOEMVxD\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:szOEMVxD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.Platform.Windows.Winmm.JOYCAPS.szOEMVxD}}
}\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Null-terminated string identifying the joystick driver OEM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v szPname\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:szPname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.Platform.Windows.Winmm.JOYCAPS.szPname}}
}\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Null-terminated string containing the joystick product name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v szRegKey\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:szRegKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String {\b Tao.Platform.Windows.Winmm.JOYCAPS.szRegKey}}
}\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Null-terminated string containing the registry key for the joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wCaps\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wCaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wCaps}}
}\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick capabilities The following flags define individual capabilities that a joystick might have: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JOYCAPS_HASZ - Joystick has z-coordinate information. JOYCAPS_HASR - Joystick has rudder (fourth axis) information. JOYCAPS_HASU - Joystick has u-coordinate (fifth axis) information. JOYCAPS_HASV - Joystick has v-coordinate (sixth axis) information. JOYCAPS_HASPOV - Joystick has point-of-view information. JOYCAPS_POV4DIR - Joystick point-of-view supports discrete values (centered, forward, backward, left, and right). JOYCAPS_POVCTS - Joystick point-of-view supports continuous degree bearings. \par
}}
{\xe \v wMaxAxes\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wMaxAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wMaxAxes}}
}\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of axes supported by the joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wMaxButtons\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wMaxButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wMaxButtons}}
}\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of buttons supported by the joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wMid\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wMid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.Platform.Windows.Winmm.JOYCAPS.wMid}}
}\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manufacturer identifier. Manufacturer identifiers are defined in Manufacturer and Product Identifiers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wNumAxes\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wNumAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wNumAxes}}
}\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of axes currently in use by the joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wNumButtons\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wNumButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wNumButtons}}
}\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of joystick buttons. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wPeriodMax\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wPeriodMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wPeriodMax}}
}\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Largest polling frequency supported when captured by joySetCapture. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wPeriodMin\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wPeriodMin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wPeriodMin}}
}\par
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smallest polling frequency supported when captured by the joySetCapture function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wPid\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort {\b Tao.Platform.Windows.Winmm.JOYCAPS.wPid}}
}\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Product identifier. Product identifiers are defined in Manufacturer and Product Identifiers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wRmax\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wRmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wRmax}}
}\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum rudder value. The rudder is a fourth axis of movement. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wRmin\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wRmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wRmin}}
}\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum rudder value. The rudder is a fourth axis of movement. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wUmax\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wUmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wUmax}}
}\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum u-coordinate (fifth axis) values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wUmin\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wUmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wUmin}}
}\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum u-coordinate (fifth axis) values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wVmax\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wVmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wVmax}}
}\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum v-coordinate (sixth axis) values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wVmin\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wVmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wVmin}}
}\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum v-coordinate (sixth axis) values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wXmax\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wXmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wXmax}}
}\par
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum X-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wXmin\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wXmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wXmin}}
}\par
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum X-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wYmax\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wYmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wYmax}}
}\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum Y-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wYmin\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wYmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wYmin}}
}\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum Y-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wZmax\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wZmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wZmax}}
}\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum Z-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wZmin\:Tao::Platform::Windows::Winmm::JOYCAPS}
{\xe \v Tao::Platform::Windows::Winmm::JOYCAPS\:wZmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYCAPS.wZmin}}
}\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum Z-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Winmm.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Winmm.JOYINFO Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Winmm::JOYINFO}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFO}
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFO} structure contains information about the joystick position and button state. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wXpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current X-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wYpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Y-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wZpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Z-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b wButtons}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current state of joystick buttons. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFO} structure contains information about the joystick position and button state. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Requirements}  \par
{\b Windows} NT/2000/XP: Included in {\b Windows} NT 3.1 and later. {\b Windows} 95/98/Me: Included in {\b Windows} 95 and later. Header: Declared in Mmsystem.h; include Windows.h. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v wButtons\:Tao::Platform::Windows::Winmm::JOYINFO}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFO\:wButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFO.wButtons}}
}\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current state of joystick buttons. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
According to one or more of the following values:\par
JOY_BUTTON1 - First joystick button is pressed. JOY_BUTTON2 - Second joystick button is pressed. JOY_BUTTON3 - Third joystick button is pressed. JOY_BUTTON4 - Fourth joystick button is pressed. \par
}}
{\xe \v wXpos\:Tao::Platform::Windows::Winmm::JOYINFO}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFO\:wXpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFO.wXpos}}
}\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current X-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wYpos\:Tao::Platform::Windows::Winmm::JOYINFO}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFO\:wYpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFO.wYpos}}
}\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Y-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wZpos\:Tao::Platform::Windows::Winmm::JOYINFO}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFO\:wZpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFO.wZpos}}
}\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Z-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Winmm.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Winmm.JOYINFOEX Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX}
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFOEX} structure contains extended information about the joystick position, point-of-view position, and button state. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size, in bytes, of this structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwFlags}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flags indicating the valid information returned in this structure. Members that do not contain valid information are set to zero. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwXpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current X-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwYpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Y-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwZpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Z-coordinate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwRpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current position of the rudder or fourth joystick axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwUpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current fifth axis position. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwVpos}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current sixth axis position. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwButtons}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current state of the 32 joystick buttons. The value of this member can be set to any combination of JOY_BUTTONn flags, where n is a value in the range of 1 through 32 corresponding to the button that is pressed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwButtonNumber}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current button number that is pressed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwPOV}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current position of the point-of-view control. Values for this member are in the range 0 through 35,900. These values represent the angle, in degrees, of each view multiplied by 100. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwReserved1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved; do not use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwReserved2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved; do not use. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFOEX} structure contains extended information about the joystick position, point-of-view position, and button state. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The value of the dwSize member is also used to identify the version number for the structure when it's passed to the joyGetPosEx function. \par
Most devices with a point-of-view control have only five positions. When the JOY_RETURNPOV flag is set, these positions are reported by using the following constants: \par
JOY_POVBACKWARD - Point-of-view hat is pressed backward. The value 18,000 represents an orientation of 180.00 degrees (to the rear). JOY_POVCENTERED - Point-of-view hat is in the neutral position. The value -1 means the point-of-view hat has no angle to report. JOY_POVFORWARD - Point-of-view hat is pressed forward. The value 0 represents an orientation of 0.00 degrees (straight ahead). JOY_POVLEFT - Point-of-view hat is being pressed to the left. The value 27,000 represents an orientation of 270.00 degrees (90.00 degrees to the left). JOY_POVRIGHT - Point-of-view hat is pressed to the right. The value 9,000 represents an orientation of 90.00 degrees (to the right). \par
The default joystick driver currently supports these five discrete directions. If an application can accept only the defined point-of-view values, it must use the JOY_RETURNPOV flag. If an application can accept other degree readings, it should use the JOY_RETURNPOVCTS flag to obtain continuous data if it is available. The JOY_RETURNPOVCTS flag also supports the JOY_POV constants used with the JOY_RETURNPOV flag. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid joyGetPosEx\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwButtonNumber\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwButtonNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwButtonNumber}}
}\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current button number that is pressed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwButtons\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwButtons}}
}\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current state of the 32 joystick buttons. The value of this member can be set to any combination of JOY_BUTTONn flags, where n is a value in the range of 1 through 32 corresponding to the button that is pressed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwFlags\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwFlags}}
}\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flags indicating the valid information returned in this structure. Members that do not contain valid information are set to zero. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JOY_RETURNALL - Equivalent to setting all of the JOY_RETURN bits except JOY_RETURNRAWDATA. JOY_RETURNBUTTONS - The dwButtons member contains valid information about the state of each joystick button. JOY_RETURNCENTERED - Centers the joystick neutral position to the middle value of each axis of movement. JOY_RETURNPOV - The dwPOV member contains valid information about the point-of-view control, expressed in discrete units. JOY_RETURNPOVCTS - The dwPOV member contains valid information about the point-of-view control expressed in continuous, one-hundredth degree units. JOY_RETURNR - The dwRpos member contains valid rudder pedal data. This information represents another (fourth) axis. JOY_RETURNRAWDATA - Data stored in this structure is uncalibrated joystick readings. JOY_RETURNU - The dwUpos member contains valid data for a fifth axis of the joystick, if such an axis is available, or returns zero otherwise. JOY_RETURNV - The dwVpos member contains valid data for a sixth axis of the joystick, if such an axis is available, or returns zero otherwise. JOY_RETURNX - The dwXpos member contains valid data for the x-coordinate of the joystick. JOY_RETURNY - The dwYpos member contains valid data for the y-coordinate of the joystick. JOY_RETURNZ - The dwZpos member contains valid data for the z-coordinate of the joystick. JOY_USEDEADZONE - Expands the range for the neutral position of the joystick and calls this range the dead zone. The joystick driver returns a constant value for all positions in the dead zone. \par
The following flags provide data to calibrate a joystick and are intended for custom calibration applications. \par
JOY_CAL_READ3 - Read the x-, y-, and z-coordinates and store the raw values in dwXpos, dwYpos, and dwZpos. JOY_CAL_READ4 - Read the rudder information and the x-, y-, and z-coordinates and store the raw values in dwXpos, dwYpos, dwZpos, and dwRpos. JOY_CAL_READ5 - Read the rudder information and the x-, y-, z-, and u-coordinates and store the raw values in dwXpos, dwYpos, dwZpos, dwRpos, and dwUpos. JOY_CAL_READ6 - Read the raw v-axis data if a joystick mini driver is present that will provide the data. Returns zero otherwise. JOY_CAL_READALWAYS - Read the joystick port even if the driver does not detect a device. JOY_CAL_READRONLY - Read the rudder information if a joystick mini-driver is present that will provide the data and store the raw value in dwRpos. Return zero otherwise. JOY_CAL_READXONLY - Read the x-coordinate and store the raw (uncalibrated) value in dwXpos. JOY_CAL_READXYONLY - Reads the x- and y-coordinates and place the raw values in dwXpos and dwYpos. JOY_CAL_READYONLY - Reads the y-coordinate and store the raw value in dwYpos. JOY_CAL_READZONLY - Read the z-coordinate and store the raw value in dwZpos. JOY_CAL_READUONLY - Read the u-coordinate if a joystick mini-driver is present that will provide the data and store the raw value in dwUpos. Return zero otherwise. JOY_CAL_READVONLY - Read the v-coordinate if a joystick mini-driver is present that will provide the data and store the raw value in dwVpos. Return zero otherwise. \par
}}
{\xe \v dwPOV\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwPOV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwPOV}}
}\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current position of the point-of-view control. Values for this member are in the range 0 through 35,900. These values represent the angle, in degrees, of each view multiplied by 100. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwReserved1\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwReserved1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwReserved1}}
}\par
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved; do not use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwReserved2\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwReserved2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwReserved2}}
}\par
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved; do not use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwRpos\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwRpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwRpos}}
}\par
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current position of the rudder or fourth joystick axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwSize\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwSize}}
}\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size, in bytes, of this structure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwUpos\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwUpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwUpos}}
}\par
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current fifth axis position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwVpos\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwVpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwVpos}}
}\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current sixth axis position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwXpos\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwXpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwXpos}}
}\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current X-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwYpos\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwYpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwYpos}}
}\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Y-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwZpos\:Tao::Platform::Windows::Winmm::JOYINFOEX}
{\xe \v Tao::Platform::Windows::Winmm::JOYINFOEX\:dwZpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Winmm.JOYINFOEX.dwZpos}}
}\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Z-coordinate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Winmm.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b nSize}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b nVersion}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dwFlags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b iPixelType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cColorBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cRedBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cRedShift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cGreenBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cGreenShift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cBlueBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cBlueShift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAlphaBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAlphaShift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAccumBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAccumRedBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAccumGreenBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAccumBlueBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAccumAlphaBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cDepthBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cStencilBits}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b cAuxBuffers}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b iLayerPlane}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b bReserved}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b crTransparent}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bReserved\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:bReserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.bReserved}}
}\par
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumAlphaBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAccumAlphaBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAccumAlphaBits}}
}\par
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAccumBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAccumBits}}
}\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumBlueBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAccumBlueBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAccumBlueBits}}
}\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumGreenBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAccumGreenBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAccumGreenBits}}
}\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumRedBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAccumRedBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAccumRedBits}}
}\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAlphaBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAlphaBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAlphaBits}}
}\par
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAlphaShift\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAlphaShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAlphaShift}}
}\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAuxBuffers\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cAuxBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cAuxBuffers}}
}\par
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cBlueBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cBlueBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cBlueBits}}
}\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cBlueShift\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cBlueShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cBlueShift}}
}\par
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cColorBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cColorBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cColorBits}}
}\par
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cDepthBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cDepthBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cDepthBits}}
}\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cGreenBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cGreenBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cGreenBits}}
}\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cGreenShift\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cGreenShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cGreenShift}}
}\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cRedBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cRedBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cRedBits}}
}\par
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cRedShift\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cRedShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cRedShift}}
}\par
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v crTransparent\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:crTransparent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.crTransparent}}
}\par
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cStencilBits\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:cStencilBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.cStencilBits}}
}\par
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwFlags\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:dwFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.dwFlags}}
}\par
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v iLayerPlane\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:iLayerPlane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.iLayerPlane}}
}\par
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v iPixelType\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:iPixelType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.iPixelType}}
}\par
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nSize\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:nSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.nSize}}
}\par
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nVersion\:Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::LAYERPLANEDESCRIPTOR\:nVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR.nVersion}}
}\par
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Gdi.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.LibraryRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::LibraryRec_}
{\xe \v Tao::FreeType::LibraryRec_}
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Lua.Lua.lua_Debug Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug}
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to carry different pieces of information about an active function. lua_getstack fills only the private part of this structure, for later use. To fill the other fields of {\b lua_Debug} with useful information, call lua_getinfo. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a reasonable name for the given function. Because functions in {\b Lua} are first-class values, they do not have a fixed name: some functions may be the value of multiple global variables, while others may be stored only in a table field. The lua_getinfo function checks how the function was called to find a suitable name. If it cannot find a name, then name is set to NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b namewhat}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
explains the name field. The value of namewhat can be "global", "local", "method", "field", "upvalue", or "" (the empty string), according to how the function was called. ({\b Lua} uses the empty string when no other option seems to apply.) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b what}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the string "Lua" if the function is a {\b Lua} function, "C" if it is a C function, "main" if it is the main part of a chunk, and "tail" if it was a function that did a tail call. In the latter case, {\b Lua} has no other information about the function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b source}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the function was defined in a string, then source is that string. If the function was defined in a file, then source starts with a '@' followed by the file name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b currentline}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the current line where the given function is executing. When no line information is available, currentline is set to -1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nups}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the number of upvalues of the function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linedefined}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the line number where the definition of the function starts. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b short_src}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a "printable" version of source, to be used in error messages. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b i_ci}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to carry different pieces of information about an active function. lua_getstack fills only the private part of this structure, for later use. To fill the other fields of {\b lua_Debug} with useful information, call lua_getinfo. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v currentline\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:currentline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Lua.Lua.lua_Debug.currentline}}
}\par
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the current line where the given function is executing. When no line information is available, currentline is set to -1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Event\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:Event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Lua.Lua.lua_Debug.Event}}
}\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v i_ci\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:i_ci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Lua.Lua.lua_Debug.i_ci}}
}\par
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v linedefined\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:linedefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Lua.Lua.lua_Debug.linedefined}}
}\par
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the line number where the definition of the function starts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.lua_Debug.name}}
}\par
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a reasonable name for the given function. Because functions in {\b Lua} are first-class values, they do not have a fixed name: some functions may be the value of multiple global variables, while others may be stored only in a table field. The lua_getinfo function checks how the function was called to find a suitable name. If it cannot find a name, then name is set to NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v namewhat\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:namewhat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.lua_Debug.namewhat}}
}\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
explains the name field. The value of namewhat can be "global", "local", "method", "field", "upvalue", or "" (the empty string), according to how the function was called. ({\b Lua} uses the empty string when no other option seems to apply.) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nups\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:nups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Lua.Lua.lua_Debug.nups}}
}\par
{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the number of upvalues of the function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v short_src\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:short_src}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.lua_Debug.short_src}}
}\par
{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a "printable" version of source, to be used in error messages. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v source\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.lua_Debug.source}}
}\par
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the function was defined in a string, then source is that string. If the function was defined in a file, then source starts with a '@' followed by the file name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v what\:Tao::Lua::Lua::lua_Debug}
{\xe \v Tao::Lua::Lua::lua_Debug\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.lua_Debug.what}}
}\par
{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the string "Lua" if the function is a {\b Lua} function, "C" if it is a C function, "main" if it is the main part of a chunk, and "tail" if it was a function that did a tail call. In the latter case, {\b Lua} has no other information about the function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Lua/{\b Lua.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Lua.Lua.luaL_Buffer Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Lua::Lua::luaL_Buffer}
{\xe \v Tao::Lua::Lua::luaL_Buffer}
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for a string buffer. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b p}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lvl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
lua_State {\b L}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b buffer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for a string buffer. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A string buffer allows C code to build {\b Lua} strings piecemeal. Its pattern of use is as follows: First you declare a variable b of type {\b luaL_Buffer}. Then you initialize it with a call luaL_buffinit(L, &b). Then you add string pieces to the buffer calling any of the luaL_add* functions. You finish by calling luaL_pushresult(&b). This call leaves the final string on the top of the stack. During its normal operation, a string buffer uses a variable number of stack slots. So, while using a buffer, you cannot assume that you know where the top of the stack is. You can use the stack between successive calls to buffer operations as long as that use is balanced; that is, when you call a buffer operation, the stack is at the same level it was immediately after the previous buffer operation. (The only exception to this rule is luaL_addvalue.) After calling luaL_pushresult the stack is back to its level when the buffer was initialized, plus the final string on its top. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buffer\:Tao::Lua::Lua::luaL_Buffer}
{\xe \v Tao::Lua::Lua::luaL_Buffer\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.luaL_Buffer.buffer}}
}\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v L\:Tao::Lua::Lua::luaL_Buffer}
{\xe \v Tao::Lua::Lua::luaL_Buffer\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
lua_State {\b Tao.Lua.Lua.luaL_Buffer.L}}
}\par
{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v lvl\:Tao::Lua::Lua::luaL_Buffer}
{\xe \v Tao::Lua::Lua::luaL_Buffer\:lvl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Lua.Lua.luaL_Buffer.lvl}}
}\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v p\:Tao::Lua::Lua::luaL_Buffer}
{\xe \v Tao::Lua::Lua::luaL_Buffer\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.luaL_Buffer.p}}
}\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Lua/{\b Lua.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Lua.Lua.luaL_Reg Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Lua::Lua::luaL_Reg}
{\xe \v Tao::Lua::Lua::luaL_Reg}
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for arrays of functions to be registered by luaL_register. name is the function name and func is a pointer to the function. Any array of {\b luaL_Reg} must end with an sentinel entry in which both name and func are NULL. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Lua.lua_CFunction {\b func}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for arrays of functions to be registered by luaL_register. name is the function name and func is a pointer to the function. Any array of {\b luaL_Reg} must end with an sentinel entry in which both name and func are NULL. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v func\:Tao::Lua::Lua::luaL_Reg}
{\xe \v Tao::Lua::Lua::luaL_Reg\:func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Lua.lua_CFunction {\b Tao.Lua.Lua.luaL_Reg.func}}
}\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:Tao::Lua::Lua::luaL_Reg}
{\xe \v Tao::Lua::Lua::luaL_Reg\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Lua.Lua.luaL_Reg.name}}
}\par
{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Lua/{\b Lua.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.MemoryRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::MemoryRec_}
{\xe \v Tao::FreeType::MemoryRec_}
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} 2 Binding for .NET. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b user}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b alloc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b free}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b realloc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} 2 Binding for .NET. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds functions and definitions in freetype6.dll (Windows) /usr/lib/libfreetype.so.6 (Linux - specifically Fedora Core freetype install location) /Library/Frameworks/Mono.framework/Libraries/libfreetype.6.dylib (MacOSX) \par
The {\b FreeType} library includes the base data types and function calls to {\b FreeType} 2 to allow access to TrueType and OpenType fonts across platforms. \par
This is not a rendering utility and will not render fonts to the screen. It is an interface to the various font formats, and can provide either outline or bitmapped versions of font glyphs. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v alloc\:Tao::FreeType::MemoryRec_}
{\xe \v Tao::FreeType::MemoryRec_\:alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.MemoryRec_.alloc}}
}\par
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v free\:Tao::FreeType::MemoryRec_}
{\xe \v Tao::FreeType::MemoryRec_\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.MemoryRec_.free}}
}\par
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v realloc\:Tao::FreeType::MemoryRec_}
{\xe \v Tao::FreeType::MemoryRec_\:realloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.MemoryRec_.realloc}}
}\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v user\:Tao::FreeType::MemoryRec_}
{\xe \v Tao::FreeType::MemoryRec_\:user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.FreeType.MemoryRec_.user}}
}\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Kernel.MEMORYSTATUS Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b MEMORYSTATUS}}  structure contains information about the current state of both physical and virtual memory. \par
The GlobalMemoryStatus function stores information in a {\b {\b MEMORYSTATUS}}  structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Length}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the {\b {\b MEMORYSTATUS}}  data structure, in bytes. You do not need to set this member before calling the GlobalMemoryStatus function; the function sets it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b MemoryLoad}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Approximate percentage of total physical memory that is in use. \par
{\b {\b Windows} NT:}  Percentage of approximately the last 1000 pages of physical memory that is in use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalPhys}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total size of physical memory, in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b AvailPhys}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of physical memory available, in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalPageFile}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the committed memory limit, in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b AvailPageFile}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of available memory to commit, in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TotalVirtual}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total size of the user mode portion of the virtual address space of the calling process, in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b AvailVirtual}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of unreserved and uncommitted memory in the user mode portion of the virtual address space of the calling process, in bytes. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b MEMORYSTATUS}}  structure contains information about the current state of both physical and virtual memory. \par
The GlobalMemoryStatus function stores information in a {\b {\b MEMORYSTATUS}}  structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b {\b MEMORYSTATUS}}  reflects the state of memory at the time of the call. It reflects the size of the paging file at that time. The operating system can enlarge the paging file up to the maximum size set by the administrator. \par
On computers with more than 4 GB of memory, the {\b {\b MEMORYSTATUS}}  structure can return incorrect information. {\b Windows} reports a value of -1 to indicate an overflow, while {\b Windows} NT reports a value that is the real amount of memory, modulo 4 GB. If your application is at risk for this behavior, use the {\b GlobalMemoryStatusEx}  function instead of the GlobalMemoryStatus function. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid GlobalMemoryStatus\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v AvailPageFile\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:AvailPageFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.AvailPageFile}}
}\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of available memory to commit, in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v AvailPhys\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:AvailPhys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.AvailPhys}}
}\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of physical memory available, in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v AvailVirtual\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:AvailVirtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.AvailVirtual}}
}\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of unreserved and uncommitted memory in the user mode portion of the virtual address space of the calling process, in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Length\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:Length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.Length}}
}\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the {\b {\b MEMORYSTATUS}}  data structure, in bytes. You do not need to set this member before calling the GlobalMemoryStatus function; the function sets it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MemoryLoad\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:MemoryLoad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.MemoryLoad}}
}\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Approximate percentage of total physical memory that is in use. \par
{\b {\b Windows} NT:}  Percentage of approximately the last 1000 pages of physical memory that is in use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TotalPageFile\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:TotalPageFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.TotalPageFile}}
}\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the committed memory limit, in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TotalPhys\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:TotalPhys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.TotalPhys}}
}\par
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total size of physical memory, in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TotalVirtual\:Tao::Platform::Windows::Kernel::MEMORYSTATUS}
{\xe \v Tao::Platform::Windows::Kernel::MEMORYSTATUS\:TotalVirtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS.TotalVirtual}}
}\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total size of the user mode portion of the virtual address space of the calling process, in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Kernel.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Mix_Chunk Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Mix_Chunk}
{\xe \v Tao::Sdl::Mix_Chunk}
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b allocated}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a boolean indicating whether to free abuf when the chunk is freed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b abuf}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the sample data, which is in the output format and sample rate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b alen}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of abuf in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b volume}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 = silent, 128 = max volume. This takes effect when mixing. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v abuf\:Tao::Sdl::Mix_Chunk}
{\xe \v Tao::Sdl::Mix_Chunk\:abuf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.Mix_Chunk.abuf}}
}\par
{\bkmkstart AAAAAAAESM}
{\bkmkend AAAAAAAESM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the sample data, which is in the output format and sample rate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v alen\:Tao::Sdl::Mix_Chunk}
{\xe \v Tao::Sdl::Mix_Chunk\:alen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Mix_Chunk.alen}}
}\par
{\bkmkstart AAAAAAAESN}
{\bkmkend AAAAAAAESN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of abuf in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v allocated\:Tao::Sdl::Mix_Chunk}
{\xe \v Tao::Sdl::Mix_Chunk\:allocated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Mix_Chunk.allocated}}
}\par
{\bkmkstart AAAAAAAESO}
{\bkmkend AAAAAAAESO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a boolean indicating whether to free abuf when the chunk is freed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 if the memory was not allocated and thus not owned by this chunk. 1 if the memory was allocated and is thus owned by this chunk. \par
}}
{\xe \v volume\:Tao::Sdl::Mix_Chunk}
{\xe \v Tao::Sdl::Mix_Chunk\:volume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Mix_Chunk.volume}}
}\par
{\bkmkstart AAAAAAAESP}
{\bkmkend AAAAAAAESP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 = silent, 128 = max volume. This takes effect when mixing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlMixer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.ModuleRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::ModuleRec_}
{\xe \v Tao::FreeType::ModuleRec_}
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.MotifWmHints Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::MotifWmHints}
{\xe \v Tao::Platform::X11::MotifWmHints}
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b functions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b decorations}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b input_mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b status}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::Platform::X11::MotifWmHints}
{\xe \v Tao::Platform::X11::MotifWmHints\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.Platform.X11.MotifWmHints.ToString ()}
}\par
{\bkmkstart AAAAAAAEIW}
{\bkmkend AAAAAAAEIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v decorations\:Tao::Platform::X11::MotifWmHints}
{\xe \v Tao::Platform::X11::MotifWmHints\:decorations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.MotifWmHints.decorations}}
}\par
{\bkmkstart AAAAAAAEIX}
{\bkmkend AAAAAAAEIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v flags\:Tao::Platform::X11::MotifWmHints}
{\xe \v Tao::Platform::X11::MotifWmHints\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.MotifWmHints.flags}}
}\par
{\bkmkstart AAAAAAAEIY}
{\bkmkend AAAAAAAEIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v functions\:Tao::Platform::X11::MotifWmHints}
{\xe \v Tao::Platform::X11::MotifWmHints\:functions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.MotifWmHints.functions}}
}\par
{\bkmkstart AAAAAAAEIZ}
{\bkmkend AAAAAAAEIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v input_mode\:Tao::Platform::X11::MotifWmHints}
{\xe \v Tao::Platform::X11::MotifWmHints\:input_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.MotifWmHints.input_mode}}
}\par
{\bkmkstart AAAAAAAEJA}
{\bkmkend AAAAAAAEJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v status\:Tao::Platform::X11::MotifWmHints}
{\xe \v Tao::Platform::X11::MotifWmHints\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.MotifWmHints.status}}
}\par
{\bkmkstart AAAAAAAEJB}
{\bkmkend AAAAAAAEJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.OpenGl.OpenGLExtensionImport Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::OpenGl::OpenGLExtensionImport}
{\xe \v Tao::OpenGl::OpenGLExtensionImport}
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenGLExtensionImport} (string {\b ExtensionName}, string {\b EntryPoint})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ExtensionName}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b EntryPoint}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OpenGLExtensionImport\:Tao::OpenGl::OpenGLExtensionImport}
{\xe \v Tao::OpenGl::OpenGLExtensionImport\:OpenGLExtensionImport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.OpenGl.OpenGLExtensionImport.OpenGLExtensionImport (string {\i ExtensionName}, string {\i EntryPoint})}
}\par
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ExtensionName} \par
{\i EntryPoint} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v EntryPoint\:Tao::OpenGl::OpenGLExtensionImport}
{\xe \v Tao::OpenGl::OpenGLExtensionImport\:EntryPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.OpenGl.OpenGLExtensionImport.EntryPoint}}
}\par
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ExtensionName\:Tao::OpenGl::OpenGLExtensionImport}
{\xe \v Tao::OpenGl::OpenGLExtensionImport\:ExtensionName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.OpenGl.OpenGLExtensionImport.ExtensionName}}
}\par
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.OpenGl/{\b GlExtensionLoader.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.Parameter Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter}
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a single parameter of an opengl function. }}\par
Inheritance diagram for Bind.Structures.Parameter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_structures_1_1_parameter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FlowDirection} \{ {\b Undefined} =  0, 
{\b In}, 
{\b Out}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumarates the possible flows of a parameter (ie. is this parameter used as input or as output?). \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Parameter} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new {\b Parameter} without type and name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Parameter} ({\b Parameter} p)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new parameter from the parameters passed (deep copy). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToString} (bool override_unsafe_setting)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Translate} (string category)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FlowDirection} {\b Flow}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the flow of the parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NeedsPin}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Unchecked}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b CurrentType}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of the parameter. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a single parameter of an opengl function. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v FlowDirection\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:FlowDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Bind::Structures::Parameter::FlowDirection}}
}\par
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumarates the possible flows of a parameter (ie. is this parameter used as input or as output?). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Undefined\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Undefined}
{\b {\i Undefined{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
}}  \par
{\xe \v In\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:In}
{\b {\i In{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
}}  \par
{\xe \v Out\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Out}
{\b {\i Out{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
}}  \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Parameter\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Parameter.Parameter ()}
}\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new {\b Parameter} without type and name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Parameter\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Parameter.Parameter ({\b Parameter} {\i p})}
}\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new parameter from the parameters passed (deep copy). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i p} The parameter to copy from.\par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Parameter.ToString ()}
}\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.Structures.Type} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Parameter.ToString (bool {\i override_unsafe_setting})}
}\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Translate\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Bind.Structures.Parameter.Translate (string {\i category}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Bind.Structures.Type} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v CurrentType\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:CurrentType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Parameter.CurrentType{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of the parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented from {\b Bind.Structures.Type} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Flow\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FlowDirection} Bind.Structures.Parameter.Flow{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the flow of the parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Name\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Parameter.Name{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v NeedsPin\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:NeedsPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Parameter.NeedsPin{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Unchecked\:Bind::Structures::Parameter}
{\xe \v Bind::Structures::Parameter\:Unchecked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Parameter.Unchecked{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Parameter.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.ParameterCollection Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection}
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds the parameter list of an opengl function. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterCollection} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterCollection} ({\b ParameterCollection} pc)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
new void {\b Add} ({\b Parameter} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToString} (bool override_unsafe_setting)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the parameter declaration string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b CallString} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ContainsType} (string type)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasPointerParameters}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasReferenceParameters}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds the parameter list of an opengl function. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ParameterCollection\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:ParameterCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.ParameterCollection.ParameterCollection ()}
}\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ParameterCollection\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:ParameterCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.ParameterCollection.ParameterCollection ({\b ParameterCollection} {\i pc})}
}\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
new void Bind.Structures.ParameterCollection.Add ({\b Parameter} {\i p})}
}\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CallString\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:CallString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.ParameterCollection.CallString ()}
}\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ContainsType\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:ContainsType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.ParameterCollection.ContainsType (string {\i type})}
}\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToString\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.ParameterCollection.ToString (bool {\i override_unsafe_setting})}
}\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the parameter declaration string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i override_unsafe_setting} If true, unsafe types will be used even if the Settings.Compatibility.NoPublicUnsafeFunctions flag is set. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The parameter list of an opengl function in the form ( [parameters] )\par
}}}
{\xe \v ToString\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.ParameterCollection.ToString ()}
}\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v HasPointerParameters\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:HasPointerParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.ParameterCollection.HasPointerParameters{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HasReferenceParameters\:Bind::Structures::ParameterCollection}
{\xe \v Bind::Structures::ParameterCollection\:HasReferenceParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.ParameterCollection.HasReferenceParameters{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Parameter.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.PhysFs.Fs.PHYSFS_ArchiveInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\xe \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information on various PhysicsFS-supported archives. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PHYSFS_ArchiveInfo} (string {\b extension}, string {\b description}, string {\b author}, string {\b url})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\b PHYSFS_ArchiveInfo} structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A human-readable representation of the archive info. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b extension}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Archive file extension: "ZIP", for example. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b description}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Human-readable archive description. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b author}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Person who did support for this archive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b url}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
URL related to this archive. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information on various PhysicsFS-supported archives. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure gives you details on what sort of archives are supported by this implementation of PhysicsFS. Archives tend to be things like ZIP files and such. \par
Not all binaries are created equal! PhysicsFS can be built with or without support for various archives. You can check with PHYSFS_supportedArchiveTypes() to see if your archive type is supported. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid PHYSFS_supportedArchiveTypes\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PHYSFS_ArchiveInfo\:Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\xe \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo\:PHYSFS_ArchiveInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.PhysFs.Fs.PHYSFS_ArchiveInfo.PHYSFS_ArchiveInfo (string {\i extension}, string {\i description}, string {\i author}, string {\i url})}
}\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\b PHYSFS_ArchiveInfo} structure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i extension} The archive's file extension.\par
{\i description} The description of the archive.\par
{\i author} Who created this implementation.\par
{\i url} The URL of the archive.\par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\xe \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.PhysFs.Fs.PHYSFS_ArchiveInfo.ToString ()}
}\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A human-readable representation of the archive info. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v author\:Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\xe \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo\:author}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.PhysFs.Fs.PHYSFS_ArchiveInfo.author}}
}\par
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Person who did support for this archive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v description\:Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\xe \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo\:description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.PhysFs.Fs.PHYSFS_ArchiveInfo.description}}
}\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Human-readable archive description. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v extension\:Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\xe \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo\:extension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.PhysFs.Fs.PHYSFS_ArchiveInfo.extension}}
}\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Archive file extension: "ZIP", for example. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v url\:Tao::PhysFs::Fs::PHYSFS_ArchiveInfo}
{\xe \v Tao::PhysFs::Fs::PHYSFS_ArchiveInfo\:url}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.PhysFs.Fs.PHYSFS_ArchiveInfo.url}}
}\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
URL related to this archive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.PhysFs/{\b Fs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.PhysFs.Fs.PHYSFS_File Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::PhysFs::Fs::PHYSFS_File}
{\xe \v Tao::PhysFs::Fs::PHYSFS_File}
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PhysicsFS file handle. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b opaque}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
That's all you get. Don't touch. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PhysicsFS file handle. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You get a pointer to one of these when you open a file for reading, writing, or appending via PhysicsFS. \par
As you can see from the lack of meaningful fields, you should treat this as opaque data. Don't try to manipulate the file handle, just pass the pointer you got, unmolested, to various PhysicsFS APIs.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid PHYSFS_openRead, PHYSFS_openWrite, PHYSFS_openAppend, PHYSFS_close, PHYSFS_read(System.IntPtr, System.IntPtr, uint, uint), PHYSFS_write, PHYSFS_seek, PHYSFS_tell, PHYSFS_eof, PHYSFS_setBuffer, PHYSFS_flush\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v opaque\:Tao::PhysFs::Fs::PHYSFS_File}
{\xe \v Tao::PhysFs::Fs::PHYSFS_File\:opaque}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.PhysFs.Fs.PHYSFS_File.opaque}}
}\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
That's all you get. Don't touch. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.PhysFs/{\b Fs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.PhysFs.Fs.PHYSFS_Version Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::PhysFs::Fs::PHYSFS_Version}
{\xe \v Tao::PhysFs::Fs::PHYSFS_Version}
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information the version of PhysicsFS in use. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representation of the version number (x.x.x). }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PHYSFS_uint8 {\b major}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
major revision }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PHYSFS_uint8 {\b minor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minor revision }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PHYSFS_uint8 {\b patch}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
patchlevel }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information the version of PhysicsFS in use. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the library's version as three levels: major revision (increments with massive changes, additions, and enhancements), minor revision (increments with backwards-compatible changes to the major revision), and patchlevel (increments with fixes to the minor revision). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid PHYSFS_VERSION, PHYSFS_getLinkedVersion\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::PhysFs::Fs::PHYSFS_Version}
{\xe \v Tao::PhysFs::Fs::PHYSFS_Version\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.PhysFs.Fs.PHYSFS_Version.ToString ()}
}\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a string representation of the version number (x.x.x). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A string representing the version.\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v major\:Tao::PhysFs::Fs::PHYSFS_Version}
{\xe \v Tao::PhysFs::Fs::PHYSFS_Version\:major}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PHYSFS_uint8 {\b Tao.PhysFs.Fs.PHYSFS_Version.major}}
}\par
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
major revision }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v minor\:Tao::PhysFs::Fs::PHYSFS_Version}
{\xe \v Tao::PhysFs::Fs::PHYSFS_Version\:minor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PHYSFS_uint8 {\b Tao.PhysFs.Fs.PHYSFS_Version.minor}}
}\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minor revision }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v patch\:Tao::PhysFs::Fs::PHYSFS_Version}
{\xe \v Tao::PhysFs::Fs::PHYSFS_Version\:patch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PHYSFS_uint8 {\b Tao.PhysFs.Fs.PHYSFS_Version.patch}}
}\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
patchlevel }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.PhysFs/{\b Fs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b PIXELFORMATDESCRIPTOR}}  structure describes the pixel format of a drawing surface. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int16 {\b nSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the size of this data structure. This value should be set to {\f2 sizeof(PIXELFORMATDESCRIPTOR)} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int16 {\b nVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the version of this data structure. This value should be set to 1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwFlags}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A set of bit flags that specify properties of the pixel buffer. The properties are generally not mutually exclusive; you can set any combination of bit flags, with the exceptions noted. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b iPixelType}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the type of pixel data. The following types are defined. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cColorBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of color bitplanes in each color buffer. For RGBA pixel types, it is the size of the color buffer, excluding the alpha bitplanes. For color-index pixels, it is the size of the color-index buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cRedBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of red bitplanes in each RGBA color buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cRedShift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for red bitplanes in each RGBA color buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cGreenBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of green bitplanes in each RGBA color buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cGreenShift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for green bitplanes in each RGBA color buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cBlueBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of blue bitplanes in each RGBA color buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cBlueShift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for blue bitplanes in each RGBA color buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAlphaBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of alpha bitplanes in each RGBA color buffer. Alpha bitplanes are not supported. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAlphaShift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for alpha bitplanes in each RGBA color buffer. Alpha bitplanes are not supported. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAccumBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the total number of bitplanes in the accumulation buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAccumRedBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of red bitplanes in the accumulation buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAccumGreenBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of green bitplanes in the accumulation buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAccumBlueBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of blue bitplanes in the accumulation buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAccumAlphaBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of alpha bitplanes in the accumulation buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cDepthBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the depth of the depth (z-axis) buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cStencilBits}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the depth of the stencil buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b cAuxBuffers}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of auxiliary buffers. Auxiliary buffers are not supported. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b iLayerType}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignored. Earlier implementations of OpenGL used this member, but it is no longer used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte {\b bReserved}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of overlay and underlay planes. Bits 0 through 3 specify up to 15 overlay planes and bits 4 through 7 specify up to 15 underlay planes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwLayerMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignored. Earlier implementations of OpenGL used this member, but it is no longer used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwVisibleMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the transparent color or index of an underlay plane. When the pixel type is RGBA, {\b dwVisibleMask}  is a transparent RGB color value. When the pixel type is color index, it is a transparent index value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b dwDamageMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignored. Earlier implementations of OpenGL used this member, but it is no longer used. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b PIXELFORMATDESCRIPTOR}}  structure describes the pixel format of a drawing surface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Please notice carefully, as documented in the members, that certain pixel format properties are not supported in the current generic implementation. The generic implementation is the Microsoft GDI software implementation of OpenGL. Hardware manufacturers may enhance parts of OpenGL, and may support some pixel format properties not supported by the generic implementation.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid ChoosePixelFormat, SetPixelFormat\par
}seealso cref="DescribePixelFormat" /> seealso cref="GetPixelFormat" />  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bReserved\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:bReserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.bReserved}}
}\par
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of overlay and underlay planes. Bits 0 through 3 specify up to 15 overlay planes and bits 4 through 7 specify up to 15 underlay planes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumAlphaBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAccumAlphaBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAccumAlphaBits}}
}\par
{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of alpha bitplanes in the accumulation buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAccumBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAccumBits}}
}\par
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the total number of bitplanes in the accumulation buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumBlueBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAccumBlueBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAccumBlueBits}}
}\par
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of blue bitplanes in the accumulation buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumGreenBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAccumGreenBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAccumGreenBits}}
}\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of green bitplanes in the accumulation buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAccumRedBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAccumRedBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAccumRedBits}}
}\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of red bitplanes in the accumulation buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAlphaBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAlphaBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAlphaBits}}
}\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of alpha bitplanes in each RGBA color buffer. Alpha bitplanes are not supported. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAlphaShift\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAlphaShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAlphaShift}}
}\par
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for alpha bitplanes in each RGBA color buffer. Alpha bitplanes are not supported. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cAuxBuffers\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cAuxBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cAuxBuffers}}
}\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of auxiliary buffers. Auxiliary buffers are not supported. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cBlueBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cBlueBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cBlueBits}}
}\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of blue bitplanes in each RGBA color buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cBlueShift\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cBlueShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cBlueShift}}
}\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for blue bitplanes in each RGBA color buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cColorBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cColorBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cColorBits}}
}\par
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of color bitplanes in each color buffer. For RGBA pixel types, it is the size of the color buffer, excluding the alpha bitplanes. For color-index pixels, it is the size of the color-index buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cDepthBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cDepthBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cDepthBits}}
}\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the depth of the depth (z-axis) buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cGreenBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cGreenBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cGreenBits}}
}\par
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of green bitplanes in each RGBA color buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cGreenShift\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cGreenShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cGreenShift}}
}\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for green bitplanes in each RGBA color buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cRedBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cRedBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cRedBits}}
}\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of red bitplanes in each RGBA color buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cRedShift\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cRedShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cRedShift}}
}\par
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the shift count for red bitplanes in each RGBA color buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cStencilBits\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:cStencilBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.cStencilBits}}
}\par
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the depth of the stencil buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwDamageMask\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:dwDamageMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.dwDamageMask}}
}\par
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignored. Earlier implementations of OpenGL used this member, but it is no longer used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies whether more than one pixel format shares the same frame buffer. If the result of the bitwise AND of the damage masks between two pixel formats is nonzero, then they share the same buffers. \par
}}
{\xe \v dwFlags\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:dwFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.dwFlags}}
}\par
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A set of bit flags that specify properties of the pixel buffer. The properties are generally not mutually exclusive; you can set any combination of bit flags, with the exceptions noted. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The following bit flag constants are defined:\par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Meaning  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_DRAW_TO_WINDOW}  \cell }{The buffer can draw to a window or device surface.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_DRAW_TO_BITMAP}  \cell }{The buffer can draw to a memory bitmap.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_SUPPORT_GDI}  \cell }{The buffer supports GDI drawing. This flag and PFD_DOUBLEBUFFER are mutually exclusive in the current generic implementation.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_SUPPORT_OPENGL}  \cell }{The buffer supports OpenGL drawing.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_GENERIC_ACCELERATED}  \cell }{The pixel format is supported by a device driver that accelerates the generic implementation. If this flag is clear and the PFD_GENERIC_FORMAT flag is set, the pixel format is supported by the generic implementation only.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_GENERIC_FORMAT}  \cell }{The pixel format is supported by the GDI software implementation, which is also known as the generic implementation. If this bit is clear, the pixel format is supported by a device driver or hardware.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_NEED_PALETTE}  \cell }{The buffer uses RGBA pixels on a palette-managed device. A logical palette is required to achieve the best results for this pixel type. Colors in the palette should be specified according to the values of the {\b cRedBits} , {\b cRedShift} , {\b cGreenBits} , {\b cGreenShift} , {\b cBluebits} , and {\b cBlueShift}  members. The palette should be created and realized in the device context before calling Wgl.wglMakeCurrent.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_NEED_SYSTEM_PALETTE}  \cell }{Defined in the pixel format descriptors of hardware that supports one hardware palette in 256-color mode only. For such systems to use hardware acceleration, the hardware palette must be in a fixed order (for example, 3-3-2) when in RGBA mode or must match the logical palette when in color-index mode.\par
When this flag is set, you must call SetSystemPaletteUse in your program to force a one-to-one mapping of the logical palette and the system palette. If your OpenGL hardware supports multiple hardware palettes and the device driver can allocate spare hardware palettes for OpenGL, this flag is typically clear.\par
This flag is not set in the generic pixel formats.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_DOUBLEBUFFER}  \cell }{The buffer is double-buffered. This flag and PFD_SUPPORT_GDI are mutually exclusive in the current generic implementation.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_STEREO}  \cell }{The buffer is stereoscopic. This flag is not supported in the current generic implementation.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_SWAP_LAYER_BUFFERS}  \cell }{Indicates whether a device can swap individual layer planes with pixel formats that include double-buffered overlay or underlay planes. Otherwise all layer planes are swapped together as a group. When this flag is set, {\b wglSwapLayerBuffers}  is supported.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
You can specify the following bit flags when calling ChoosePixelFormat.\par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Meaning  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_DEPTH_DONTCARE}  \cell }{The requested pixel format can either have or not have a depth buffer. To select a pixel format without a depth buffer, you must specify this flag. The requested pixel format can be with or without a depth buffer. Otherwise, only pixel formats with a depth buffer are considered.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_DOUBLEBUFFER_DONTCARE}  \cell }{The requested pixel format can be either single- or double-buffered.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_STEREO_DONTCARE}  \cell }{The requested pixel format can be either monoscopic or stereoscopic.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
With the {\b glAddSwapHintRectWIN}  extension function, two new flags are included for the {\b {\b PIXELFORMATDESCRIPTOR}}  pixel format structure. \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Meaning  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_SWAP_COPY}  \cell }{Specifies the content of the back buffer in the double-buffered main color plane following a buffer swap. Swapping the color buffers causes the content of the back buffer to be copied to the front buffer. The content of the back buffer is not affected by the swap. PFD_SWAP_COPY is a hint only and might not be provided by a driver.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_SWAP_EXCHANGE}  \cell }{Specifies the content of the back buffer in the double-buffered main color plane following a buffer swap. Swapping the color buffers causes the exchange of the back buffer's content with the front buffer's content. Following the swap, the back buffer's content contains the front buffer's content before the swap. PFD_SWAP_EXCHANGE is a hint only and might not be provided by a driver.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
}}
{\xe \v dwLayerMask\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:dwLayerMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.dwLayerMask}}
}\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignored. Earlier implementations of OpenGL used this member, but it is no longer used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the layer mask. The layer mask is used in conjunction with the visible mask to determine if one layer overlays another. \par
}}
{\xe \v dwVisibleMask\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:dwVisibleMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.dwVisibleMask}}
}\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the transparent color or index of an underlay plane. When the pixel type is RGBA, {\b dwVisibleMask}  is a transparent RGB color value. When the pixel type is color index, it is a transparent index value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v iLayerType\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:iLayerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.iLayerType}}
}\par
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignored. Earlier implementations of OpenGL used this member, but it is no longer used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the type of layer. \par
}}
{\xe \v iPixelType\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:iPixelType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.iPixelType}}
}\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the type of pixel data. The following types are defined. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Meaning  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_TYPE_RGBA}  \cell }{RGBA pixels. Each pixel has four components in this order: red, green, blue, and alpha.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{PFD_TYPE_COLORINDEX}  \cell }{Color-index pixels. Each pixel uses a color-index value.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
}}
{\xe \v nSize\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:nSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int16 {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.nSize}}
}\par
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the size of this data structure. This value should be set to {\f2 sizeof(PIXELFORMATDESCRIPTOR)} . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nVersion\:Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR}
{\xe \v Tao::Platform::Windows::Gdi::PIXELFORMATDESCRIPTOR\:nVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int16 {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR.nVersion}}
}\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the version of this data structure. This value should be set to 1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Gdi.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Gdi.POINTFLOAT Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Gdi::POINTFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::POINTFLOAT}
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b POINTFLOAT}}  structure contains the x and y coordinates of a point. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b X}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the horizontal (x) coordinate of a point. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Y}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the vertical (y) coordinate of a point. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b POINTFLOAT}}  structure contains the x and y coordinates of a point. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b GLYPHMETRICSFLOAT}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v X\:Tao::Platform::Windows::Gdi::POINTFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::POINTFLOAT\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.Platform.Windows.Gdi.POINTFLOAT.X}}
}\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the horizontal (x) coordinate of a point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Y\:Tao::Platform::Windows::Gdi::POINTFLOAT}
{\xe \v Tao::Platform::Windows::Gdi::POINTFLOAT\:Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.Platform.Windows.Gdi.POINTFLOAT.Y}}
}\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the vertical (y) coordinate of a point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Gdi.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.RasterRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::RasterRec_}
{\xe \v Tao::FreeType::RasterRec_}
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FFmpeg.FFmpeg.RcOverride Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FFmpeg::FFmpeg::RcOverride}
{\xe \v Tao::FFmpeg::FFmpeg::RcOverride}
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b start_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b end_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b qscale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b quality_factor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v end_frame\:Tao::FFmpeg::FFmpeg::RcOverride}
{\xe \v Tao::FFmpeg::FFmpeg::RcOverride\:end_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.RcOverride.end_frame}}
}\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v qscale\:Tao::FFmpeg::FFmpeg::RcOverride}
{\xe \v Tao::FFmpeg::FFmpeg::RcOverride\:qscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.RcOverride.qscale}}
}\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v quality_factor\:Tao::FFmpeg::FFmpeg::RcOverride}
{\xe \v Tao::FFmpeg::FFmpeg::RcOverride\:quality_factor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float {\b Tao.FFmpeg.FFmpeg.RcOverride.quality_factor}}
}\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v start_frame\:Tao::FFmpeg::FFmpeg::RcOverride}
{\xe \v Tao::FFmpeg::FFmpeg::RcOverride\:start_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.FFmpeg.FFmpeg.RcOverride.start_frame}}
}\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FFmpeg/{\b AVCodec.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.SizeHints.Rectangle Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::SizeHints::Rectangle}
{\xe \v Tao::Platform::X11::SizeHints::Rectangle}
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x\:Tao::Platform::X11::SizeHints::Rectangle}
{\xe \v Tao::Platform::X11::SizeHints::Rectangle\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
- (internal int Tao.Platform.X11.SizeHints.Rectangle.){\b x}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::SizeHints::Rectangle}
{\xe \v Tao::Platform::X11::SizeHints::Rectangle\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
- (internal int Tao.Platform.X11.SizeHints.Rectangle.){\b y}{\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b API.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.RendererRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::RendererRec_}
{\xe \v Tao::FreeType::RendererRec_}
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_ActiveEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_ActiveEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ActiveEvent}
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application visibility event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_ACTIVEEVENT. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b gain}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 if the event is a loss or 1 if it is a gain. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b state}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_APPMOUSEFOCUS if mouse focus was gained or lost, SDL_APPINPUTFOCUS if input focus was gained or lost, or SDL_APPACTIVE if the application was iconified (gain=0) or restored(gain=1). }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application visibility event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_ActiveEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_ACTIVEEVENT is reported. \par
When the mouse leaves or enters the window area a SDL_APPMOUSEFOCUS type activation event occurs, if the mouse entered the window then gain will be 1, otherwise gain will be 0. A SDL_APPINPUTFOCUS type activation event occurs when the application loses or gains keyboard focus. This usually occurs when another application is made active. Finally, a SDL_APPACTIVE type event occurs when the application is either minimised/iconified (gain=0) or restored. \par
Note: This event does not occur when an application window is first created. \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
            Uint8 type;\par
            Uint8 gain;\par
            Uint8 state;\par
            \} SDL_ActiveEvent;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_GetAppState}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v gain\:Tao::Sdl::Sdl::SDL_ActiveEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ActiveEvent\:gain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_ActiveEvent.gain}}
}\par
{\bkmkstart AAAAAAAEOI}
{\bkmkend AAAAAAAEOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 if the event is a loss or 1 if it is a gain. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v state\:Tao::Sdl::Sdl::SDL_ActiveEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ActiveEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_ActiveEvent.state}}
}\par
{\bkmkstart AAAAAAAEOJ}
{\bkmkend AAAAAAAEOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_APPMOUSEFOCUS if mouse focus was gained or lost, SDL_APPINPUTFOCUS if input focus was gained or lost, or SDL_APPACTIVE if the application was iconified (gain=0) or restored(gain=1). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_ActiveEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ActiveEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_ActiveEvent.type}}
}\par
{\bkmkstart AAAAAAAEOK}
{\bkmkend AAAAAAAEOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_ACTIVEEVENT. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_AudioCVT Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT}
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Conversion Structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b needed}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set to 1 if conversion possible. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b src_format}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio format of the source. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b dst_format}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio format of the destination. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rate_incr}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rate conversion increment. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b buf}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer to hold entire audio data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b len}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of original audio buffer in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b len_cvt}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of converted audio buffer in bytes (calculated). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b len_mult}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
buf must be len*len_mult bytes in size(calculated) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b len_ratio}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Final audio size is len*len_ratio. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b filter_index}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current audio conversion function. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Conversion Structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_AudioCVT} is used to convert audio data between different formats. A {\b SDL_AudioCVT} structure is created with the {\b SDL_BuildAudioCVT(IntPtr, short, byte, int, short, byte, int)} function, while the actual conversion is done by the SDL_ConvertAudio function. \par
Many of the fields in the {\b SDL_AudioCVT} structure should be considered private and their function will not be discussed here. \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid              typedef struct\{\par
                        int needed;\par
                        Uint16 src_format;\par
                        Uint16 dest_format;\par
                        double rate_incr;\par
                        Uint8 *buf;\par
                        int len;\par
                        int len_cvt;\par
                        int len_mult;\par
                        double len_ratio;\par
                        void (*filters[10])(struct SDL_AudioCVT *cvt, Uint16 format);\par
                                                                        int filter_index;\par
                                                                \} SDL_AudioCVT;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_BuildAudioCVT(IntPtr, short, byte, int, short, byte, int)}, {\b SDL_ConvertAudio}, {\b SDL_AudioSpec}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.Sdl.SDL_AudioCVT.buf}}
}\par
{\bkmkstart AAAAAAAEOL}
{\bkmkend AAAAAAAEOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer to hold entire audio data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This points to the audio data that will be used in the conversion. It is both the source and the destination, which means the converted audio data overwrites the original data. It also means that the converted data may be larger than the original data (if you were converting from 8-bit to 16-bit, for instance), so you must ensure buf is large enough. See below. \par
IntPtr to byte \par
}}
{\xe \v dst_format\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:dst_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_AudioCVT.dst_format}}
}\par
{\bkmkstart AAAAAAAEOM}
{\bkmkend AAAAAAAEOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio format of the destination. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v filter_index\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:filter_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_AudioCVT.filter_index}}
}\par
{\bkmkstart AAAAAAAEON}
{\bkmkend AAAAAAAEON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current audio conversion function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v len\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_AudioCVT.len}}
}\par
{\bkmkstart AAAAAAAEOO}
{\bkmkend AAAAAAAEOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of original audio buffer in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v len_cvt\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:len_cvt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_AudioCVT.len_cvt}}
}\par
{\bkmkstart AAAAAAAEOP}
{\bkmkend AAAAAAAEOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of converted audio buffer in bytes (calculated). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the length of the original audio data in bytes. \par
}}
{\xe \v len_mult\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:len_mult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_AudioCVT.len_mult}}
}\par
{\bkmkstart AAAAAAAEOQ}
{\bkmkend AAAAAAAEOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
buf must be len*len_mult bytes in size(calculated) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
As explained above, the audio buffer needs to be big enough to store the converted data, which may be bigger than the original audio data. The length of buf should be len*len_mult. \par
}}
{\xe \v len_ratio\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:len_ratio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b Tao.Sdl.Sdl.SDL_AudioCVT.len_ratio}}
}\par
{\bkmkstart AAAAAAAEOR}
{\bkmkend AAAAAAAEOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Final audio size is len*len_ratio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When you have finished converting your audio data, you need to know how much of your audio buffer is valid. len*len_ratio is the size of the converted audio data in bytes. This is very similar to len_mult, however when the convert audio data is shorter than the original len_mult would be 1. len_ratio, on the other hand, would be a fractional number between 0 and 1. \par
}}
{\xe \v needed\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:needed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_AudioCVT.needed}}
}\par
{\bkmkstart AAAAAAAEOS}
{\bkmkend AAAAAAAEOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set to 1 if conversion possible. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rate_incr\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:rate_incr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b Tao.Sdl.Sdl.SDL_AudioCVT.rate_incr}}
}\par
{\bkmkstart AAAAAAAEOT}
{\bkmkend AAAAAAAEOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rate conversion increment. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v src_format\:Tao::Sdl::Sdl::SDL_AudioCVT}
{\xe \v Tao::Sdl::Sdl::SDL_AudioCVT\:src_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_AudioCVT.src_format}}
}\par
{\bkmkstart AAAAAAAEOU}
{\bkmkend AAAAAAAEOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio format of the source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_AudioSpec Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec}
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Specification Structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b freq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio frequency in samples per second. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b format}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio data format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b channels}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of channels: 1 mono, 2 stereo. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b silence}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio buffer silence value (calculated). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b samples}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio buffer size in samples. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b padding}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Necessary for some compile environments. Should not be used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio buffer size in bytes (calculated). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b callback}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback function for filling the audio buffer This function is called when the audio device needs more data. 'stream' is a pointer to the audio data buffer 'len' is the length of that buffer in bytes. Once the callback returns, the buffer will no longer be valid. Stereo samples are stored in a LRLRLR ordering. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b userdata}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer the user data which is passed to the callback function. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Specification Structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The calculated values in this structure are calculated by {\b SDL_OpenAudio()} The {\b SDL_AudioSpec} structure is used to describe the format of some audio data. This structure is used by SDL_OpenAudio and SDL_LoadWAV. While all fields are used by {\b SDL_OpenAudio} only freq, format, samples and channels are used by SDL_LoadWAV(string, out IntPtr, out IntPtr, out int). We will detail these common members here. \par
Marshals C-struct in SDL_audio.h: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid               typedef struct\{\par
                        int freq;\par
                        Uint16 format;\par
                        Uint8 channels;\par
                        Uint8 silence;\par
                        Uint16 samples;\par
                        Uint32 size;\par
                        void (*callback)(void *userdata, Uint8 *stream, int len);\par
                        void *userdata;\par
                \} SDL_AudioSpec;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_OpenAudio}, SDL_LoadWAV(string, out IntPtr, out IntPtr, out int)\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v callback\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:callback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.Sdl.SDL_AudioSpec.callback}}
}\par
{\bkmkstart AAAAAAAEOV}
{\bkmkend AAAAAAAEOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback function for filling the audio buffer This function is called when the audio device needs more data. 'stream' is a pointer to the audio data buffer 'len' is the length of that buffer in bytes. Once the callback returns, the buffer will no longer be valid. Stereo samples are stored in a LRLRLR ordering. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v channels\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:channels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_AudioSpec.channels}}
}\par
{\bkmkstart AAAAAAAEOW}
{\bkmkend AAAAAAAEOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of channels: 1 mono, 2 stereo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of seperate sound channels. 1 is mono (single channel), 2 is stereo (dual channel). \par
}}
{\xe \v format\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_AudioSpec.format}}
}\par
{\bkmkstart AAAAAAAEOX}
{\bkmkend AAAAAAAEOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio data format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the size and type of each sample element. \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_U8}  \cell }{Unsigned 8-bit samples  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_S8}  \cell }{Signed 8-bit samples  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_U16 AUDIO_U16LSB}  \cell }{Unsigned 16-bit little-endian samples  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_S16 AUDIO_S16LSB}  \cell }{Signed 16-bit little-endian samples  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_U16MSB}  \cell }{Unsigned 16-bit big-endian samples  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_S16MSB}  \cell }{Signed 16-bit big-endian samples  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_U16SYS}  \cell }{Either AUDIO_U16LSB or AUDIO_U16MSB depending on you systems endianness   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{AUDIO_S16SYS}  \cell }{Either AUDIO_S16LSB or AUDIO_S16MSB depending on you systems endianness   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
}}
{\xe \v freq\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_AudioSpec.freq}}
}\par
{\bkmkstart AAAAAAAEOY}
{\bkmkend AAAAAAAEOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio frequency in samples per second. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of samples sent to the sound device every second. Common values are 11025, 22050 and 44100. The higher the better. \par
}}
{\xe \v padding\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:padding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_AudioSpec.padding}}
}\par
{\bkmkstart AAAAAAAEOZ}
{\bkmkend AAAAAAAEOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Necessary for some compile environments. Should not be used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v samples\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_AudioSpec.samples}}
}\par
{\bkmkstart AAAAAAAEPA}
{\bkmkend AAAAAAAEPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio buffer size in samples. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When used with {\b SDL_OpenAudio} this refers to the size of the audio buffer in samples. A sample a chunk of audio data of the size specified in format mulitplied by the number of channels. When the {\b SDL_AudioSpec} is used with SDL_LoadWAV(string, out IntPtr, out IntPtr, out int) samples is set to 4096. \par
}}
{\xe \v silence\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:silence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_AudioSpec.silence}}
}\par
{\bkmkstart AAAAAAAEPB}
{\bkmkend AAAAAAAEPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio buffer silence value (calculated). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v size\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_AudioSpec.size}}
}\par
{\bkmkstart AAAAAAAEPC}
{\bkmkend AAAAAAAEPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio buffer size in bytes (calculated). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v userdata\:Tao::Sdl::Sdl::SDL_AudioSpec}
{\xe \v Tao::Sdl::Sdl::SDL_AudioSpec\:userdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object {\b Tao.Sdl.Sdl.SDL_AudioSpec.userdata}}
}\par
{\bkmkstart AAAAAAAEPD}
{\bkmkend AAAAAAAEPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer the user data which is passed to the callback function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_CD Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD}
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDROM Drive Information. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_CD} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Private drive identifier. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b status}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current drive status. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numtracks}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of tracks on the CD. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cur_track}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current track. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cur_frame}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current frame offset within current track. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_CDTrackData} {\b track}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of track descriptions. (see {\b SDL_CDtrack}). }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDROM Drive Information. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An {\b SDL_CD} structure is returned by SDL_CDOpen. It represents an opened CDROM device and stores information on the layout of the tracks on the disc. \par
A frame is the base data unit of a CD. CD_FPS frames is equal to 1 second of music. SDL provides two macros for converting between time and frames: FRAMES_TO_MSF(f, M,S,F) and MSF_TO_FRAMES. \par
Struct from SDL_cdrom.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
            int id;\par
            CDstatus status;\par
            int numtracks;\par
            int cur_track;\par
            int cur_frame;\par
            SDL_CDtrack track[SDL_MAX_TRACKS+1];\par
            \} SDL_CD;\par
}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int min, sec, frame;\par
                        int frame_offset;\par
\par
                        FRAMES_TO_MSF(cdrom-&gt;cur_frame, &amp;min, &amp;sec, &amp;frame);\par
                        printf("Current Position: %d minutes, %d seconds, %d frames\\n", min, sec, frame);\par
\par
                        frame_offset=MSF_TO_FRAMES(min, sec, frame);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid SDL_CDOpen, {\b SDL_CDtrack}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SDL_CD\:Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD\:SDL_CD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Sdl.Sdl.SDL_CD.SDL_CD ()}
}\par
{\bkmkstart AAAAAAAEPE}
{\bkmkend AAAAAAAEPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cur_frame\:Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD\:cur_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_CD.cur_frame}}
}\par
{\bkmkstart AAAAAAAEPF}
{\bkmkend AAAAAAAEPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current frame offset within current track. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cur_track\:Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD\:cur_track}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_CD.cur_track}}
}\par
{\bkmkstart AAAAAAAEPG}
{\bkmkend AAAAAAAEPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current track. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v id\:Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_CD.id}}
}\par
{\bkmkstart AAAAAAAEPH}
{\bkmkend AAAAAAAEPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Private drive identifier. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v numtracks\:Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD\:numtracks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_CD.numtracks}}
}\par
{\bkmkstart AAAAAAAEPI}
{\bkmkend AAAAAAAEPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of tracks on the CD. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v status\:Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_CD.status}}
}\par
{\bkmkstart AAAAAAAEPJ}
{\bkmkend AAAAAAAEPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current drive status. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_CDStatus enum \par
}}
{\xe \v track\:Tao::Sdl::Sdl::SDL_CD}
{\xe \v Tao::Sdl::Sdl::SDL_CD\:track}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_CDTrackData} {\b Tao.Sdl.Sdl.SDL_CD.track}}
}\par
{\bkmkstart AAAAAAAEPK}
{\bkmkend AAAAAAAEPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of track descriptions. (see {\b SDL_CDtrack}). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_CDtrack Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_CDtrack}
{\xe \v Tao::Sdl::Sdl::SDL_CDtrack}
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CD Track Information Structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b id}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Track number(0-99). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data or audio track. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b unused}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unused. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b length}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length, in frames, of this track. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offset}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset, in frames, from start of disk. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CD Track Information Structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_CDtrack} stores data on each track on a CD, its fields should be pretty self explainatory. It is a member a the {\b SDL_CD} structure. \par
Note: Frames can be converted to standard timings. There are CD_FPS frames per second, so {\b SDL_CDtrack.length}/CD_FPS=length_in_seconds. \par
Struct in SDL_cdrom.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
            Uint8 id;\par
            Uint8 type;\par
            Uint32 length;\par
            Uint32 offset;\par
            \} SDL_CDtrack;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CD}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v id\:Tao::Sdl::Sdl::SDL_CDtrack}
{\xe \v Tao::Sdl::Sdl::SDL_CDtrack\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_CDtrack.id}}
}\par
{\bkmkstart AAAAAAAEPL}
{\bkmkend AAAAAAAEPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Track number(0-99). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:Tao::Sdl::Sdl::SDL_CDtrack}
{\xe \v Tao::Sdl::Sdl::SDL_CDtrack\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_CDtrack.length}}
}\par
{\bkmkstart AAAAAAAEPM}
{\bkmkend AAAAAAAEPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length, in frames, of this track. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:Tao::Sdl::Sdl::SDL_CDtrack}
{\xe \v Tao::Sdl::Sdl::SDL_CDtrack\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_CDtrack.offset}}
}\par
{\bkmkstart AAAAAAAEPN}
{\bkmkend AAAAAAAEPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset, in frames, from start of disk. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_CDtrack}
{\xe \v Tao::Sdl::Sdl::SDL_CDtrack\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_CDtrack.type}}
}\par
{\bkmkstart AAAAAAAEPO}
{\bkmkend AAAAAAAEPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data or audio track. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_AUDIO_TRACK or SDL_DATA_TRACK \par
}}
{\xe \v unused\:Tao::Sdl::Sdl::SDL_CDtrack}
{\xe \v Tao::Sdl::Sdl::SDL_CDtrack\:unused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_CDtrack.unused}}
}\par
{\bkmkstart AAAAAAAEPP}
{\bkmkend AAAAAAAEPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_CDTrackData Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_CDTrackData}
{\xe \v Tao::Sdl::Sdl::SDL_CDTrackData}
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_CDTrackData} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Sdl.SDL_CDtrack} {\b this} [int index]{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SDL_CDTrackData\:Tao::Sdl::Sdl::SDL_CDTrackData}
{\xe \v Tao::Sdl::Sdl::SDL_CDTrackData\:SDL_CDTrackData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Sdl.Sdl.SDL_CDTrackData.SDL_CDTrackData ()}
}\par
{\bkmkstart AAAAAAAEPQ}
{\bkmkend AAAAAAAEPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this\:Tao::Sdl::Sdl::SDL_CDTrackData}
{\xe \v Tao::Sdl::Sdl::SDL_CDTrackData\:this}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Sdl.SDL_CDtrack} Tao.Sdl.Sdl.SDL_CDTrackData.this[int index]{\f2  [get]}}
}\par
{\bkmkstart AAAAAAAEPR}
{\bkmkend AAAAAAAEPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_Color Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_Color}
{\xe \v SDL_Color}
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format independent color description. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Color} (byte {\b r}, byte {\b g}, byte {\b b})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Color} (byte {\b r}, byte {\b g}, byte {\b b}, byte a)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b r}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red Intensity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b g}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green Intensity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b b}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blue Intensity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b unused}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alpha Channel Currently unused. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format independent color description. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_Color} describes a color in a format independent way. You can convert a {\b SDL_Color} to a pixel value for a certain pixel format using {\b SDL_MapRGB}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}, {\b SDL_SetColors}, {\b SDL_Palette}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SDL_Color\:SDL_Color}
{\xe \v SDL_Color\:SDL_Color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_Color.SDL_Color (byte {\i r}, byte {\i g}, byte {\i b})}
}\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} \par
{\i g} \par
{\i b} \par
}
}}
{\xe \v SDL_Color\:SDL_Color}
{\xe \v SDL_Color\:SDL_Color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_Color.SDL_Color (byte {\i r}, byte {\i g}, byte {\i b}, byte {\i a})}
}\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i r} \par
{\i g} \par
{\i b} \par
{\i a} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v b\:SDL_Color}
{\xe \v SDL_Color\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_Color.b}}
}\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blue Intensity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v g\:SDL_Color}
{\xe \v SDL_Color\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_Color.g}}
}\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green Intensity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v r\:SDL_Color}
{\xe \v SDL_Color\:r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_Color.r}}
}\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red Intensity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v unused\:SDL_Color}
{\xe \v SDL_Color\:unused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_Color.unused}}
}\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alpha Channel Currently unused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_Cursor Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_Cursor}
{\xe \v SDL_Cursor}
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Rect} {\b area}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The area of the mouse cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b hot_x}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The "tip" of the cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b hot_y}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The "tip" of the cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B/W cursor data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b mask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B/W cursor mask. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr[] {\b save}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Place to save cursor area. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b wm_cursor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window-manager cursor. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v area\:SDL_Cursor}
{\xe \v SDL_Cursor\:area}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_Rect} {\b SDL_Cursor.area}}
}\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The area of the mouse cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data\:SDL_Cursor}
{\xe \v SDL_Cursor\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Cursor.data}}
}\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B/W cursor data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IntPtr to byte \par
}}
{\xe \v hot_x\:SDL_Cursor}
{\xe \v SDL_Cursor\:hot_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_Cursor.hot_x}}
}\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The "tip" of the cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hot_y\:SDL_Cursor}
{\xe \v SDL_Cursor\:hot_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_Cursor.hot_y}}
}\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The "tip" of the cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mask\:SDL_Cursor}
{\xe \v SDL_Cursor\:mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Cursor.mask}}
}\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
B/W cursor mask. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IntPtr to byte \par
}}
{\xe \v save\:SDL_Cursor}
{\xe \v SDL_Cursor\:save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr [] {\b SDL_Cursor.save}}
}\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Place to save cursor area. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IntPtr to byte[2] \par
}}
{\xe \v wm_cursor\:SDL_Cursor}
{\xe \v SDL_Cursor\:wm_cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Cursor.wm_cursor}}
}\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window-manager cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IntPtr to WMcursor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SDL_Event Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event}
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_ActiveEvent {\b active}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Activation event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_KeyboardEvent {\b key}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keyboard event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_MouseMotionEvent {\b motion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse motion event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_MouseButtonEvent {\b button}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse button event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_JoyAxisEvent {\b jaxis}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_JoyBallEvent {\b jball}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick trackbell event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_JoyHatEvent {\b jhat}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick hat motion event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_JoyButtonEvent {\b jbutton}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick button event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_ResizeEvent {\b resize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application window resize event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_ExposeEvent {\b expose}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application window expose event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_QuitEvent {\b quit}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quit request event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SDL_UserEvent {\b user}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_SysWMEvent} {\b syswm}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined window manager event. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_Event} union is the core to all event handling is SDL, its probably the most important structure after {\b SDL_Surface}. {\b SDL_Event} is a union of all event structures used in SDL, using it is a simple matter of knowing which union member relates to which event type. \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Event type}  \cell }{Event Structure  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_ACTIVEEVENT}  \cell }{SDL_ActiveEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_KEYDOWN}  \cell }{SDL_KeyboardEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_KEYUP}  \cell }{SDL_KeyboardEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_MOUSEMOTION}  \cell }{SDL_MouseMotionEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_MOUSEBUTTONDOWN}  \cell }{SDL_MouseButtonEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_MOUSEBUTTONUP}  \cell }{SDL_MouseButtonEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_JOYAXISMOTION}  \cell }{SDL_JoyAxisEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_JOYBALLMOTION}  \cell }{SDL_JoyBallEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_JOYHATMOTION}  \cell }{SDL_JoyHatEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_JOYBUTTONDOWN}  \cell }{SDL_JoyButtonEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_JOYBUTTONUP}  \cell }{SDL_JoyButtonEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_QUIT}  \cell }{SDL_QuitEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_SYSWMEVENT}  \cell }{{\b SDL_SysWMEvent}  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_VIDEORESIZE}  \cell }{SDL_ResizeEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_VIDEOEXPOSE}  \cell }{SDL_ExposeEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_USEREVENT}  \cell }{SDL_UserEvent  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
The {\b SDL_Event} structure has two uses \par
Reading events on the event queue \par
Placing events on the event queue \par
Reading events from the event queue is done with either {\b SDL_PollEvent} or SDL_PeepEvents(SDL_Event[], int, int, int). We'll use SDL_PollEvent and step through an example. \par
First off, we create an empty {\b SDL_Event} structure. \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Event test_event;\par
}
 \par
SDL_PollEvent removes the next event from the event queue, if there are no events on the queue it returns 0 otherwise it returns 1. We use a while loop to process each event in turn. \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid while(SDL_PollEvent(&amp;test_event)) \{ \par
}
 \par
The SDL_PollEvent function take a pointer to an {\b SDL_Event} structure that is to be filled with event information. We know that if SDL_PollEvent removes an event from the queue then the event information will be placed in our test_event structure, but we also know that the type of event will be placed in the type member of test_event. So to handle each event type seperately we use a switch statement. \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  switch(test_event.type) \{ \par
}
 \par
We need to know what kind of events we're looking for and the event type's of those events. So lets assume we want to detect where the user is moving the mouse pointer within our application. We look through our event types and notice that SDL_MOUSEMOTION is, more than likely, the event we're looking for. A little more research tells use that SDL_MOUSEMOTION events are handled within the SDL_MouseMotionEvent structure which is the motion member of {\b SDL_Event}. We can check for the SDL_MOUSEMOTION event type within our switch statement like so:  \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid case SDL_MOUSEMOTION:\par
}
 \par
All we need do now is read the information out of the motion member of test_event. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                         printf("We got a motion event.\\n");\par
                        printf("Current mouse position is: (%d, %d)\\n", test_event.motion.x, test_event.motion.y);\par
                        break;\par
                        default:\par
                        printf("Unhandled Event!\\n");\par
                        break;\par
                \}\par
            \}\par
            printf("Event queue empty.\\n");\par
}
 \par
It is also possible to push events onto the event queue and so use it as a two-way communication path. Both {\b SDL_PushEvent} and SDL_PeepEvents(SDL_Event[], int, int, int) allow you to place events onto the event queue. This is usually used to place a SDL_USEREVENT on the event queue, however you could use it to post fake input events if you wished. Creating your own events is a simple matter of choosing the event type you want, setting the type member and filling the appropriate member structure with information. \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid            SDL_Event user_event;\par
\par
           user_event.type=SDL_USEREVENT;\par
           user_event.user.code=2;\par
           user_event.user.data1=NULL;\par
           user_event.user.data2=NULL;\par
           SDL_PushEvent(&amp;user_event);\par
            /code>\par
            </p>           \par
            <p>Union from SDL_events.h\par
            <code>\par
            typedef union\{\par
                        Uint8 type;\par
                        SDL_ActiveEvent active;\par
                        SDL_KeyboardEvent key;\par
                        SDL_MouseMotionEvent motion;\par
                        SDL_MouseButtonEvent button;\par
                        SDL_JoyAxisEvent jaxis;\par
                        SDL_JoyBallEvent jball;\par
                        SDL_JoyHatEvent jhat;\par
                        SDL_JoyButtonEvent jbutton;\par
                        SDL_ResizeEvent resize;\par
                        SDL_ExposeEvent expose;\par
                        SDL_QuitEvent quit;\par
                        SDL_UserEvent user;\par
                        SDL_SywWMEvent syswm;\par
                \} SDL_Event;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PollEvent}, {\b SDL_PushEvent}, SDL_PeepEvents(SDL_Event[], int, int, int)\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v active\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:active}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_ActiveEvent {\b Tao.Sdl.SDL_Event.active}}
}\par
{\bkmkstart AAAAAAAERL}
{\bkmkend AAAAAAAERL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Activation event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v button\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_MouseButtonEvent {\b Tao.Sdl.SDL_Event.button}}
}\par
{\bkmkstart AAAAAAAERM}
{\bkmkend AAAAAAAERM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse button event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v expose\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:expose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_ExposeEvent {\b Tao.Sdl.SDL_Event.expose}}
}\par
{\bkmkstart AAAAAAAERN}
{\bkmkend AAAAAAAERN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application window expose event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v jaxis\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:jaxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_JoyAxisEvent {\b Tao.Sdl.SDL_Event.jaxis}}
}\par
{\bkmkstart AAAAAAAERO}
{\bkmkend AAAAAAAERO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v jball\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:jball}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_JoyBallEvent {\b Tao.Sdl.SDL_Event.jball}}
}\par
{\bkmkstart AAAAAAAERP}
{\bkmkend AAAAAAAERP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick trackbell event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v jbutton\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:jbutton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_JoyButtonEvent {\b Tao.Sdl.SDL_Event.jbutton}}
}\par
{\bkmkstart AAAAAAAERQ}
{\bkmkend AAAAAAAERQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick button event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v jhat\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:jhat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_JoyHatEvent {\b Tao.Sdl.SDL_Event.jhat}}
}\par
{\bkmkstart AAAAAAAERR}
{\bkmkend AAAAAAAERR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick hat motion event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v key\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_KeyboardEvent {\b Tao.Sdl.SDL_Event.key}}
}\par
{\bkmkstart AAAAAAAERS}
{\bkmkend AAAAAAAERS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keyboard event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v motion\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:motion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_MouseMotionEvent {\b Tao.Sdl.SDL_Event.motion}}
}\par
{\bkmkstart AAAAAAAERT}
{\bkmkend AAAAAAAERT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse motion event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v quit\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:quit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_QuitEvent {\b Tao.Sdl.SDL_Event.quit}}
}\par
{\bkmkstart AAAAAAAERU}
{\bkmkend AAAAAAAERU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quit request event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v resize\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_ResizeEvent {\b Tao.Sdl.SDL_Event.resize}}
}\par
{\bkmkstart AAAAAAAERV}
{\bkmkend AAAAAAAERV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application window resize event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v syswm\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:syswm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_SysWMEvent} {\b Tao.Sdl.SDL_Event.syswm}}
}\par
{\bkmkstart AAAAAAAERW}
{\bkmkend AAAAAAAERW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined window manager event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SDL_Event.type}}
}\par
{\bkmkstart AAAAAAAERX}
{\bkmkend AAAAAAAERX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v user\:Tao::Sdl::SDL_Event}
{\xe \v Tao::Sdl::SDL_Event\:user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_UserEvent {\b Tao.Sdl.SDL_Event.user}}
}\par
{\bkmkstart AAAAAAAERY}
{\bkmkend AAAAAAAERY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_ExposeEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_ExposeEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ExposeEvent}
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Screen redraw event. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_VIDEOEXPOSE. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Screen redraw event. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_ExposeEvent} is a member of the {\b SDL_Event} union and is used whan an event of type SDL_VIDEOEXPOSE is reported. \par
A VIDEOEXPOSE event is triggered when the screen has been modified outside of the application, usually by the window manager and needs to be redrawn. \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type\par
                        \} SDL_ExposeEvent;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_SetEventFilter}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v type\:Tao::Sdl::Sdl::SDL_ExposeEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ExposeEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_ExposeEvent.type}}
}\par
{\bkmkstart AAAAAAAEPS}
{\bkmkend AAAAAAAEPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_VIDEOEXPOSE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_JoyAxisEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_JoyAxisEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyAxisEvent}
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis motion event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYAXISMOTION. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b which}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b axis}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b val}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Axis value (range: -32768 to 32767). }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis motion event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_JoyAxisEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_JOYAXISMOTION is reported. \par
A SDL_JOYAXISMOTION event occurs when ever a user moves an axis on the joystick. The field which is the index of the joystick that reported the event and axis is the index of the axis (for a more detailed explaination see the Joystick section). value is the current position of the axis. \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Struct in SDL_cdrom.h\par
            typedef struct\{\par
                        Uint8 type;\par
                        Uint8 which;\par
                        Uint8 axis;\par
                        Sint16 value;\par
                \} SDL_JoyAxisEvent;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_JoystickEventState}, {\b SDL_JoystickGetAxis}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v axis\:Tao::Sdl::Sdl::SDL_JoyAxisEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyAxisEvent\:axis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyAxisEvent.axis}}
}\par
{\bkmkstart AAAAAAAEPT}
{\bkmkend AAAAAAAEPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_JoyAxisEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyAxisEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyAxisEvent.type}}
}\par
{\bkmkstart AAAAAAAEPU}
{\bkmkend AAAAAAAEPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYAXISMOTION. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v val\:Tao::Sdl::Sdl::SDL_JoyAxisEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyAxisEvent\:val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_JoyAxisEvent.val}}
}\par
{\bkmkstart AAAAAAAEPV}
{\bkmkend AAAAAAAEPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Axis value (range: -32768 to 32767). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v which\:Tao::Sdl::Sdl::SDL_JoyAxisEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyAxisEvent\:which}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyAxisEvent.which}}
}\par
{\bkmkstart AAAAAAAEPW}
{\bkmkend AAAAAAAEPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_JoyBallEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_JoyBallEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyBallEvent}
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick trackball motion event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYBALLMOTION. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b which}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b ball}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick trackball index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b xrel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the X direction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b yrel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the Y direction. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick trackball motion event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_JoyBallEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_JOYBALLMOTION is reported. \par
A SDL_JOYBALLMOTION event occurs when a user moves a trackball on the joystick. The field which is the index of the joystick that reported the event and ball is the index of the trackball (for a more detailed explaination see the Joystick section). Trackballs only return relative motion, this is the change in position on the ball since it was last polled (last cycle of the event loop) and it is stored in xrel and yrel. \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        Uint8 which;\par
                        Uint8 ball;\par
                        Sint16 xrel, yrel;\par
                \} SDL_JoyBallEvent;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_JoystickEventState}, {\b SDL_JoystickGetBall}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ball\:Tao::Sdl::Sdl::SDL_JoyBallEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyBallEvent\:ball}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyBallEvent.ball}}
}\par
{\bkmkstart AAAAAAAEPX}
{\bkmkend AAAAAAAEPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick trackball index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_JoyBallEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyBallEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyBallEvent.type}}
}\par
{\bkmkstart AAAAAAAEPY}
{\bkmkend AAAAAAAEPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYBALLMOTION. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v which\:Tao::Sdl::Sdl::SDL_JoyBallEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyBallEvent\:which}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyBallEvent.which}}
}\par
{\bkmkstart AAAAAAAEPZ}
{\bkmkend AAAAAAAEPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xrel\:Tao::Sdl::Sdl::SDL_JoyBallEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyBallEvent\:xrel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_JoyBallEvent.xrel}}
}\par
{\bkmkstart AAAAAAAEQA}
{\bkmkend AAAAAAAEQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the X direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v yrel\:Tao::Sdl::Sdl::SDL_JoyBallEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyBallEvent\:yrel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_JoyBallEvent.yrel}}
}\par
{\bkmkstart AAAAAAAEQB}
{\bkmkend AAAAAAAEQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the Y direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_JoyButtonEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_JoyButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyButtonEvent}
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick button event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b which}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b button}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick button index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b state}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_PRESSED or SDL_RELEASED. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick button event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_JoyButtonEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP is reported. \par
A SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP event occurs when ever a user presses or releases a button on a joystick. The field which is the index of the joystick that reported the event and button is the index of the button (for a more detailed explaination see the Joystick section). state is the current state or the button which is either SDL_PRESSED or SDL_RELEASED. \par
Struct from SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        Uint8 which;\par
                        Uint8 button;\par
                        Uint8 state;\par
                \} SDL_JoyButtonEvent;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_JoystickEventState}, {\b SDL_JoystickGetButton}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v button\:Tao::Sdl::Sdl::SDL_JoyButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyButtonEvent\:button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyButtonEvent.button}}
}\par
{\bkmkstart AAAAAAAEQC}
{\bkmkend AAAAAAAEQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick button index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v state\:Tao::Sdl::Sdl::SDL_JoyButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyButtonEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyButtonEvent.state}}
}\par
{\bkmkstart AAAAAAAEQD}
{\bkmkend AAAAAAAEQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_PRESSED or SDL_RELEASED. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_JoyButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyButtonEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyButtonEvent.type}}
}\par
{\bkmkstart AAAAAAAEQE}
{\bkmkend AAAAAAAEQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v which\:Tao::Sdl::Sdl::SDL_JoyButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyButtonEvent\:which}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyButtonEvent.which}}
}\par
{\bkmkstart AAAAAAAEQF}
{\bkmkend AAAAAAAEQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_JoyHatEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_JoyHatEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyHatEvent}
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick hat position change event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYHATMOTION. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b which}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b hat}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick hat index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b val}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The hat position value: }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick hat position change event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_JoyHatEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_JOYHATMOTION is reported. \par
A SDL_JOYHATMOTION event occurs when ever a user moves a hat on the joystick. The field which is the index of the joystick that reported the event and hat is the index of the hat (for a more detailed exlaination see the Joystick section). value is the current position of the hat. It is a logically OR'd combination of the following values (whose meanings should be pretty obvious:) : \par
SDL_HAT_CENTERED \par
SDL_HAT_UP \par
SDL_HAT_RIGHT \par
SDL_HAT_DOWN \par
SDL_HAT_LEFT \par
The following defines are also provided: \par
SDL_HAT_RIGHTUP \par
SDL_HAT_RIGHTDOWN \par
SDL_HAT_LEFTUP \par
SDL_HAT_LEFTDOWN \par
Struct from SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        Uint8 which;\par
                        Uint8 hat;\par
                        Uint8 value;\par
                \} SDL_JoyHatEvent;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_JoystickEventState}, {\b SDL_JoystickGetHat}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v hat\:Tao::Sdl::Sdl::SDL_JoyHatEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyHatEvent\:hat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyHatEvent.hat}}
}\par
{\bkmkstart AAAAAAAEQG}
{\bkmkend AAAAAAAEQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick hat index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_JoyHatEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyHatEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyHatEvent.type}}
}\par
{\bkmkstart AAAAAAAEQH}
{\bkmkend AAAAAAAEQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JOYHATMOTION. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v val\:Tao::Sdl::Sdl::SDL_JoyHatEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyHatEvent\:val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyHatEvent.val}}
}\par
{\bkmkstart AAAAAAAEQI}
{\bkmkend AAAAAAAEQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The hat position value: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_HAT_LEFTUP   SDL_HAT_UP       SDL_HAT_RIGHTUP\par
                 SDL_HAT_LEFT     SDL_HAT_CENTERED SDL_HAT_RIGHT\par
                 SDL_HAT_LEFTDOWN SDL_HAT_DOWN     SDL_HAT_RIGHTDOWN\par
}
 Note that zero means the POV is centered. \par
}}
{\xe \v which\:Tao::Sdl::Sdl::SDL_JoyHatEvent}
{\xe \v Tao::Sdl::Sdl::SDL_JoyHatEvent\:which}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_JoyHatEvent.which}}
}\par
{\bkmkstart AAAAAAAEQJ}
{\bkmkend AAAAAAAEQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The joystick device index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_KeyboardEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_KeyboardEvent}
{\xe \v Tao::Sdl::Sdl::SDL_KeyboardEvent}
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keyboard event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_KEYDOWN or SDL_KEYUP. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b which}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The keyboard device index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b state}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_PRESSED or SDL_RELEASED. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_keysym} {\b keysym}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains key press information. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keyboard event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_KeyboardEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_KEYDOWN or SDL_KEYUP is reported. \par
The type and state actually report the same information, they just use different values to do it! A keyboard event occurs when a key is released (type=SDK_KEYUP or state=SDL_RELEASED) and when a key is pressed (type=SDL_KEYDOWN or state=SDL_PRESSED). The information on what key was pressed or released is in the {\b SDL_keysym} structure. \par
Note: Repeating SDL_KEYDOWN events will occur if key repeat is enabled (see {\b SDL_EnableKeyRepeat}). \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        Uint8 state;\par
                        SDL_keysym keysym;\par
                \} SDL_KeyboardEvent;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_keysym}, {\b SDL_EnableKeyRepeat}, {\b SDL_EnableUNICODE}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v keysym\:Tao::Sdl::Sdl::SDL_KeyboardEvent}
{\xe \v Tao::Sdl::Sdl::SDL_KeyboardEvent\:keysym}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_keysym} {\b Tao.Sdl.Sdl.SDL_KeyboardEvent.keysym}}
}\par
{\bkmkstart AAAAAAAEQK}
{\bkmkend AAAAAAAEQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains key press information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v state\:Tao::Sdl::Sdl::SDL_KeyboardEvent}
{\xe \v Tao::Sdl::Sdl::SDL_KeyboardEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_KeyboardEvent.state}}
}\par
{\bkmkstart AAAAAAAEQL}
{\bkmkend AAAAAAAEQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_PRESSED or SDL_RELEASED. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_KeyboardEvent}
{\xe \v Tao::Sdl::Sdl::SDL_KeyboardEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_KeyboardEvent.type}}
}\par
{\bkmkstart AAAAAAAEQM}
{\bkmkend AAAAAAAEQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_KEYDOWN or SDL_KEYUP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v which\:Tao::Sdl::Sdl::SDL_KeyboardEvent}
{\xe \v Tao::Sdl::Sdl::SDL_KeyboardEvent\:which}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_KeyboardEvent.which}}
}\par
{\bkmkstart AAAAAAAEQN}
{\bkmkend AAAAAAAEQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The keyboard device index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SDL_keysym Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SDL_keysym}
{\xe \v Tao::Sdl::SDL_keysym}
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_keysym} structure describes a key press or a key release. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b scancode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hardware specific scancode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sym}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL virtual keysym. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mod}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current key modifiers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b unicode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Translated character. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_keysym} structure describes a key press or a key release. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_keysym} structure describes a key press or a key release. The scancode field is hardware specific and should be ignored unless you know what your doing. The sym field is the SDLKey value of the key being pressed or released. The mod field describes the state of the keyboard modifiers at the time the key press or release occurred. So a value of KMOD_NUM | KMOD_CAPS | KMOD_LSHIFT would mean that Numlock, Capslock and the left shift key were all press (or enabled in the case of the lock keys). Finally, the unicode field stores the 16-bit unicode value of the key. \par
Note: It should be noted and understood that this field is only valid when the {\b SDL_keysym} is describing a key press, not a key release. Unicode values only make sense on a key press because the unicode value describes an international character and only key presses produce characters. More information on Unicode can be found at www.unicode.org \par
Note: Unicode translation must be enabled using the {\b SDL_EnableUNICODE} function.  \par
Struct in SDL_keyboard.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                 typedef struct\{\par
                        Uint8 scancode;\par
                        SDLKey sym;\par
                        SDLMod mod;\par
                        Uint16 unicode;\par
                \} SDL_keysym;\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mod\:Tao::Sdl::SDL_keysym}
{\xe \v Tao::Sdl::SDL_keysym\:mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SDL_keysym.mod}}
}\par
{\bkmkstart AAAAAAAERZ}
{\bkmkend AAAAAAAERZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current key modifiers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v scancode\:Tao::Sdl::SDL_keysym}
{\xe \v Tao::Sdl::SDL_keysym\:scancode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SDL_keysym.scancode}}
}\par
{\bkmkstart AAAAAAAESA}
{\bkmkend AAAAAAAESA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hardware specific scancode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The scancode is hardware dependent, and should not be used by general applications. If no hardware scancode is available, it will be 0. \par
}}
{\xe \v sym\:Tao::Sdl::SDL_keysym}
{\xe \v Tao::Sdl::SDL_keysym\:sym}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SDL_keysym.sym}}
}\par
{\bkmkstart AAAAAAAESB}
{\bkmkend AAAAAAAESB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL virtual keysym. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v unicode\:Tao::Sdl::SDL_keysym}
{\xe \v Tao::Sdl::SDL_keysym\:unicode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.SDL_keysym.unicode}}
}\par
{\bkmkstart AAAAAAAESC}
{\bkmkend AAAAAAAESC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Translated character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 'unicode' translated character is only available when character translation is enabled by the {\b SDL_EnableUNICODE()} API. If non-zero, this is a UNICODE character corresponding to the keypress. If the high 9 bits of the character are 0, then this maps to the equivalent ASCII character: \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                         char ch;\par
                if ( (keysym.unicode and 0xFF80) == 0 ) \{\par
                        ch = keysym.unicode and 0x7F;\par
                \} else \{\par
                        An international character..\par
                \}\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_MouseButtonEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse button event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_MOUSEBUTTONDOWN or SDL_MOUSEBUTTONUP. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b which}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mouse device index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b button}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mouse button index (SDL_BUTTON_LEFT, SDL_BUTTON_MIDDLE, SDL_BUTTON_RIGHT). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b state}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_PRESSED or SDL_RELEASED. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b x}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The X coordinate of the mouse at press/release time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b y}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Y coordinate of the mouse at press/release time. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse button event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_MouseButtonEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_MOUSEBUTTONDOWN or SDL_MOUSEBUTTONUP is reported. \par
When a mouse button press or release is detected then number of the button pressed (from 1 to 255, with 1 usually being the left button and 2 the right) is placed into button, the position of the mouse when this event occured is stored in the x and the y fields. Like {\b SDL_KeyboardEvent}, information on whether the event was a press or a release event is stored in both the type and state fields, but this should be obvious.  \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        Uint8 button;\par
                        Uint8 state;\par
                        Uint16 x, y;\par
                \} SDL_MouseButtonEvent;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_MouseMotionEvent}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v button\:Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseButtonEvent\:button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent.button}}
}\par
{\bkmkstart AAAAAAAEQO}
{\bkmkend AAAAAAAEQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mouse button index (SDL_BUTTON_LEFT, SDL_BUTTON_MIDDLE, SDL_BUTTON_RIGHT). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v state\:Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseButtonEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent.state}}
}\par
{\bkmkstart AAAAAAAEQP}
{\bkmkend AAAAAAAEQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_PRESSED or SDL_RELEASED. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseButtonEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent.type}}
}\par
{\bkmkstart AAAAAAAEQQ}
{\bkmkend AAAAAAAEQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_MOUSEBUTTONDOWN or SDL_MOUSEBUTTONUP. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v which\:Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseButtonEvent\:which}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent.which}}
}\par
{\bkmkstart AAAAAAAEQR}
{\bkmkend AAAAAAAEQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mouse device index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x\:Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseButtonEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent.x}}
}\par
{\bkmkstart AAAAAAAEQS}
{\bkmkend AAAAAAAEQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The X coordinate of the mouse at press/release time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:Tao::Sdl::Sdl::SDL_MouseButtonEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseButtonEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent.y}}
}\par
{\bkmkstart AAAAAAAEQT}
{\bkmkend AAAAAAAEQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Y coordinate of the mouse at press/release time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_MouseMotionEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse motion event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_MOUSEMOTION. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b which}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mouse device index. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b state}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current button state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b x}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The X coordinate of the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b y}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Y coordinate of the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b xrel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the X direction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b yrel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the Y direction. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse motion event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_MouseMotionEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_MOUSEMOTION is reported. \par
Simply put, a SDL_MOUSEMOTION type event occurs when a user moves the mouse within the application window or when {\b SDL_WarpMouse(short, short)} is called. Both the absolute (x and y) and relative (xrel and yrel ) coordinates are reported along with the current button states (state). The button state can be interpreted using the SDL_BUTTON macro (see {\b SDL_GetMouseState}). \par
If the cursor is hidden ({\b SDL_ShowCursor}(0)) and the input is grabbed ({\b SDL_WM_GrabInput}(SDL_GRAB_ON)), then the mouse will give relative motion events even when the cursor reaches the edge fo the screen. This is currently only implemented on Windows and Linux/Unix-a-likes. \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        Uint8 which;\par
                        Uint8 state;\par
                        Uint16 x, y;\par
                        Sint16 xrel, yrel;\par
                \} SDL_MouseMotionEvent;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_MouseButtonEvent}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v state\:Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent.state}}
}\par
{\bkmkstart AAAAAAAEQU}
{\bkmkend AAAAAAAEQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current button state. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent.type}}
}\par
{\bkmkstart AAAAAAAEQV}
{\bkmkend AAAAAAAEQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_MOUSEMOTION. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v which\:Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent\:which}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent.which}}
}\par
{\bkmkstart AAAAAAAEQW}
{\bkmkend AAAAAAAEQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mouse device index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x\:Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent.x}}
}\par
{\bkmkstart AAAAAAAEQX}
{\bkmkend AAAAAAAEQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The X coordinate of the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xrel\:Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent\:xrel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent.xrel}}
}\par
{\bkmkstart AAAAAAAEQY}
{\bkmkend AAAAAAAEQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the X direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent.y}}
}\par
{\bkmkstart AAAAAAAEQZ}
{\bkmkend AAAAAAAEQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Y coordinate of the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v yrel\:Tao::Sdl::Sdl::SDL_MouseMotionEvent}
{\xe \v Tao::Sdl::Sdl::SDL_MouseMotionEvent\:yrel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent.yrel}}
}\par
{\bkmkstart AAAAAAAERA}
{\bkmkend AAAAAAAERA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The relative motion in the Y direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_Overlay Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_Overlay}
{\xe \v SDL_Overlay}
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The YUV hardware video overlay. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b format}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overlay format (see below). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b w}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of overlay. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b h}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of overlay. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b planes}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of planes in the overlay. Usually either 1 or 3. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pitches}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array of pitches, one for each plane. Pitch is the length of a row in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pixels}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array of pointers to the data of each plane. The overlay should be locked before these pointers are used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b hwfuncs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hardware-specific surface info. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b hwdata}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b field1}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hw_overlay}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be set to 1 if the overlay is hardware accelerated. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The YUV hardware video overlay. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A {\b SDL_Overlay} is similar to a {\b SDL_Surface} except it stores a YUV overlay. All the fields are read only, except for pixels which should be locked before use. The format field stores the format of the overlay which is one of the following: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_YV12_OVERLAY  0x32315659  /* Planar mode: Y + V + U */\par
            SDL_IYUV_OVERLAY  0x56555949  /* Planar mode: Y + U + V */\par
            SDL_YUY2_OVERLAY  0x32595559  /* Packed mode: Y0+U0+Y1+V0 */\par
            SDL_UYVY_OVERLAY  0x59565955  /* Packed mode: U0+Y0+V0+Y1 */\par
            SDL_YVYU_OVERLAY  0x55595659  /* Packed mode: Y0+V0+Y1+U0 */\par
}
\par
More information on YUV formats can be found at {\f2 http://www.webartz.com/fourcc/indexyuv.htm.}\par
{\b SDL_CreateYUVOverlay(int, int, int, IntPtr)} {\b SDL_LockYUVOverlay} {\b SDL_UnlockYUVOverlay} {\b SDL_FreeYUVOverlay} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v field1\:SDL_Overlay}
{\xe \v SDL_Overlay\:field1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Overlay.field1}}
}\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v format\:SDL_Overlay}
{\xe \v SDL_Overlay\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Overlay.format}}
}\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overlay format (see below). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v h\:SDL_Overlay}
{\xe \v SDL_Overlay\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Overlay.h}}
}\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of overlay. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hwdata\:SDL_Overlay}
{\xe \v SDL_Overlay\:hwdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Overlay.hwdata}}
}\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hwfuncs\:SDL_Overlay}
{\xe \v SDL_Overlay\:hwfuncs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Overlay.hwfuncs}}
}\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hardware-specific surface info. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pitches\:SDL_Overlay}
{\xe \v SDL_Overlay\:pitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Overlay.pitches}}
}\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array of pitches, one for each plane. Pitch is the length of a row in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pixels\:SDL_Overlay}
{\xe \v SDL_Overlay\:pixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Overlay.pixels}}
}\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array of pointers to the data of each plane. The overlay should be locked before these pointers are used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v planes\:SDL_Overlay}
{\xe \v SDL_Overlay\:planes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Overlay.planes}}
}\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of planes in the overlay. Usually either 1 or 3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v w\:SDL_Overlay}
{\xe \v SDL_Overlay\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Overlay.w}}
}\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of overlay. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v hw_overlay\:SDL_Overlay}
{\xe \v SDL_Overlay\:hw_overlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_Overlay.hw_overlay{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will be set to 1 if the overlay is hardware accelerated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_Palette Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_Palette}
{\xe \v SDL_Palette}
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Color palette for 8-bit pixel formats. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ncolors}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of colors used in this palette. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Color}[] {\b colors}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of {\b SDL_Color} structures that make up the palette. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Color palette for 8-bit pixel formats. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Each pixel in an 8-bit surface is an index into the colors field of the {\b SDL_Palette} structure store in {\b SDL_PixelFormat}. A {\b SDL_Palette} should never need to be created manually. It is automatically created when SDL allocates a {\b SDL_PixelFormat} for a surface. The colors values of a {\b SDL_Surface} palette can be set with the {\b SDL_SetColors}.\par
{\b SDL_Color} {\b SDL_Surface} {\b SDL_SetColors} {\b SDL_SetPalette} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v colors\:SDL_Palette}
{\xe \v SDL_Palette\:colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_Color} [] {\b SDL_Palette.colors}}
}\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of {\b SDL_Color} structures that make up the palette. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ncolors\:SDL_Palette}
{\xe \v SDL_Palette\:ncolors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Palette.ncolors}}
}\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of colors used in this palette. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_PixelFormat Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_PixelFormat}
{\xe \v SDL_PixelFormat}
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_PixelFormat} (IntPtr {\b palette}, byte {\b BitsPerPixel}, byte {\b BytesPerPixel}, byte {\b Rloss}, byte {\b Gloss}, byte {\b Bloss}, byte {\b Aloss}, byte {\b Rshift}, byte {\b Gshift}, byte {\b Bshift}, byte {\b Ashift}, int {\b Rmask}, int {\b Gmask}, int {\b Bmask}, int {\b Amask}, int {\b colorkey}, byte {\b alpha})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b palette}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the palette, or NULL if the BitsPerPixel>8 Pointer to {\b SDL_Palette} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b BitsPerPixel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits used to represent each pixel in a surface. Usually 8, 16, 24 or 32. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b BytesPerPixel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bytes used to represent each pixel in a surface. Usually one to four. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Rloss}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Gloss}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Bloss}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Aloss}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Rshift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Gshift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Bshift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b Ashift}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Rmask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Gmask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Bmask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Amask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b colorkey}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel value of transparent pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b alpha}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overall surface alpha value. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SDL_PixelFormat\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:SDL_PixelFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_PixelFormat.SDL_PixelFormat (IntPtr {\i palette}, byte {\i BitsPerPixel}, byte {\i BytesPerPixel}, byte {\i Rloss}, byte {\i Gloss}, byte {\i Bloss}, byte {\i Aloss}, byte {\i Rshift}, byte {\i Gshift}, byte {\i Bshift}, byte {\i Ashift}, int {\i Rmask}, int {\i Gmask}, int {\i Bmask}, int {\i Amask}, int {\i colorkey}, byte {\i alpha})}
}\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i palette} \par
{\i BitsPerPixel} \par
{\i BytesPerPixel} \par
{\i Rloss} \par
{\i Gloss} \par
{\i Bloss} \par
{\i Aloss} \par
{\i Rshift} \par
{\i Gshift} \par
{\i Bshift} \par
{\i Ashift} \par
{\i Rmask} \par
{\i Gmask} \par
{\i Bmask} \par
{\i Amask} \par
{\i colorkey} \par
{\i alpha} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Aloss\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Aloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Aloss}}
}\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v alpha\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:alpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.alpha}}
}\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overall surface alpha value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Amask\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Amask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_PixelFormat.Amask}}
}\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Ashift\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Ashift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Ashift}}
}\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v BitsPerPixel\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:BitsPerPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.BitsPerPixel}}
}\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits used to represent each pixel in a surface. Usually 8, 16, 24 or 32. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Bloss\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Bloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Bloss}}
}\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Bmask\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Bmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_PixelFormat.Bmask}}
}\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Bshift\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Bshift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Bshift}}
}\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v BytesPerPixel\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:BytesPerPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.BytesPerPixel}}
}\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bytes used to represent each pixel in a surface. Usually one to four. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v colorkey\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:colorkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_PixelFormat.colorkey}}
}\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel value of transparent pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Gloss\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Gloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Gloss}}
}\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Gmask\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Gmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_PixelFormat.Gmask}}
}\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Gshift\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Gshift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Gshift}}
}\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v palette\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:palette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_PixelFormat.palette}}
}\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the palette, or NULL if the BitsPerPixel>8 Pointer to {\b SDL_Palette} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Rloss\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Rloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Rloss}}
}\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Precision loss of each color component (2[RGBA]loss). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Rmask\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Rmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_PixelFormat.Rmask}}
}\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary mask used to retrieve individual color values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Rshift\:SDL_PixelFormat}
{\xe \v SDL_PixelFormat\:Rshift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_PixelFormat.Rshift}}
}\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binary left shift of each color component in the pixel value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_QuitEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_QuitEvent}
{\xe \v Tao::Sdl::Sdl::SDL_QuitEvent}
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quit requested event. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_QUIT. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quit requested event. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_QuitEvent} is a member of the {\b SDL_Event} union and is used whan an event of type SDL_QUIT is reported. \par
As can be seen, the {\b SDL_QuitEvent} structure serves no useful purpose. The event itself, on the other hand, is very important. If you filter out or ignore a quit event then it is impossible for the user to close the window. On the other hand, if you do accept a quit event then the application window will be closed, and screen updates will still report success event though the application will no longer be visible. \par
Note: The macro SDL_QuitRequested will return non-zero if a quit event is pending \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type\par
                        \} SDL_QuitEvent;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_SetEventFilter}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v type\:Tao::Sdl::Sdl::SDL_QuitEvent}
{\xe \v Tao::Sdl::Sdl::SDL_QuitEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_QuitEvent.type}}
}\par
{\bkmkstart AAAAAAAERB}
{\bkmkend AAAAAAAERB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_QUIT. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_Rect Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_Rect}
{\xe \v SDL_Rect}
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a rectangular area. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Rect} (short {\b x}, short {\b y}, short {\b w}, short {\b h})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b x}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
x position of the upper-left corner of the rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b y}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
y position of the upper-left corner of the rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b w}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the rectangle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b h}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height of the rectangle. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a rectangular area. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A {\b SDL_Rect} defines a rectangular area of pixels. It is used by {\b SDL_BlitSurface} to define blitting regions and by several other video functions.\par
{\b SDL_BlitSurface} SDL_UpdateRect(System.IntPtr, int, int, int, int) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SDL_Rect\:SDL_Rect}
{\xe \v SDL_Rect\:SDL_Rect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_Rect.SDL_Rect (short {\i x}, short {\i y}, short {\i w}, short {\i h})}
}\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
{\i w} \par
{\i h} \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:SDL_Rect}
{\xe \v SDL_Rect\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string SDL_Rect.ToString ()}
}\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v h\:SDL_Rect}
{\xe \v SDL_Rect\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_Rect.h}}
}\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height of the rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v w\:SDL_Rect}
{\xe \v SDL_Rect\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_Rect.w}}
}\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v x\:SDL_Rect}
{\xe \v SDL_Rect\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_Rect.x}}
}\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
x position of the upper-left corner of the rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v y\:SDL_Rect}
{\xe \v SDL_Rect\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_Rect.y}}
}\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
y position of the upper-left corner of the rectangle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_ResizeEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_ResizeEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ResizeEvent}
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window resized event. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_VIDEORESIZE. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b w}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
New width of the window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b h}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
New height of the window. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window resized event. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_ResizeEvent} is a member of the {\b SDL_Event} union and is used when an event of type SDL_VIDEORESIZE is reported. \par
When SDL_RESIZABLE is passed as a flag to {\b SDL_SetVideoMode(int, int, int, int)} the user is allowed to resize the applications window. When the window is resized an SDL_VIDEORESIZE is report, with the new window width and height values stored in w and h, respectively. When an SDL_VIDEORESIZE is recieved the window should be resized to the new dimensions using {\b SDL_SetVideoMode(int, int, int, int)}. \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        int w, h;\par
                \} SDL_ResizeEvent;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_SetVideoMode(int, int, int, int)}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v h\:Tao::Sdl::Sdl::SDL_ResizeEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ResizeEvent\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_ResizeEvent.h}}
}\par
{\bkmkstart AAAAAAAERC}
{\bkmkend AAAAAAAERC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
New height of the window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_ResizeEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ResizeEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_ResizeEvent.type}}
}\par
{\bkmkstart AAAAAAAERD}
{\bkmkend AAAAAAAERD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_VIDEORESIZE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v w\:Tao::Sdl::Sdl::SDL_ResizeEvent}
{\xe \v Tao::Sdl::Sdl::SDL_ResizeEvent\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_ResizeEvent.w}}
}\par
{\bkmkstart AAAAAAAERE}
{\bkmkend AAAAAAAERE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
New width of the window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_Surface Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_Surface}
{\xe \v SDL_Surface}
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Graphical Surface Structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surface flags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b format}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel format Pointer to {\b SDL_PixelFormat}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b w}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of the surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b h}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of the surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b pitch}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of a surface scanline in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pixels}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the actual pixel data Void pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b hwdata}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hardware-specific surface info. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Rect} {\b clip_rect}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
surface clip rectangle }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b unused1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b locked}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allow recursive locks. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b map}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
info for fast blit mapping to other surfaces }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b format_version}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
format version, bumped at every change to invalidate blit maps }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b refcount}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reference count -- used when freeing surface. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Graphical Surface Structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure should be treated as read-only, except for 'pixels', which, if not NULL, contains the raw pixel data for the surface. SDL_Surface's represent areas of "graphical" memory, memory that can be drawn to. The video framebuffer is returned as a {\b SDL_Surface} by SDL_SetVideoMode and SDL_GetVideoSurface. Most of the fields should be pretty obvious. w and h are the width and height of the surface in pixels. pixels is a pointer to the actual pixel data, the surface should be locked before accessing this field. The clip_rect field is the clipping rectangle as set by SDL_SetClipRect.\par
The following are supported in the flags field. code> SDL_SWSURFACE Surface is stored in system memory SDL_HWSURFACE Surface is stored in video memory SDL_ASYNCBLIT Surface uses asynchronous blits if possible SDL_ANYFORMAT Allows any pixel-format (Display surface) SDL_HWPALETTE Surface has exclusive palette SDL_DOUBLEBUF Surface is double buffered (Display surface) SDL_FULLSCREEN Surface is full screen (Display Surface) SDL_OPENGL Surface has an OpenGL context (Display Surface) SDL_OPENGLBLIT Surface supports OpenGL blitting (Display Surface) SDL_RESIZABLE Surface is resizable (Display Surface) SDL_HWACCEL Surface blit uses hardware acceleration SDL_SRCCOLORKEY Surface use colorkey blitting SDL_RLEACCEL Colorkey blitting is accelerated with RLE SDL_SRCALPHA Surface blit uses alpha blending SDL_PREALLOC Surface uses preallocated memory \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v clip_rect\:SDL_Surface}
{\xe \v SDL_Surface\:clip_rect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_Rect} {\b SDL_Surface.clip_rect}}
}\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
surface clip rectangle }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:SDL_Surface}
{\xe \v SDL_Surface\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.flags}}
}\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surface flags. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v format\:SDL_Surface}
{\xe \v SDL_Surface\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Surface.format}}
}\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel format Pointer to {\b SDL_PixelFormat}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v format_version\:SDL_Surface}
{\xe \v SDL_Surface\:format_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.format_version}}
}\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
format version, bumped at every change to invalidate blit maps }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v h\:SDL_Surface}
{\xe \v SDL_Surface\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.h}}
}\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of the surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hwdata\:SDL_Surface}
{\xe \v SDL_Surface\:hwdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Surface.hwdata}}
}\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hardware-specific surface info. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v locked\:SDL_Surface}
{\xe \v SDL_Surface\:locked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.locked}}
}\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allow recursive locks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v map\:SDL_Surface}
{\xe \v SDL_Surface\:map}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Surface.map}}
}\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
info for fast blit mapping to other surfaces }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:SDL_Surface}
{\xe \v SDL_Surface\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.offset}}
}\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pitch\:SDL_Surface}
{\xe \v SDL_Surface\:pitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_Surface.pitch}}
}\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of a surface scanline in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pixels\:SDL_Surface}
{\xe \v SDL_Surface\:pixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_Surface.pixels}}
}\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the actual pixel data Void pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v refcount\:SDL_Surface}
{\xe \v SDL_Surface\:refcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.refcount}}
}\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reference count -- used when freeing surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v unused1\:SDL_Surface}
{\xe \v SDL_Surface\:unused1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.unused1}}
}\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v w\:SDL_Surface}
{\xe \v SDL_Surface\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_Surface.w}}
}\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of the surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SDL_SysWMEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SDL_SysWMEvent}
{\xe \v Tao::Sdl::SDL_SysWMEvent}
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b msg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IntPtr to {\b SDL_SysWMmsg}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v msg\:Tao::Sdl::SDL_SysWMEvent}
{\xe \v Tao::Sdl::SDL_SysWMEvent\:msg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.SDL_SysWMEvent.msg}}
}\par
{\bkmkstart AAAAAAAERJ}
{\bkmkend AAAAAAAERJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IntPtr to {\b SDL_SysWMmsg}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::SDL_SysWMEvent}
{\xe \v Tao::Sdl::SDL_SysWMEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SDL_SysWMEvent.type}}
}\par
{\bkmkstart AAAAAAAERK}
{\bkmkend AAAAAAAERK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMinfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMinfo}
{\xe \v SDL_SysWMinfo}
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom window manager information structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_version} {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom window manager information structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMinfo \{\par
                SDL_version version;\par
                int data;\par
            \};          \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:SDL_SysWMinfo}
{\xe \v SDL_SysWMinfo\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMinfo.data}}
}\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMinfo}
{\xe \v SDL_SysWMinfo\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_version} {\b SDL_SysWMinfo.version}}
}\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMinfo_RiscOS Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMinfo_RiscOS}
{\xe \v SDL_SysWMinfo_RiscOS}
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RISCOS custom window manager information structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_version} {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b wimpVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wimp version running under. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b taskHandle}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RISCOS task handle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b window}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RISCOS custom window manager information structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMinfo \{\par
                SDL_version version;\par
                int wimpVersion;\par
            int taskHandle;\par
            int window;\par
            \};          \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v taskHandle\:SDL_SysWMinfo_RiscOS}
{\xe \v SDL_SysWMinfo_RiscOS\:taskHandle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMinfo_RiscOS.taskHandle}}
}\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RISCOS task handle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMinfo_RiscOS}
{\xe \v SDL_SysWMinfo_RiscOS\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_version} {\b SDL_SysWMinfo_RiscOS.version}}
}\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wimpVersion\:SDL_SysWMinfo_RiscOS}
{\xe \v SDL_SysWMinfo_RiscOS\:wimpVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMinfo_RiscOS.wimpVersion}}
}\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wimp version running under. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v window\:SDL_SysWMinfo_RiscOS}
{\xe \v SDL_SysWMinfo_RiscOS\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMinfo_RiscOS.window}}
}\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMinfo_Unix Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMinfo_Unix}
{\xe \v SDL_SysWMinfo_Unix}
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom window manager information structure. TODO. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_version} {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subsystem}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom window manager information structure. TODO. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When this structure is returned, it holds information about which low level system it is using, and will be one of SDL_SYSWM_TYPE. \par
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMinfo \{\par
                        SDL_version version;\par
                        SDL_SYSWM_TYPE subsystem;\par
                        union \par
                        \{\par
                        struct \par
                        \{\par
                                Display *display;       /* The X11 display */\par
                                Window window;          /* The X11 display window */\par
                                /* These locking functions should be called around\par
                                                   any X11 functions using the display variable.\par
                                                   They lock the event thread, so should not be\par
                                   called around event functions or from event filters.\par
                                 */\par
                                void (*lock_func)(void);\par
                                void (*unlock_func)(void);\par
\par
                                /* Introduced in SDL 1.0.2 */\par
                                Window fswindow;        /* The X11 fullscreen window */\par
                                Window wmwindow;        /* The X11 managed input window */\par
                        \} x11;\par
                 \} info;\par
            \} SDL_SysWMinfo;            \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v subsystem\:SDL_SysWMinfo_Unix}
{\xe \v SDL_SysWMinfo_Unix\:subsystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMinfo_Unix.subsystem}}
}\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMinfo_Unix}
{\xe \v SDL_SysWMinfo_Unix\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_version} {\b SDL_SysWMinfo_Unix.version}}
}\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMinfo_Windows Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMinfo_Windows}
{\xe \v SDL_SysWMinfo_Windows}
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom window manager information structure. TODO. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Sdl.SDL_version {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b window}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Win32 display window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hglrc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The OpenGL context, if any. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom window manager information structure. TODO. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMinfo \{\par
                SDL_version version;\par
                HWND window;\par
                HGLRC hglrc;\par
            \} SDL_SysWMinfo;            \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v hglrc\:SDL_SysWMinfo_Windows}
{\xe \v SDL_SysWMinfo_Windows\:hglrc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMinfo_Windows.hglrc}}
}\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The OpenGL context, if any. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMinfo_Windows}
{\xe \v SDL_SysWMinfo_Windows\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Sdl.SDL_version {\b SDL_SysWMinfo_Windows.version}}
}\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v window\:SDL_SysWMinfo_Windows}
{\xe \v SDL_SysWMinfo_Windows\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMinfo_Windows.window}}
}\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Win32 display window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMmsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMmsg}
{\xe \v SDL_SysWMmsg}
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_version} {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMmsg \{\par
                SDL_version version;\par
                int data;\par
            \};          \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:SDL_SysWMmsg}
{\xe \v SDL_SysWMmsg\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMmsg.data}}
}\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMmsg}
{\xe \v SDL_SysWMmsg\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_version} {\b SDL_SysWMmsg.version}}
}\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMmsg_RiscOS Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMmsg_RiscOS}
{\xe \v SDL_SysWMmsg_RiscOS}
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISC OS custom event structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_version} {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b eventCode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window for the message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b pollBlock}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window for the message. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISC OS custom event structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMmsg \{\par
                SDL_version version;\par
                int eventCode;\par
            int pollBlock[64];\par
            \};          \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v eventCode\:SDL_SysWMmsg_RiscOS}
{\xe \v SDL_SysWMmsg_RiscOS\:eventCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMmsg_RiscOS.eventCode}}
}\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window for the message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pollBlock\:SDL_SysWMmsg_RiscOS}
{\xe \v SDL_SysWMmsg_RiscOS\:pollBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int [] {\b SDL_SysWMmsg_RiscOS.pollBlock}}
}\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window for the message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMmsg_RiscOS}
{\xe \v SDL_SysWMmsg_RiscOS\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_version} {\b SDL_SysWMmsg_RiscOS.version}}
}\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMmsg_Unix Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMmsg_Unix}
{\xe \v SDL_SysWMmsg_Unix}
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom event structure. TODO. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_version} {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subsystem}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom event structure. TODO. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMmsg \{\par
                        SDL_version version;\par
                        SDL_SYSWM_TYPE subsystem;\par
                        union \par
                        \{\par
                        XEvent xevent;\par
                \} event;\par
            \};          \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v subsystem\:SDL_SysWMmsg_Unix}
{\xe \v SDL_SysWMmsg_Unix\:subsystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMmsg_Unix.subsystem}}
}\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMmsg_Unix}
{\xe \v SDL_SysWMmsg_Unix\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_version} {\b SDL_SysWMmsg_Unix.version}}
}\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_SysWMmsg_Windows Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_SysWMmsg_Windows}
{\xe \v SDL_SysWMmsg_Windows}
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom event structure. TODO. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_version} {\b version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hwnd}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window for the message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b msg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b wParam}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WORD message parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b lParam}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LONG message parameter. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom event structure. TODO. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in SDL_syswm.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             struct SDL_SysWMmsg \{\par
                SDL_version version;\par
                HWND hwnd;\par
                UINT msg;\par
                WPARAM wParam;\par
                LPARAM lParam;\par
            \};          \par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v hwnd\:SDL_SysWMmsg_Windows}
{\xe \v SDL_SysWMmsg_Windows\:hwnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMmsg_Windows.hwnd}}
}\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window for the message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v lParam\:SDL_SysWMmsg_Windows}
{\xe \v SDL_SysWMmsg_Windows\:lParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_SysWMmsg_Windows.lParam}}
}\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LONG message parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v msg\:SDL_SysWMmsg_Windows}
{\xe \v SDL_SysWMmsg_Windows\:msg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMmsg_Windows.msg}}
}\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v version\:SDL_SysWMmsg_Windows}
{\xe \v SDL_SysWMmsg_Windows\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_version} {\b SDL_SysWMmsg_Windows.version}}
}\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wParam\:SDL_SysWMmsg_Windows}
{\xe \v SDL_SysWMmsg_Windows\:wParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_SysWMmsg_Windows.wParam}}
}\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WORD message parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_TimerID Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_TimerID}
{\xe \v SDL_TimerID}
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Sdl.SDL_UserEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Sdl::SDL_UserEvent}
{\xe \v Tao::Sdl::Sdl::SDL_UserEvent}
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user-defined event type. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b type}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_USEREVENT through SDL_NUMEVENTS-1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b code}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined event code. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined data pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined data pointer. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user-defined event type. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_UserEvent} is in the user member of the structure {\b SDL_Event}. This event is unique, it is never created by SDL but only by the user. The event can be pushed onto the event queue using {\b SDL_PushEvent}. The contents of the structure members or completely up to the programmer, the only requirement is that type is a value from SDL_USEREVENT to SDL_NUMEVENTS-1 (inclusive). \par
Struct in SDL_events.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef struct\{\par
                        Uint8 type;\par
                        int code;\par
                        void *data1;\par
                        void *data2;\par
                \} SDL_UserEvent;\par
}
 \par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_Event event;\par
\par
                        event.type = SDL_USEREVENT;\par
                        event.user.code = my_event_code;\par
                        event.user.data1 = significant_data;\par
                        event.user.data2 = 0;\par
                        SDL_PushEvent(&amp;event);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Event}, {\b SDL_PushEvent}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v code\:Tao::Sdl::Sdl::SDL_UserEvent}
{\xe \v Tao::Sdl::Sdl::SDL_UserEvent\:code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Sdl.SDL_UserEvent.code}}
}\par
{\bkmkstart AAAAAAAERF}
{\bkmkend AAAAAAAERF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined event code. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data1\:Tao::Sdl::Sdl::SDL_UserEvent}
{\xe \v Tao::Sdl::Sdl::SDL_UserEvent\:data1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.Sdl.SDL_UserEvent.data1}}
}\par
{\bkmkstart AAAAAAAERG}
{\bkmkend AAAAAAAERG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined data pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data2\:Tao::Sdl::Sdl::SDL_UserEvent}
{\xe \v Tao::Sdl::Sdl::SDL_UserEvent\:data2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.Sdl.SDL_UserEvent.data2}}
}\par
{\bkmkstart AAAAAAAERH}
{\bkmkend AAAAAAAERH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined data pointer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:Tao::Sdl::Sdl::SDL_UserEvent}
{\xe \v Tao::Sdl::Sdl::SDL_UserEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Sdl.SDL_UserEvent.type}}
}\par
{\bkmkstart AAAAAAAERI}
{\bkmkend AAAAAAAERI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_USEREVENT through SDL_NUMEVENTS-1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_version Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_version}
{\xe \v SDL_version}
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SDL library. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b major}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Major version. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b minor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minor version. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b patch}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patch version. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SDL library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:SDL_version}
{\xe \v SDL_version\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string SDL_version.ToString ()}
}\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v major\:SDL_version}
{\xe \v SDL_version\:major}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_version.major}}
}\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Major version. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v minor\:SDL_version}
{\xe \v SDL_version\:minor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_version.minor}}
}\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minor version. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v patch\:SDL_version}
{\xe \v SDL_version\:patch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_version.patch}}
}\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patch version. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SDL_VideoInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v SDL_VideoInfo}
{\xe \v SDL_VideoInfo}
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video Target information. Useful for determining the video hardware capabilities. Not finished. The C struct uses a set of bit-fields that need to be marshalled. The vfmt IntPtr works and provided useful information. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b field1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b field2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b unused}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b video_mem}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total amount of video memory in Kilobytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b vfmt}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel format of the video device. Pointer to {\b SDL_PixelFormat}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current_w}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current video mode width. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current_h}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current video mode height. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hw_available}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is it possible to create hardware surfaces? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b wm_available}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is there a window manager available. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blit_hw}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are hardware to hardware blits accelerated? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blit_hw_CC}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are hardware to hardware colorkey blits accelerated? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blit_hw_A}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are hardware to hardware alpha blits accelerated? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blit_sw}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are software to hardware blits accelerated? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blit_sw_CC}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are software to hardware colorkey blits accelerated? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blit_sw_A}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are software to hardware alpha blits accelerated? }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blit_fill}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are color fills accelerated? }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video Target information. Useful for determining the video hardware capabilities. Not finished. The C struct uses a set of bit-fields that need to be marshalled. The vfmt IntPtr works and provided useful information. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This (read-only) structure is returned by {\b SDL_GetVideoInfo}. It contains information on either the 'best' available mode (if called before {\b SDL_SetVideoMode(int, int, int, int)}) or the current video mode.\par
{\b SDL_GetVideoInfo} {\b SDL_PixelFormat} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v current_h\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:current_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_VideoInfo.current_h}}
}\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current video mode height. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v current_w\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:current_w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_VideoInfo.current_w}}
}\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current video mode width. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v field1\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:field1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_VideoInfo.field1}}
}\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v field2\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:field2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b SDL_VideoInfo.field2}}
}\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v unused\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:unused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b SDL_VideoInfo.unused}}
}\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v vfmt\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:vfmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b SDL_VideoInfo.vfmt}}
}\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel format of the video device. Pointer to {\b SDL_PixelFormat}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v video_mem\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:video_mem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SDL_VideoInfo.video_mem}}
}\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total amount of video memory in Kilobytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v blit_fill\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:blit_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.blit_fill{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are color fills accelerated? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v blit_hw\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:blit_hw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.blit_hw{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are hardware to hardware blits accelerated? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v blit_hw_A\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:blit_hw_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.blit_hw_A{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are hardware to hardware alpha blits accelerated? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v blit_hw_CC\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:blit_hw_CC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.blit_hw_CC{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are hardware to hardware colorkey blits accelerated? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v blit_sw\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:blit_sw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.blit_sw{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are software to hardware blits accelerated? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v blit_sw_A\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:blit_sw_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.blit_sw_A{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are software to hardware alpha blits accelerated? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v blit_sw_CC\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:blit_sw_CC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.blit_sw_CC{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Are software to hardware colorkey blits accelerated? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hw_available\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:hw_available}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.hw_available{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is it possible to create hardware surfaces? }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v wm_available\:SDL_VideoInfo}
{\xe \v SDL_VideoInfo\:wm_available}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SDL_VideoInfo.wm_available{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is there a window manager available. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Sdl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlNet.SDLNet_GenericSocket Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlNet::SDLNet_GenericSocket}
{\xe \v Tao::Sdl::SdlNet::SDLNet_GenericSocket}
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A generic type for UDP and TCP sockets. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ready}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-zero when data is ready to be read, or a server socket has a connection attempt ready to be accepted. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A generic type for UDP and TCP sockets. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This data type is able to be used for both {\b UDPsocket} and {\b TCPsocket} types. After calling SDLNet_CheckSockets, if this socket is in {\b SDLNet_SocketSet} used, the ready will be set according to activity on the socket. This is the only real use for this type, as it doesn't help you know what type of socket it is. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct \{\par
                        int ready;\par
                    \} *SDLNet_GenericSocket;\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b TCPsocket}, {\b UDPsocket}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ready\:Tao::Sdl::SdlNet::SDLNet_GenericSocket}
{\xe \v Tao::Sdl::SdlNet::SDLNet_GenericSocket\:ready}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlNet.SDLNet_GenericSocket.ready}}
}\par
{\bkmkstart AAAAAAAESS}
{\bkmkend AAAAAAAESS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-zero when data is ready to be read, or a server socket has a connection attempt ready to be accepted. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlNet.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlNet.SDLNet_SocketSet Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlNet::SDLNet_SocketSet}
{\xe \v Tao::Sdl::SdlNet::SDLNet_SocketSet}
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket Set type (opaque). }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket Set type (opaque). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an opaque data type used for socket sets. This is a pointer, and so it could be NULL at times. NULL would indicate no socket set has been created. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct _SDLNet_SocketSet *SDLNet_SocketSet\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b TCPsocket}, {\b UDPsocket}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlNet.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.SetWindowAttributes Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::SetWindowAttributes}
{\xe \v Tao::Platform::X11::SetWindowAttributes}
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b API.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.SimpleOpenGlControl Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl}
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple OpenGL control allowing quick development of {\b Windows} Forms-based OpenGL applications. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimpleOpenGlControl} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. Creates contexts and sets properties. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestroyContexts} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Draw} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends an see cref="UserControl.Invalidate" command to this control, thus forcing a redraw to occur. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InitializeContexts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the OpenGL contexts. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MakeCurrent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SwapBuffers} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Dispose} (bool disposing)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disposes the control. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b OnPaint} (PaintEventArgs e)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Paints the control. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b OnPaintBackground} (PaintEventArgs e)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Paints the background. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LogScaleX}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of logical pixels or dots per inch (dpi) in X-direction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LogScaleY}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of logical pixels or dots per inch (dpi) in Y-direction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b AccumBits}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's accumulation buffer depth. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b ColorBits}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's color buffer depth. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b DepthBits}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's depth buffer (Z-buffer) depth. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b StencilBits}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's stencil buffer depth. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AutoCheckErrors}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic sending of a glGetError command after drawing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AutoFinish}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic sending of a glFinish command after drawing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AutoMakeCurrent}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic forcing of the rendering context to be current before drawing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AutoSwapBuffers}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic sending of a SwapBuffers command after drawing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override CreateParams {\b CreateParams}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrides the control's class style parameters. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple OpenGL control allowing quick development of {\b Windows} Forms-based OpenGL applications. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SimpleOpenGlControl\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:SimpleOpenGlControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tao.Platform.Windows.SimpleOpenGlControl.SimpleOpenGlControl ()}
}\par
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. Creates contexts and sets properties. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DestroyContexts\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:DestroyContexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.Platform.Windows.SimpleOpenGlControl.DestroyContexts ()}
}\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Dispose\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:Dispose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Tao.Platform.Windows.SimpleOpenGlControl.Dispose (bool {\i disposing}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disposes the control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i disposing} Was the disposed manually called?\par
}
}}
{\xe \v Draw\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:Draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.Platform.Windows.SimpleOpenGlControl.Draw ()}
}\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends an see cref="UserControl.Invalidate" command to this control, thus forcing a redraw to occur. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v InitializeContexts\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:InitializeContexts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.Platform.Windows.SimpleOpenGlControl.InitializeContexts ()}
}\par
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the OpenGL contexts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MakeCurrent\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:MakeCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.Platform.Windows.SimpleOpenGlControl.MakeCurrent ()}
}\par
{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v OnPaint\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:OnPaint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Tao.Platform.Windows.SimpleOpenGlControl.OnPaint (PaintEventArgs {\i e}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Paints the control. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i e} The paint event arguments.\par
}
}}
{\xe \v OnPaintBackground\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:OnPaintBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Tao.Platform.Windows.SimpleOpenGlControl.OnPaintBackground (PaintEventArgs {\i e}){\f2  [protected]}}
}\par
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Paints the background. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i e} \par
}
}}
{\xe \v SwapBuffers\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:SwapBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tao.Platform.Windows.SimpleOpenGlControl.SwapBuffers ()}
}\par
{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v AccumBits\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:AccumBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte Tao.Platform.Windows.SimpleOpenGlControl.AccumBits{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's accumulation buffer depth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v AutoCheckErrors\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:AutoCheckErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Tao.Platform.Windows.SimpleOpenGlControl.AutoCheckErrors{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic sending of a glGetError command after drawing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v AutoFinish\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:AutoFinish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Tao.Platform.Windows.SimpleOpenGlControl.AutoFinish{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic sending of a glFinish command after drawing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v AutoMakeCurrent\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:AutoMakeCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Tao.Platform.Windows.SimpleOpenGlControl.AutoMakeCurrent{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic forcing of the rendering context to be current before drawing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v AutoSwapBuffers\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:AutoSwapBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Tao.Platform.Windows.SimpleOpenGlControl.AutoSwapBuffers{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's automatic sending of a SwapBuffers command after drawing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ColorBits\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:ColorBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte Tao.Platform.Windows.SimpleOpenGlControl.ColorBits{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's color buffer depth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CreateParams\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:CreateParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override CreateParams Tao.Platform.Windows.SimpleOpenGlControl.CreateParams{\f2  [get, protected]}}
}\par
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrides the control's class style parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v DepthBits\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:DepthBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte Tao.Platform.Windows.SimpleOpenGlControl.DepthBits{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's depth buffer (Z-buffer) depth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v LogScaleX\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:LogScaleX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.Platform.Windows.SimpleOpenGlControl.LogScaleX{\f2  [get]}}
}\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of logical pixels or dots per inch (dpi) in X-direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v LogScaleY\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:LogScaleY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Tao.Platform.Windows.SimpleOpenGlControl.LogScaleY{\f2  [get]}}
}\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of logical pixels or dots per inch (dpi) in Y-direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v StencilBits\:Tao::Platform::Windows::SimpleOpenGlControl}
{\xe \v Tao::Platform::Windows::SimpleOpenGlControl\:StencilBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte Tao.Platform.Windows.SimpleOpenGlControl.StencilBits{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets and sets the OpenGL control's stencil buffer depth. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b SimpleOpenGlControl.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.Size_InternalRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::Size_InternalRec_}
{\xe \v Tao::FreeType::Size_InternalRec_}
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.SizeHints Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints}
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Rectangle}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal long {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width_inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height_inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b Rectangle} {\b min_aspect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b Rectangle} {\b max_aspect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b base_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b base_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b win_gravity}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v base_height\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:base_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.base_height}}
}\par
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v base_width\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:base_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.base_width}}
}\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v flags\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal long {\b Tao.Platform.X11.SizeHints.flags}}
}\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.height}}
}\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height_inc\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:height_inc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.height_inc}}
}\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_aspect\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:max_aspect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b Rectangle} {\b Tao.Platform.X11.SizeHints.max_aspect}}
}\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_height\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:max_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.max_height}}
}\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_width\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:max_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.max_width}}
}\par
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_aspect\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:min_aspect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b Rectangle} {\b Tao.Platform.X11.SizeHints.min_aspect}}
}\par
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_height\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:min_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.min_height}}
}\par
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_width\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:min_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.min_width}}
}\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.width}}
}\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width_inc\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:width_inc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.width_inc}}
}\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v win_gravity\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:win_gravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.win_gravity}}
}\par
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.x}}
}\par
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::SizeHints}
{\xe \v Tao::Platform::X11::SizeHints\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.SizeHints.y}}
}\par
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b API.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.Slot_InternalRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::Slot_InternalRec_}
{\xe \v Tao::FreeType::Slot_InternalRec_}
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Smpeg.SMPEG_Filter Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Smpeg::SMPEG_Filter}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Filter}
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The filter definition itself. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SMPEG_FilterCallback {\b callback}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SMPEG_FilterDestroy {\b destroy}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The filter definition itself. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in MPEGfilter.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct SMPEG_Filter \{\par
                                Uint32 flags;\par
                                void * data;\par
                                SMPEG_FilterCallback callback;\par
                                SMPEG_FilterDestroy destroy;\par
                        \}\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v callback\:Tao::Sdl::Smpeg::SMPEG_Filter}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Filter\:callback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SMPEG_FilterCallback {\b Tao.Sdl.Smpeg.SMPEG_Filter.callback}}
}\par
{\bkmkstart AAAAAAAESZ}
{\bkmkend AAAAAAAESZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data\:Tao::Sdl::Smpeg::SMPEG_Filter}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Filter\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object {\b Tao.Sdl.Smpeg.SMPEG_Filter.data}}
}\par
{\bkmkstart AAAAAAAETA}
{\bkmkend AAAAAAAETA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v destroy\:Tao::Sdl::Smpeg::SMPEG_Filter}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Filter\:destroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SMPEG_FilterDestroy {\b Tao.Sdl.Smpeg.SMPEG_Filter.destroy}}
}\par
{\bkmkstart AAAAAAAETB}
{\bkmkend AAAAAAAETB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:Tao::Sdl::Smpeg::SMPEG_Filter}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Filter\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Filter.flags}}
}\par
{\bkmkstart AAAAAAAETC}
{\bkmkend AAAAAAAETC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Smpeg.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Smpeg.SMPEG_FilterInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Smpeg::SMPEG_FilterInfo}
{\xe \v Tao::Sdl::Smpeg::SMPEG_FilterInfo}
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Filter info from SMPEG. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b yuv_mb_square_error}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b yuv_pixel_square_error}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Filter info from SMPEG. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct in MPEGfilter.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct SMPEG_FilterInfo \{\par
                                Uint16* yuv_mb_square_error;\par
                                Uint16* yuv_pixel_square_error;\par
                        \}\par
}
  \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v yuv_mb_square_error\:Tao::Sdl::Smpeg::SMPEG_FilterInfo}
{\xe \v Tao::Sdl::Smpeg::SMPEG_FilterInfo\:yuv_mb_square_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.Smpeg.SMPEG_FilterInfo.yuv_mb_square_error}}
}\par
{\bkmkstart AAAAAAAETD}
{\bkmkend AAAAAAAETD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v yuv_pixel_square_error\:Tao::Sdl::Smpeg::SMPEG_FilterInfo}
{\xe \v Tao::Sdl::Smpeg::SMPEG_FilterInfo\:yuv_pixel_square_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.Smpeg.SMPEG_FilterInfo.yuv_pixel_square_error}}
}\par
{\bkmkstart AAAAAAAETE}
{\bkmkend AAAAAAAETE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Smpeg.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Smpeg.SMPEG_Info Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info}
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to get information about the SMPEG object. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b has_audio}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b has_video}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of movie file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of movie file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b current_fps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b audio_string}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b audio_current_frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b total_size}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Movie file size in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b current_time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b total_time}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of movie file in seconds. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to get information about the SMPEG object. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct _SMPEG_Info \{\par
                                int has_audio;\par
                                int has_video;\par
                                int width;\par
                                int height;\par
                                int current_frame;\par
                                double current_fps;\par
                                char audio_string[80];\par
                                int  audio_current_frame;\par
                                Uint32 current_offset;\par
                                Uint32 total_size;\par
                                double current_time;\par
                                double total_time;\par
                        \} SMPEG_Info;\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v audio_current_frame\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:audio_current_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.audio_current_frame}}
}\par
{\bkmkstart AAAAAAAETF}
{\bkmkend AAAAAAAETF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v audio_string\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:audio_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Tao.Sdl.Smpeg.SMPEG_Info.audio_string}}
}\par
{\bkmkstart AAAAAAAETG}
{\bkmkend AAAAAAAETG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v current_fps\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:current_fps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b Tao.Sdl.Smpeg.SMPEG_Info.current_fps}}
}\par
{\bkmkstart AAAAAAAETH}
{\bkmkend AAAAAAAETH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v current_frame\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:current_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.current_frame}}
}\par
{\bkmkstart AAAAAAAETI}
{\bkmkend AAAAAAAETI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v current_offset\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:current_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.current_offset}}
}\par
{\bkmkstart AAAAAAAETJ}
{\bkmkend AAAAAAAETJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v current_time\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:current_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b Tao.Sdl.Smpeg.SMPEG_Info.current_time}}
}\par
{\bkmkstart AAAAAAAETK}
{\bkmkend AAAAAAAETK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v has_audio\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:has_audio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.has_audio}}
}\par
{\bkmkstart AAAAAAAETL}
{\bkmkend AAAAAAAETL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v has_video\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:has_video}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.has_video}}
}\par
{\bkmkstart AAAAAAAETM}
{\bkmkend AAAAAAAETM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v height\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.height}}
}\par
{\bkmkstart AAAAAAAETN}
{\bkmkend AAAAAAAETN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of movie file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v total_size\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:total_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.total_size}}
}\par
{\bkmkstart AAAAAAAETO}
{\bkmkend AAAAAAAETO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Movie file size in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v total_time\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:total_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b Tao.Sdl.Smpeg.SMPEG_Info.total_time}}
}\par
{\bkmkstart AAAAAAAETP}
{\bkmkend AAAAAAAETP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of movie file in seconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v width\:Tao::Sdl::Smpeg::SMPEG_Info}
{\xe \v Tao::Sdl::Smpeg::SMPEG_Info\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.Smpeg.SMPEG_Info.width}}
}\par
{\bkmkstart AAAAAAAETQ}
{\bkmkend AAAAAAAETQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of movie file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Smpeg.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.Smpeg.SMPEG_version Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::Smpeg::SMPEG_version}
{\xe \v Tao::Sdl::Smpeg::SMPEG_version}
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SMPEG library. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b major}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Major version. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b minor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minor version. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b patch}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patch version. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SMPEG library. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::Sdl::Smpeg::SMPEG_version}
{\xe \v Tao::Sdl::Smpeg::SMPEG_version\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.Sdl.Smpeg.SMPEG_version.ToString ()}
}\par
{\bkmkstart AAAAAAAETR}
{\bkmkend AAAAAAAETR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v major\:Tao::Sdl::Smpeg::SMPEG_version}
{\xe \v Tao::Sdl::Smpeg::SMPEG_version\:major}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Smpeg.SMPEG_version.major}}
}\par
{\bkmkstart AAAAAAAETS}
{\bkmkend AAAAAAAETS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Major version. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v minor\:Tao::Sdl::Smpeg::SMPEG_version}
{\xe \v Tao::Sdl::Smpeg::SMPEG_version\:minor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Smpeg.SMPEG_version.minor}}
}\par
{\bkmkstart AAAAAAAETT}
{\bkmkend AAAAAAAETT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minor version. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v patch\:Tao::Sdl::Smpeg::SMPEG_version}
{\xe \v Tao::Sdl::Smpeg::SMPEG_version\:patch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.Smpeg.SMPEG_version.patch}}
}\par
{\bkmkstart AAAAAAAETU}
{\bkmkend AAAAAAAETU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patch version. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b Smpeg.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.FreeType.SubGlyphRec_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::FreeType::SubGlyphRec_}
{\xe \v Tao::FreeType::SubGlyphRec_}
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.FreeType/{\b FreeType.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Kernel.SYSTEM_INFO Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b SYSTEM_INFO}}  structure contains information about the current computer system. This includes the architecture and type of the processor, the number of processors in the system, the page size, and other such information. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SYSTEM_INFO_UNION} {\b SystemInfoUnion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Union for the OemId, ProcessorArchitecture, and Reserved fields of the {\b SYSTEM_INFO} structure. See {\b SYSTEM_INFO_UNION}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b PageSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Page size and the granularity of page protection and commitment. This is the page size used by the {\b VirtualAlloc}  function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b MinimumApplicationAddress}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the lowest memory address accessible to applications and dynamic-link libraries (DLLs). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b MaximumApplicationAddress}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the highest memory address accessible to applications and DLLs. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ActiveProcessorMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask representing the set of processors configured into the system. Bit 0 is processor 0; bit 31 is processor 31. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NumberOfProcessors}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of processors in the system. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ProcessorType}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An obsolete member that is retained for compatibility with {\b Windows} NT 3.5 and earlier. Use the {\i SystemInfoUnion.ProcessorArchitecture} , {\i ProcessorLevel} , and {\i ProcessorRevision}  members to determine the type of processor. \par
{\b {\b Windows} Me/98/95:}  Specifies the type of processor in the system. This member is one of the following values: \par
WinNt.PROCESSOR_INTEL_386 \par
WinNt.PROCESSOR_INTEL_486 \par
WinNt.PROCESSOR_INTEL_PENTIUM }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b AllocationGranularity}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Granularity with which virtual memory is allocated. For example, a {\b VirtualAlloc}  request to allocate 1 byte will reserve an address space of {\i AllocationGranularity}  bytes. This value was hard coded as 64K in the past, but other hardware architectures may require different values. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ProcessorLevel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System's architecture-dependent processor level. It should be used only for display purposes. To determine the feature set of a processor, use the IsProcessorFeaturePresent function. \par
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_INTEL, {\i ProcessorLevel}  is defined by the CPU vendor. \par
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_IA64, {\i ProcessorLevel}  is set to 1. \par
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_MIPS, {\i ProcessorLevel}  is of the form 00xx, where xx is an 8-bit implementation number (bits 8-15 of the PRId register). The member can be the following value: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{0004}  \cell }{MIPS R4000  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_ALPHA, {\i ProcessorLevel}  is of the form xxxx, where xxxx is a 16-bit processor version number (the low-order 16 bits of a version number from the firmware). The member can be one of the following values: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{21064}  \cell }{Alpha 21064  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{21066}  \cell }{Alpha 21066  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{21164}  \cell }{Alpha 21164  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_PPC, {\i ProcessorLevel}  is of the form xxxx, where xxxx is a 16-bit processor version number (the high-order 16 bits of the Processor Version Register). The member can be one of the following values: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{1}  \cell }{PPC 601  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{3}  \cell }{PPC 603  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{4}  \cell }{PPC 604  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{6}  \cell }{PPC 603+  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{9}  \cell }{PPC 604+  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20}  \cell }{PPC 620  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
}{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ProcessorRevision}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Architecture-dependent processor revision. The following table shows how the revision value is assembled for each type of processor architecture: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Processor}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Intel 80386 or 80486}  \cell }{A value of the form xxyz. \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If xx is equal to 0xFF, y - 0xA is the model number, and z is the stepping identifier. For example, an Intel 80486-D0 system returns 0xFFD0. \par
If xx is not equal to 0xFF, xx + 'A' is the stepping letter and yz is the minor stepping. \par
{\b Intel Pentium, Cyrix, or NextGen 586}   \par
A value of the form xxyy, where xx is the model number and yy is the stepping. Display this value of 0x0201 as follows: \par
Model xx, Stepping yy. \par
{\b MIPS}   A value of the form 00xx, where xx is the 8-bit revision number of the processor (the low-order 8 bits of the PRId register).    {\b ALPHA}   \par
A value of the form xxyy, where xxyy is the low-order 16 bits of the processor revision number from the firmware. Display this value as follows: \par
Model A+xx, Pass yy. \par
{\b PPC}   \par
A value of the form xxyy, where xxyy is the low-order 16 bits of the processor version register. Display this value as follows: \par
xx.yy. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b SYSTEM_INFO}}  structure contains information about the current computer system. This includes the architecture and type of the processor, the number of processors in the system, the page size, and other such information. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid GetSystemInfo, {\b SYSTEM_INFO_UNION}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ActiveProcessorMask\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:ActiveProcessorMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.ActiveProcessorMask}}
}\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask representing the set of processors configured into the system. Bit 0 is processor 0; bit 31 is processor 31. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v AllocationGranularity\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:AllocationGranularity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.AllocationGranularity}}
}\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Granularity with which virtual memory is allocated. For example, a {\b VirtualAlloc}  request to allocate 1 byte will reserve an address space of {\i AllocationGranularity}  bytes. This value was hard coded as 64K in the past, but other hardware architectures may require different values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MaximumApplicationAddress\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:MaximumApplicationAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.MaximumApplicationAddress}}
}\par
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the highest memory address accessible to applications and DLLs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MinimumApplicationAddress\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:MinimumApplicationAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.MinimumApplicationAddress}}
}\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the lowest memory address accessible to applications and dynamic-link libraries (DLLs). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v NumberOfProcessors\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:NumberOfProcessors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.NumberOfProcessors}}
}\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of processors in the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v PageSize\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:PageSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.PageSize}}
}\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Page size and the granularity of page protection and commitment. This is the page size used by the {\b VirtualAlloc}  function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ProcessorLevel\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:ProcessorLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.ProcessorLevel}}
}\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System's architecture-dependent processor level. It should be used only for display purposes. To determine the feature set of a processor, use the IsProcessorFeaturePresent function. \par
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_INTEL, {\i ProcessorLevel}  is defined by the CPU vendor. \par
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_IA64, {\i ProcessorLevel}  is set to 1. \par
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_MIPS, {\i ProcessorLevel}  is of the form 00xx, where xx is an 8-bit implementation number (bits 8-15 of the PRId register). The member can be the following value: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{0004}  \cell }{MIPS R4000  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_ALPHA, {\i ProcessorLevel}  is of the form xxxx, where xxxx is a 16-bit processor version number (the low-order 16 bits of a version number from the firmware). The member can be one of the following values: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{21064}  \cell }{Alpha 21064  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{21066}  \cell }{Alpha 21066  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{21164}  \cell }{Alpha 21164  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If {\i SystemInfoUnion.ProcessorArchitecture}  is WinNt.PROCESSOR_ARCHITECTURE_PPC, {\i ProcessorLevel}  is of the form xxxx, where xxxx is a 16-bit processor version number (the high-order 16 bits of the Processor Version Register). The member can be one of the following values: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Value}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{1}  \cell }{PPC 601  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{3}  \cell }{PPC 603  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{4}  \cell }{PPC 604  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{6}  \cell }{PPC 603+  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{9}  \cell }{PPC 604+  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{20}  \cell }{PPC 620  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ProcessorRevision\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:ProcessorRevision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.ProcessorRevision}}
}\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Architecture-dependent processor revision. The following table shows how the revision value is assembled for each type of processor architecture: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Processor}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Intel 80386 or 80486}  \cell }{A value of the form xxyz. \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If xx is equal to 0xFF, y - 0xA is the model number, and z is the stepping identifier. For example, an Intel 80486-D0 system returns 0xFFD0. \par
If xx is not equal to 0xFF, xx + 'A' is the stepping letter and yz is the minor stepping. \par
{\b Intel Pentium, Cyrix, or NextGen 586}   \par
A value of the form xxyy, where xx is the model number and yy is the stepping. Display this value of 0x0201 as follows: \par
Model xx, Stepping yy. \par
{\b MIPS}   A value of the form 00xx, where xx is the 8-bit revision number of the processor (the low-order 8 bits of the PRId register).    {\b ALPHA}   \par
A value of the form xxyy, where xxyy is the low-order 16 bits of the processor revision number from the firmware. Display this value as follows: \par
Model A+xx, Pass yy. \par
{\b PPC}   \par
A value of the form xxyy, where xxyy is the low-order 16 bits of the processor version register. Display this value as follows: \par
xx.yy. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ProcessorType\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:ProcessorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.ProcessorType}}
}\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An obsolete member that is retained for compatibility with {\b Windows} NT 3.5 and earlier. Use the {\i SystemInfoUnion.ProcessorArchitecture} , {\i ProcessorLevel} , and {\i ProcessorRevision}  members to determine the type of processor. \par
{\b {\b Windows} Me/98/95:}  Specifies the type of processor in the system. This member is one of the following values: \par
WinNt.PROCESSOR_INTEL_386 \par
WinNt.PROCESSOR_INTEL_486 \par
WinNt.PROCESSOR_INTEL_PENTIUM }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SystemInfoUnion\:Tao::Platform::Windows::Kernel::SYSTEM_INFO}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO\:SystemInfoUnion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SYSTEM_INFO_UNION} {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO.SystemInfoUnion}}
}\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Union for the OemId, ProcessorArchitecture, and Reserved fields of the {\b SYSTEM_INFO} structure. See {\b SYSTEM_INFO_UNION}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Kernel.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.Windows.Kernel.SYSTEM_INFO_UNION Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION}
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Union for the OemId, ProcessorArchitecture, and Reserved fields of the {\b SYSTEM_INFO} structure. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b OemId}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An obsolete member that is retained for compatibility with {\b Windows} NT 3.5 and earlier. New applications should use the {\i ProcessorArchitecture}  branch of the union. \par
{\b {\b Windows} Me/98/95:}  The system always sets this member to zero, the value defined for WinNt.PROCESSOR_ARCHITECTURE_INTEL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b ProcessorArchitecture}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System's processor architecture. This value can be one of the following values: \par
WinNt.PROCESSOR_ARCHITECTURE_UNKNOWN \par
WinNt.PROCESSOR_ARCHITECTURE_INTEL \par
{\b {\b Windows} NT 3.51:}  WinNt.PROCESSOR_ARCHITECTURE_MIPS \par
{\b {\b Windows} NT 4.0 and earlier:}  WinNt.PROCESSOR_ARCHITECTURE_ALPHA \par
{\b {\b Windows} NT 4.0 and earlier:}  WinNt.PROCESSOR_ARCHITECTURE_PPC \par
{\b 64-bit {\b Windows}:}  WinNt.PROCESSOR_ARCHITECTURE_IA64, WinNt.PROCESSOR_ARCHITECTURE_IA32_ON_WIN64, WinNt.PROCESSOR_ARCHITECTURE_AMD64 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b Reserved}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Union for the OemId, ProcessorArchitecture, and Reserved fields of the {\b SYSTEM_INFO} structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b SYSTEM_INFO}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v OemId\:Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION\:OemId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO_UNION.OemId}}
}\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An obsolete member that is retained for compatibility with {\b Windows} NT 3.5 and earlier. New applications should use the {\i ProcessorArchitecture}  branch of the union. \par
{\b {\b Windows} Me/98/95:}  The system always sets this member to zero, the value defined for WinNt.PROCESSOR_ARCHITECTURE_INTEL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ProcessorArchitecture\:Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION\:ProcessorArchitecture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO_UNION.ProcessorArchitecture}}
}\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System's processor architecture. This value can be one of the following values: \par
WinNt.PROCESSOR_ARCHITECTURE_UNKNOWN \par
WinNt.PROCESSOR_ARCHITECTURE_INTEL \par
{\b {\b Windows} NT 3.51:}  WinNt.PROCESSOR_ARCHITECTURE_MIPS \par
{\b {\b Windows} NT 4.0 and earlier:}  WinNt.PROCESSOR_ARCHITECTURE_ALPHA \par
{\b {\b Windows} NT 4.0 and earlier:}  WinNt.PROCESSOR_ARCHITECTURE_PPC \par
{\b 64-bit {\b Windows}:}  WinNt.PROCESSOR_ARCHITECTURE_IA64, WinNt.PROCESSOR_ARCHITECTURE_IA32_ON_WIN64, WinNt.PROCESSOR_ARCHITECTURE_AMD64 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Reserved\:Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION}
{\xe \v Tao::Platform::Windows::Kernel::SYSTEM_INFO_UNION\:Reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO_UNION.Reserved}}
}\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.Windows/{\b Kernel.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlGfx.tColorRGBA Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlGfx::tColorRGBA}
{\xe \v Tao::Sdl::SdlGfx::tColorRGBA}
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b r}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b g}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b a}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v a\:Tao::Sdl::SdlGfx::tColorRGBA}
{\xe \v Tao::Sdl::SdlGfx::tColorRGBA\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SdlGfx.tColorRGBA.a}}
}\par
{\bkmkstart AAAAAAAESH}
{\bkmkend AAAAAAAESH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v b\:Tao::Sdl::SdlGfx::tColorRGBA}
{\xe \v Tao::Sdl::SdlGfx::tColorRGBA\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SdlGfx.tColorRGBA.b}}
}\par
{\bkmkstart AAAAAAAESI}
{\bkmkend AAAAAAAESI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v g\:Tao::Sdl::SdlGfx::tColorRGBA}
{\xe \v Tao::Sdl::SdlGfx::tColorRGBA\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SdlGfx.tColorRGBA.g}}
}\par
{\bkmkstart AAAAAAAESJ}
{\bkmkend AAAAAAAESJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v r\:Tao::Sdl::SdlGfx::tColorRGBA}
{\xe \v Tao::Sdl::SdlGfx::tColorRGBA\:r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SdlGfx.tColorRGBA.r}}
}\par
{\bkmkstart AAAAAAAESK}
{\bkmkend AAAAAAAESK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlGfx.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlGfx.tColorY Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlGfx::tColorY}
{\xe \v Tao::Sdl::SdlGfx::tColorY}
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v y\:Tao::Sdl::SdlGfx::tColorY}
{\xe \v Tao::Sdl::SdlGfx::tColorY\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte {\b Tao.Sdl.SdlGfx.tColorY.y}}
}\par
{\bkmkstart AAAAAAAESL}
{\bkmkend AAAAAAAESL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlGfx.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlNet.TCPsocket Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlNet::TCPsocket}
{\xe \v Tao::Sdl::SdlNet::TCPsocket}
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCP socket type (opaque). }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCP socket type (opaque). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an opaque data type used for TCP connections. This is a pointer, and so it could be NULL at times. NULL would indicate no socket has been established. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct _TCPsocket *TCPsocket\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b UDPsocket}, {\b SDLNet_GenericSocket}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlNet.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlTtf.TTF_Font Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlTtf::TTF_Font}
{\xe \v Tao::Sdl::SdlTtf::TTF_Font}
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The opaque holder of a loaded font. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The opaque holder of a loaded font. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The opaque holder of a loaded font. You should always be using a pointer of this type, as in TTF_Font*, and not just plain {\b TTF_Font}. This stores the font data in a struct that is exposed only by using the API functions to get information. You should not try to access the struct data directly, since the struct may change in different versions of the API, and thus your program would be unreliable. \par
Struct in SDL_ttf.h {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid struct _TTF_Font TTF_Font;\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlTtf.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Bind.Structures.Type Class Reference\par \pard\plain 
{\tc\tcl2 \v Bind::Structures::Type}
{\xe \v Bind::Structures::Type}
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
Inheritance diagram for Bind.Structures.Type:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_bind_1_1_structures_1_1_type.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Type} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Type} ({\b Type} t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetFullType} (Dictionary< string, string > CSTypes, bool compliant)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetCLSCompliantType} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Translate} (string category)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b CurrentType}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of the parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b PreviousType}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Reference}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Array}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Pointer}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CLSCompliant}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WrapperTypes} {\b WrapperType}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Type\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Type.Type ()}
}\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Type\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Bind.Structures.Type.Type ({\b Type} {\i t})}
}\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetCLSCompliantType\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:GetCLSCompliantType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Type.GetCLSCompliantType ()}
}\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFullType\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:GetFullType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Type.GetFullType (Dictionary< string, string > {\i CSTypes}, bool {\i compliant})}
}\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToString\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Bind.Structures.Type.ToString ()}
}\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Bind.Structures.Parameter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABJX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Translate\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:Translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Bind.Structures.Type.Translate (string {\i category}){\f2  [virtual]}}
}\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Bind.Structures.Parameter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Array\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:Array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Bind.Structures.Type.Array{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CLSCompliant\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:CLSCompliant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Type.CLSCompliant{\f2  [get]}}
}\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CurrentType\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:CurrentType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual string Bind.Structures.Type.CurrentType{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the type of the parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented in {\b Bind.Structures.Parameter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Pointer\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:Pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Type.Pointer{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PreviousType\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:PreviousType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Bind.Structures.Type.PreviousType{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Reference\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:Reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Bind.Structures.Type.Reference{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WrapperType\:Bind::Structures::Type}
{\xe \v Bind::Structures::Type\:WrapperType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WrapperTypes} Bind.Structures.Type.WrapperType{\f2  [get, set]}}
}\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.GlBindGen/Structures/{\b Type.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlNet.UDPpacket Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlNet::UDPpacket}
{\xe \v Tao::Sdl::SdlNet::UDPpacket}
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP packet data encapsulation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b channel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The (software) channel number for this packet. This can also be used as a priority value for the packet. If no channel is assigned, the value is -1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The data contained in this packet, this is the meat. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b len}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the meaningful length of the data in bytes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b maxlen}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is size of the data buffer, which may be larger than the meaningful length. This is only used for packet creation on the senders side. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b status}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This contains the number of bytes sent, or a -1 on errors, after sending. This is useless for a received packet. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IPaddress} {\b address}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the resolved {\b IPaddress} to be used when sending, or it is the remote source of a received packet. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP packet data encapsulation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This struct is used with UDPsockets to send and receive data. It also helps keep track of a packets sending/receiving settings and status. The channels concept helps prioritize, or segregate differring types of data packets. \par
Binds to C-function call in SDL_net.h: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct \{\par
                        int channel;\par
                        Uint8 *data;\par
                        int len;\par
                        int maxlen;\par
                        int status;\par
                        IPaddress address;\par
                    \} UDPpacket;\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b UDPsocket}, {\b IPaddress}, SDLNet_AllocPacket, SDLNet_ResizePacket, SDLNet_FreePacket, SDLNet_AllocPacketV, SDLNet_FreePacketV\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v address\:Tao::Sdl::SdlNet::UDPpacket}
{\xe \v Tao::Sdl::SdlNet::UDPpacket\:address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b IPaddress} {\b Tao.Sdl.SdlNet.UDPpacket.address}}
}\par
{\bkmkstart AAAAAAAEST}
{\bkmkend AAAAAAAEST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the resolved {\b IPaddress} to be used when sending, or it is the remote source of a received packet. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v channel\:Tao::Sdl::SdlNet::UDPpacket}
{\xe \v Tao::Sdl::SdlNet::UDPpacket\:channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlNet.UDPpacket.channel}}
}\par
{\bkmkstart AAAAAAAESU}
{\bkmkend AAAAAAAESU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The (software) channel number for this packet. This can also be used as a priority value for the packet. If no channel is assigned, the value is -1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data\:Tao::Sdl::SdlNet::UDPpacket}
{\xe \v Tao::Sdl::SdlNet::UDPpacket\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Sdl.SdlNet.UDPpacket.data}}
}\par
{\bkmkstart AAAAAAAESV}
{\bkmkend AAAAAAAESV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The data contained in this packet, this is the meat. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v len\:Tao::Sdl::SdlNet::UDPpacket}
{\xe \v Tao::Sdl::SdlNet::UDPpacket\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlNet.UDPpacket.len}}
}\par
{\bkmkstart AAAAAAAESW}
{\bkmkend AAAAAAAESW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the meaningful length of the data in bytes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v maxlen\:Tao::Sdl::SdlNet::UDPpacket}
{\xe \v Tao::Sdl::SdlNet::UDPpacket\:maxlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlNet.UDPpacket.maxlen}}
}\par
{\bkmkstart AAAAAAAESX}
{\bkmkend AAAAAAAESX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is size of the data buffer, which may be larger than the meaningful length. This is only used for packet creation on the senders side. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v status\:Tao::Sdl::SdlNet::UDPpacket}
{\xe \v Tao::Sdl::SdlNet::UDPpacket\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Sdl.SdlNet.UDPpacket.status}}
}\par
{\bkmkstart AAAAAAAESY}
{\bkmkend AAAAAAAESY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This contains the number of bytes sent, or a -1 on errors, after sending. This is useless for a received packet. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlNet.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Sdl.SdlNet.UDPsocket Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Sdl::SdlNet::UDPsocket}
{\xe \v Tao::Sdl::SdlNet::UDPsocket}
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP socket type (opaque). }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP socket type (opaque). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an opaque data type used for UDP sockets. This is a pointer, and so it could be NULL at times. NULL would indicate no socket has been established. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                     typedef struct _UDPsocket *UDPsocket\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b UDPpacket}, {\b TCPsocket}, {\b SDLNet_GenericSocket}\par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Sdl/{\b SdlNet.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.VisualInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::VisualInfo}
{\xe \v Tao::Platform::X11::VisualInfo}
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::Platform::X11::VisualInfo}
{\xe \v Tao::Platform::X11::VisualInfo\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.Platform.X11.VisualInfo.ToString ()}
}\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b API.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XAnyEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XAnyEvent}
{\xe \v Tao::Platform::X11::XAnyEvent}
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XAnyEvent}
{\xe \v Tao::Platform::X11::XAnyEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XAnyEvent.display}}
}\par
{\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XAnyEvent}
{\xe \v Tao::Platform::X11::XAnyEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XAnyEvent.send_event}}
}\par
{\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XAnyEvent}
{\xe \v Tao::Platform::X11::XAnyEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XAnyEvent.serial}}
}\par
{\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XAnyEvent}
{\xe \v Tao::Platform::X11::XAnyEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XAnyEvent.type}}
}\par
{\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XAnyEvent}
{\xe \v Tao::Platform::X11::XAnyEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XAnyEvent.window}}
}\par
{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XButtonEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent}
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b subwindow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b state}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b button}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b same_screen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v button\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XButtonEvent.button}}
}\par
{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XButtonEvent.display}}
}\par
{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XButtonEvent.root}}
}\par
{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v same_screen\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:same_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XButtonEvent.same_screen}}
}\par
{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XButtonEvent.send_event}}
}\par
{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XButtonEvent.serial}}
}\par
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XButtonEvent.state}}
}\par
{\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subwindow\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:subwindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XButtonEvent.subwindow}}
}\par
{\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XButtonEvent.time}}
}\par
{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XButtonEvent.type}}
}\par
{\bkmkstart AAAAAAADRT}
{\bkmkend AAAAAAADRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XButtonEvent.window}}
}\par
{\bkmkstart AAAAAAADRU}
{\bkmkend AAAAAAADRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XButtonEvent.x}}
}\par
{\bkmkstart AAAAAAADRV}
{\bkmkend AAAAAAADRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x_root\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:x_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XButtonEvent.x_root}}
}\par
{\bkmkstart AAAAAAADRW}
{\bkmkend AAAAAAADRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XButtonEvent.y}}
}\par
{\bkmkstart AAAAAAADRX}
{\bkmkend AAAAAAADRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y_root\:Tao::Platform::X11::XButtonEvent}
{\xe \v Tao::Platform::X11::XButtonEvent\:y_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XButtonEvent.y_root}}
}\par
{\bkmkstart AAAAAAADRY}
{\bkmkend AAAAAAADRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XCirculateEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent}
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b xevent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b place}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateEvent.display}}
}\par
{\bkmkstart AAAAAAADZS}
{\bkmkend AAAAAAADZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v place\:Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent\:place}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCirculateEvent.place}}
}\par
{\bkmkstart AAAAAAADZT}
{\bkmkend AAAAAAADZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XCirculateEvent.send_event}}
}\par
{\bkmkstart AAAAAAADZU}
{\bkmkend AAAAAAADZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateEvent.serial}}
}\par
{\bkmkstart AAAAAAADZV}
{\bkmkend AAAAAAADZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XCirculateEvent.type}}
}\par
{\bkmkstart AAAAAAADZW}
{\bkmkend AAAAAAADZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateEvent.window}}
}\par
{\bkmkstart AAAAAAADZX}
{\bkmkend AAAAAAADZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xevent\:Tao::Platform::X11::XCirculateEvent}
{\xe \v Tao::Platform::X11::XCirculateEvent\:xevent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateEvent.xevent}}
}\par
{\bkmkstart AAAAAAADZY}
{\bkmkend AAAAAAADZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XCirculateRequestEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent}
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b parent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b place}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateRequestEvent.display}}
}\par
{\bkmkstart AAAAAAADZZ}
{\bkmkend AAAAAAADZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateRequestEvent.parent}}
}\par
{\bkmkstart AAAAAAAEAA}
{\bkmkend AAAAAAAEAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v place\:Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent\:place}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCirculateRequestEvent.place}}
}\par
{\bkmkstart AAAAAAAEAB}
{\bkmkend AAAAAAAEAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XCirculateRequestEvent.send_event}}
}\par
{\bkmkstart AAAAAAAEAC}
{\bkmkend AAAAAAAEAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateRequestEvent.serial}}
}\par
{\bkmkstart AAAAAAAEAD}
{\bkmkend AAAAAAAEAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XCirculateRequestEvent.type}}
}\par
{\bkmkstart AAAAAAAEAE}
{\bkmkend AAAAAAAEAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XCirculateRequestEvent}
{\xe \v Tao::Platform::X11::XCirculateRequestEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCirculateRequestEvent.window}}
}\par
{\bkmkstart AAAAAAAEAF}
{\bkmkend AAAAAAAEAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XClientMessageEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent}
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b message_type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b ptr1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b ptr2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b ptr3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b ptr4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b ptr5}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.display}}
}\par
{\bkmkstart AAAAAAAEBW}
{\bkmkend AAAAAAAEBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v format\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XClientMessageEvent.format}}
}\par
{\bkmkstart AAAAAAAEBX}
{\bkmkend AAAAAAAEBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v message_type\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:message_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.message_type}}
}\par
{\bkmkstart AAAAAAAEBY}
{\bkmkend AAAAAAAEBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ptr1\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:ptr1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.ptr1}}
}\par
{\bkmkstart AAAAAAAEBZ}
{\bkmkend AAAAAAAEBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ptr2\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:ptr2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.ptr2}}
}\par
{\bkmkstart AAAAAAAECA}
{\bkmkend AAAAAAAECA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ptr3\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:ptr3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.ptr3}}
}\par
{\bkmkstart AAAAAAAECB}
{\bkmkend AAAAAAAECB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ptr4\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:ptr4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.ptr4}}
}\par
{\bkmkstart AAAAAAAECC}
{\bkmkend AAAAAAAECC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ptr5\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:ptr5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.ptr5}}
}\par
{\bkmkstart AAAAAAAECD}
{\bkmkend AAAAAAAECD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XClientMessageEvent.send_event}}
}\par
{\bkmkstart AAAAAAAECE}
{\bkmkend AAAAAAAECE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.serial}}
}\par
{\bkmkstart AAAAAAAECF}
{\bkmkend AAAAAAAECF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XClientMessageEvent.type}}
}\par
{\bkmkstart AAAAAAAECG}
{\bkmkend AAAAAAAECG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XClientMessageEvent}
{\xe \v Tao::Platform::X11::XClientMessageEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XClientMessageEvent.window}}
}\par
{\bkmkstart AAAAAAAECH}
{\bkmkend AAAAAAAECH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XColor Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XColor}
{\xe \v Tao::Platform::X11::XColor}
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal ushort {\b red}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal ushort {\b green}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal ushort {\b blue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b pad}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v blue\:Tao::Platform::X11::XColor}
{\xe \v Tao::Platform::X11::XColor\:blue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal ushort {\b Tao.Platform.X11.XColor.blue}}
}\par
{\bkmkstart AAAAAAAEHP}
{\bkmkend AAAAAAAEHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v flags\:Tao::Platform::X11::XColor}
{\xe \v Tao::Platform::X11::XColor\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XColor.flags}}
}\par
{\bkmkstart AAAAAAAEHQ}
{\bkmkend AAAAAAAEHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v green\:Tao::Platform::X11::XColor}
{\xe \v Tao::Platform::X11::XColor\:green}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal ushort {\b Tao.Platform.X11.XColor.green}}
}\par
{\bkmkstart AAAAAAAEHR}
{\bkmkend AAAAAAAEHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad\:Tao::Platform::X11::XColor}
{\xe \v Tao::Platform::X11::XColor\:pad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XColor.pad}}
}\par
{\bkmkstart AAAAAAAEHS}
{\bkmkend AAAAAAAEHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixel\:Tao::Platform::X11::XColor}
{\xe \v Tao::Platform::X11::XColor\:pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XColor.pixel}}
}\par
{\bkmkstart AAAAAAAEHT}
{\bkmkend AAAAAAAEHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v red\:Tao::Platform::X11::XColor}
{\xe \v Tao::Platform::X11::XColor\:red}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal ushort {\b Tao.Platform.X11.XColor.red}}
}\par
{\bkmkstart AAAAAAAEHU}
{\bkmkend AAAAAAAEHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XColormapEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent}
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b colormap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b c_new}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b state}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v c_new\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:c_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XColormapEvent.c_new}}
}\par
{\bkmkstart AAAAAAAEBO}
{\bkmkend AAAAAAAEBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colormap\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:colormap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XColormapEvent.colormap}}
}\par
{\bkmkstart AAAAAAAEBP}
{\bkmkend AAAAAAAEBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XColormapEvent.display}}
}\par
{\bkmkstart AAAAAAAEBQ}
{\bkmkend AAAAAAAEBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XColormapEvent.send_event}}
}\par
{\bkmkstart AAAAAAAEBR}
{\bkmkend AAAAAAAEBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XColormapEvent.serial}}
}\par
{\bkmkstart AAAAAAAEBS}
{\bkmkend AAAAAAAEBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XColormapEvent.state}}
}\par
{\bkmkstart AAAAAAAEBT}
{\bkmkend AAAAAAAEBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XColormapEvent.type}}
}\par
{\bkmkstart AAAAAAAEBU}
{\bkmkend AAAAAAAEBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XColormapEvent}
{\xe \v Tao::Platform::X11::XColormapEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XColormapEvent.window}}
}\par
{\bkmkstart AAAAAAAEBV}
{\bkmkend AAAAAAAEBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XConfigureEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent}
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b xevent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b border_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b above}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b override_redirect}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v above\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:above}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureEvent.above}}
}\par
{\bkmkstart AAAAAAADYC}
{\bkmkend AAAAAAADYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v border_width\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:border_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureEvent.border_width}}
}\par
{\bkmkstart AAAAAAADYD}
{\bkmkend AAAAAAADYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureEvent.display}}
}\par
{\bkmkstart AAAAAAADYE}
{\bkmkend AAAAAAADYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureEvent.height}}
}\par
{\bkmkstart AAAAAAADYF}
{\bkmkend AAAAAAADYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v override_redirect\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:override_redirect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XConfigureEvent.override_redirect}}
}\par
{\bkmkstart AAAAAAADYG}
{\bkmkend AAAAAAADYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XConfigureEvent.send_event}}
}\par
{\bkmkstart AAAAAAADYH}
{\bkmkend AAAAAAADYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureEvent.serial}}
}\par
{\bkmkstart AAAAAAADYI}
{\bkmkend AAAAAAADYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XConfigureEvent.type}}
}\par
{\bkmkstart AAAAAAADYJ}
{\bkmkend AAAAAAADYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureEvent.width}}
}\par
{\bkmkstart AAAAAAADYK}
{\bkmkend AAAAAAADYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureEvent.window}}
}\par
{\bkmkstart AAAAAAADYL}
{\bkmkend AAAAAAADYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureEvent.x}}
}\par
{\bkmkstart AAAAAAADYM}
{\bkmkend AAAAAAADYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xevent\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:xevent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureEvent.xevent}}
}\par
{\bkmkstart AAAAAAADYN}
{\bkmkend AAAAAAADYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XConfigureEvent}
{\xe \v Tao::Platform::X11::XConfigureEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureEvent.y}}
}\par
{\bkmkstart AAAAAAADYO}
{\bkmkend AAAAAAADYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XConfigureRequestEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent}
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b parent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b border_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b above}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b detail}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b value_mask}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v above\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:above}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureRequestEvent.above}}
}\par
{\bkmkstart AAAAAAADZE}
{\bkmkend AAAAAAADZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v border_width\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:border_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureRequestEvent.border_width}}
}\par
{\bkmkstart AAAAAAADZF}
{\bkmkend AAAAAAADZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v detail\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:detail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureRequestEvent.detail}}
}\par
{\bkmkstart AAAAAAADZG}
{\bkmkend AAAAAAADZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureRequestEvent.display}}
}\par
{\bkmkstart AAAAAAADZH}
{\bkmkend AAAAAAADZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureRequestEvent.height}}
}\par
{\bkmkstart AAAAAAADZI}
{\bkmkend AAAAAAADZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureRequestEvent.parent}}
}\par
{\bkmkstart AAAAAAADZJ}
{\bkmkend AAAAAAADZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XConfigureRequestEvent.send_event}}
}\par
{\bkmkstart AAAAAAADZK}
{\bkmkend AAAAAAADZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureRequestEvent.serial}}
}\par
{\bkmkstart AAAAAAADZL}
{\bkmkend AAAAAAADZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XConfigureRequestEvent.type}}
}\par
{\bkmkstart AAAAAAADZM}
{\bkmkend AAAAAAADZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value_mask\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:value_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureRequestEvent.value_mask}}
}\par
{\bkmkstart AAAAAAADZN}
{\bkmkend AAAAAAADZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureRequestEvent.width}}
}\par
{\bkmkstart AAAAAAADZO}
{\bkmkend AAAAAAADZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XConfigureRequestEvent.window}}
}\par
{\bkmkstart AAAAAAADZP}
{\bkmkend AAAAAAADZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureRequestEvent.x}}
}\par
{\bkmkstart AAAAAAADZQ}
{\bkmkend AAAAAAADZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XConfigureRequestEvent}
{\xe \v Tao::Platform::X11::XConfigureRequestEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XConfigureRequestEvent.y}}
}\par
{\bkmkstart AAAAAAADZR}
{\bkmkend AAAAAAADZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XCreateWindowEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent}
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b parent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b border_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b override_redirect}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v border_width\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:border_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCreateWindowEvent.border_width}}
}\par
{\bkmkstart AAAAAAADWG}
{\bkmkend AAAAAAADWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCreateWindowEvent.display}}
}\par
{\bkmkstart AAAAAAADWH}
{\bkmkend AAAAAAADWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCreateWindowEvent.height}}
}\par
{\bkmkstart AAAAAAADWI}
{\bkmkend AAAAAAADWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v override_redirect\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:override_redirect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XCreateWindowEvent.override_redirect}}
}\par
{\bkmkstart AAAAAAADWJ}
{\bkmkend AAAAAAADWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCreateWindowEvent.parent}}
}\par
{\bkmkstart AAAAAAADWK}
{\bkmkend AAAAAAADWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XCreateWindowEvent.send_event}}
}\par
{\bkmkstart AAAAAAADWL}
{\bkmkend AAAAAAADWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCreateWindowEvent.serial}}
}\par
{\bkmkstart AAAAAAADWM}
{\bkmkend AAAAAAADWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XCreateWindowEvent.type}}
}\par
{\bkmkstart AAAAAAADWN}
{\bkmkend AAAAAAADWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCreateWindowEvent.width}}
}\par
{\bkmkstart AAAAAAADWO}
{\bkmkend AAAAAAADWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCreateWindowEvent.window}}
}\par
{\bkmkstart AAAAAAADWP}
{\bkmkend AAAAAAADWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCreateWindowEvent.x}}
}\par
{\bkmkstart AAAAAAADWQ}
{\bkmkend AAAAAAADWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XCreateWindowEvent}
{\xe \v Tao::Platform::X11::XCreateWindowEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCreateWindowEvent.y}}
}\par
{\bkmkstart AAAAAAADWR}
{\bkmkend AAAAAAADWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XCrossingEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent}
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b subwindow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b NotifyMode} {\b mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b NotifyDetail} {\b detail}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b same_screen}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b focus}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b state}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v detail\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:detail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b NotifyDetail} {\b Tao.Platform.X11.XCrossingEvent.detail}}
}\par
{\bkmkstart AAAAAAADSO}
{\bkmkend AAAAAAADSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCrossingEvent.display}}
}\par
{\bkmkstart AAAAAAADSP}
{\bkmkend AAAAAAADSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v focus\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:focus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XCrossingEvent.focus}}
}\par
{\bkmkstart AAAAAAADSQ}
{\bkmkend AAAAAAADSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mode\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b NotifyMode} {\b Tao.Platform.X11.XCrossingEvent.mode}}
}\par
{\bkmkstart AAAAAAADSR}
{\bkmkend AAAAAAADSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCrossingEvent.root}}
}\par
{\bkmkstart AAAAAAADSS}
{\bkmkend AAAAAAADSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v same_screen\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:same_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XCrossingEvent.same_screen}}
}\par
{\bkmkstart AAAAAAADST}
{\bkmkend AAAAAAADST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XCrossingEvent.send_event}}
}\par
{\bkmkstart AAAAAAADSU}
{\bkmkend AAAAAAADSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCrossingEvent.serial}}
}\par
{\bkmkstart AAAAAAADSV}
{\bkmkend AAAAAAADSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCrossingEvent.state}}
}\par
{\bkmkstart AAAAAAADSW}
{\bkmkend AAAAAAADSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subwindow\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:subwindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCrossingEvent.subwindow}}
}\par
{\bkmkstart AAAAAAADSX}
{\bkmkend AAAAAAADSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCrossingEvent.time}}
}\par
{\bkmkstart AAAAAAADSY}
{\bkmkend AAAAAAADSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XCrossingEvent.type}}
}\par
{\bkmkstart AAAAAAADSZ}
{\bkmkend AAAAAAADSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XCrossingEvent.window}}
}\par
{\bkmkstart AAAAAAADTA}
{\bkmkend AAAAAAADTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCrossingEvent.x}}
}\par
{\bkmkstart AAAAAAADTB}
{\bkmkend AAAAAAADTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x_root\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:x_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCrossingEvent.x_root}}
}\par
{\bkmkstart AAAAAAADTC}
{\bkmkend AAAAAAADTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCrossingEvent.y}}
}\par
{\bkmkstart AAAAAAADTD}
{\bkmkend AAAAAAADTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y_root\:Tao::Platform::X11::XCrossingEvent}
{\xe \v Tao::Platform::X11::XCrossingEvent\:y_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XCrossingEvent.y_root}}
}\par
{\bkmkstart AAAAAAADTE}
{\bkmkend AAAAAAADTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XDestroyWindowEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XDestroyWindowEvent}
{\xe \v Tao::Platform::X11::XDestroyWindowEvent}
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b xevent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XDestroyWindowEvent}
{\xe \v Tao::Platform::X11::XDestroyWindowEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XDestroyWindowEvent.display}}
}\par
{\bkmkstart AAAAAAADWS}
{\bkmkend AAAAAAADWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XDestroyWindowEvent}
{\xe \v Tao::Platform::X11::XDestroyWindowEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XDestroyWindowEvent.send_event}}
}\par
{\bkmkstart AAAAAAADWT}
{\bkmkend AAAAAAADWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XDestroyWindowEvent}
{\xe \v Tao::Platform::X11::XDestroyWindowEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XDestroyWindowEvent.serial}}
}\par
{\bkmkstart AAAAAAADWU}
{\bkmkend AAAAAAADWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XDestroyWindowEvent}
{\xe \v Tao::Platform::X11::XDestroyWindowEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XDestroyWindowEvent.type}}
}\par
{\bkmkstart AAAAAAADWV}
{\bkmkend AAAAAAADWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XDestroyWindowEvent}
{\xe \v Tao::Platform::X11::XDestroyWindowEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XDestroyWindowEvent.window}}
}\par
{\bkmkstart AAAAAAADWW}
{\bkmkend AAAAAAADWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xevent\:Tao::Platform::X11::XDestroyWindowEvent}
{\xe \v Tao::Platform::X11::XDestroyWindowEvent\:xevent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XDestroyWindowEvent.xevent}}
}\par
{\bkmkstart AAAAAAADWX}
{\bkmkend AAAAAAADWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XErrorEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent}
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b resourceid}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b error_code}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XRequest} {\b request_code}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b minor_code}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XErrorEvent.display}}
}\par
{\bkmkstart AAAAAAAECQ}
{\bkmkend AAAAAAAECQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v error_code\:Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent\:error_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XErrorEvent.error_code}}
}\par
{\bkmkstart AAAAAAAECR}
{\bkmkend AAAAAAAECR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minor_code\:Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent\:minor_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XErrorEvent.minor_code}}
}\par
{\bkmkstart AAAAAAAECS}
{\bkmkend AAAAAAAECS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v request_code\:Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent\:request_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XRequest} {\b Tao.Platform.X11.XErrorEvent.request_code}}
}\par
{\bkmkstart AAAAAAAECT}
{\bkmkend AAAAAAAECT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resourceid\:Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent\:resourceid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XErrorEvent.resourceid}}
}\par
{\bkmkstart AAAAAAAECU}
{\bkmkend AAAAAAAECU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XErrorEvent.serial}}
}\par
{\bkmkstart AAAAAAAECV}
{\bkmkend AAAAAAAECV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XErrorEvent}
{\xe \v Tao::Platform::X11::XErrorEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XErrorEvent.type}}
}\par
{\bkmkstart AAAAAAAECW}
{\bkmkend AAAAAAAECW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent}
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (object ev)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XAnyEvent} {\b AnyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XKeyEvent} {\b KeyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XButtonEvent} {\b ButtonEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XMotionEvent} {\b MotionEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XCrossingEvent} {\b CrossingEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XFocusChangeEvent} {\b FocusChangeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XExposeEvent} {\b ExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XGraphicsExposeEvent} {\b GraphicsExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XNoExposeEvent} {\b NoExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XVisibilityEvent} {\b VisibilityEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XCreateWindowEvent} {\b CreateWindowEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XDestroyWindowEvent} {\b DestroyWindowEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XUnmapEvent} {\b UnmapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XMapEvent} {\b MapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XMapRequestEvent} {\b MapRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XReparentEvent} {\b ReparentEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XConfigureEvent} {\b ConfigureEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XGravityEvent} {\b GravityEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XResizeRequestEvent} {\b ResizeRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XConfigureRequestEvent} {\b ConfigureRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XCirculateEvent} {\b CirculateEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XCirculateRequestEvent} {\b CirculateRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XPropertyEvent} {\b PropertyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XSelectionClearEvent} {\b SelectionClearEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XSelectionRequestEvent} {\b SelectionRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XSelectionEvent} {\b SelectionEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XColormapEvent} {\b ColormapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XClientMessageEvent} {\b ClientMessageEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XMappingEvent} {\b MappingEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XErrorEvent} {\b ErrorEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XKeymapEvent} {\b KeymapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventPad} {\b Pad}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.Platform.X11.XEvent.ToString ()}
}\par
{\bkmkstart AAAAAAAEDV}
{\bkmkend AAAAAAAEDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToString\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Tao.Platform.X11.XEvent.ToString (object {\i ev}){\f2  [static]}}
}\par
{\bkmkstart AAAAAAAEDW}
{\bkmkend AAAAAAAEDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v AnyEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:AnyEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XAnyEvent} {\b Tao.Platform.X11.XEvent.AnyEvent}}
}\par
{\bkmkstart AAAAAAAEDX}
{\bkmkend AAAAAAAEDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ButtonEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ButtonEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XButtonEvent} {\b Tao.Platform.X11.XEvent.ButtonEvent}}
}\par
{\bkmkstart AAAAAAAEDY}
{\bkmkend AAAAAAAEDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CirculateEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:CirculateEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XCirculateEvent} {\b Tao.Platform.X11.XEvent.CirculateEvent}}
}\par
{\bkmkstart AAAAAAAEDZ}
{\bkmkend AAAAAAAEDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CirculateRequestEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:CirculateRequestEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XCirculateRequestEvent} {\b Tao.Platform.X11.XEvent.CirculateRequestEvent}}
}\par
{\bkmkstart AAAAAAAEEA}
{\bkmkend AAAAAAAEEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ClientMessageEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ClientMessageEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XClientMessageEvent} {\b Tao.Platform.X11.XEvent.ClientMessageEvent}}
}\par
{\bkmkstart AAAAAAAEEB}
{\bkmkend AAAAAAAEEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ColormapEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ColormapEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XColormapEvent} {\b Tao.Platform.X11.XEvent.ColormapEvent}}
}\par
{\bkmkstart AAAAAAAEEC}
{\bkmkend AAAAAAAEEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ConfigureEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ConfigureEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XConfigureEvent} {\b Tao.Platform.X11.XEvent.ConfigureEvent}}
}\par
{\bkmkstart AAAAAAAEED}
{\bkmkend AAAAAAAEED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ConfigureRequestEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ConfigureRequestEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XConfigureRequestEvent} {\b Tao.Platform.X11.XEvent.ConfigureRequestEvent}}
}\par
{\bkmkstart AAAAAAAEEE}
{\bkmkend AAAAAAAEEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CreateWindowEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:CreateWindowEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XCreateWindowEvent} {\b Tao.Platform.X11.XEvent.CreateWindowEvent}}
}\par
{\bkmkstart AAAAAAAEEF}
{\bkmkend AAAAAAAEEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CrossingEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:CrossingEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XCrossingEvent} {\b Tao.Platform.X11.XEvent.CrossingEvent}}
}\par
{\bkmkstart AAAAAAAEEG}
{\bkmkend AAAAAAAEEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DestroyWindowEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:DestroyWindowEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XDestroyWindowEvent} {\b Tao.Platform.X11.XEvent.DestroyWindowEvent}}
}\par
{\bkmkstart AAAAAAAEEH}
{\bkmkend AAAAAAAEEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ErrorEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ErrorEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XErrorEvent} {\b Tao.Platform.X11.XEvent.ErrorEvent}}
}\par
{\bkmkstart AAAAAAAEEI}
{\bkmkend AAAAAAAEEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExposeEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ExposeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XExposeEvent} {\b Tao.Platform.X11.XEvent.ExposeEvent}}
}\par
{\bkmkstart AAAAAAAEEJ}
{\bkmkend AAAAAAAEEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FocusChangeEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:FocusChangeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XFocusChangeEvent} {\b Tao.Platform.X11.XEvent.FocusChangeEvent}}
}\par
{\bkmkstart AAAAAAAEEK}
{\bkmkend AAAAAAAEEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GraphicsExposeEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:GraphicsExposeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XGraphicsExposeEvent} {\b Tao.Platform.X11.XEvent.GraphicsExposeEvent}}
}\par
{\bkmkstart AAAAAAAEEL}
{\bkmkend AAAAAAAEEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GravityEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:GravityEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XGravityEvent} {\b Tao.Platform.X11.XEvent.GravityEvent}}
}\par
{\bkmkstart AAAAAAAEEM}
{\bkmkend AAAAAAAEEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KeyEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:KeyEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XKeyEvent} {\b Tao.Platform.X11.XEvent.KeyEvent}}
}\par
{\bkmkstart AAAAAAAEEN}
{\bkmkend AAAAAAAEEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KeymapEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:KeymapEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XKeymapEvent} {\b Tao.Platform.X11.XEvent.KeymapEvent}}
}\par
{\bkmkstart AAAAAAAEEO}
{\bkmkend AAAAAAAEEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MapEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:MapEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XMapEvent} {\b Tao.Platform.X11.XEvent.MapEvent}}
}\par
{\bkmkstart AAAAAAAEEP}
{\bkmkend AAAAAAAEEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MappingEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:MappingEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XMappingEvent} {\b Tao.Platform.X11.XEvent.MappingEvent}}
}\par
{\bkmkstart AAAAAAAEEQ}
{\bkmkend AAAAAAAEEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MapRequestEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:MapRequestEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XMapRequestEvent} {\b Tao.Platform.X11.XEvent.MapRequestEvent}}
}\par
{\bkmkstart AAAAAAAEER}
{\bkmkend AAAAAAAEER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MotionEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:MotionEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XMotionEvent} {\b Tao.Platform.X11.XEvent.MotionEvent}}
}\par
{\bkmkstart AAAAAAAEES}
{\bkmkend AAAAAAAEES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NoExposeEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:NoExposeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XNoExposeEvent} {\b Tao.Platform.X11.XEvent.NoExposeEvent}}
}\par
{\bkmkstart AAAAAAAEET}
{\bkmkend AAAAAAAEET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Pad\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:Pad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventPad} {\b Tao.Platform.X11.XEvent.Pad}}
}\par
{\bkmkstart AAAAAAAEEU}
{\bkmkend AAAAAAAEEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PropertyEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:PropertyEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XPropertyEvent} {\b Tao.Platform.X11.XEvent.PropertyEvent}}
}\par
{\bkmkstart AAAAAAAEEV}
{\bkmkend AAAAAAAEEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReparentEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ReparentEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XReparentEvent} {\b Tao.Platform.X11.XEvent.ReparentEvent}}
}\par
{\bkmkstart AAAAAAAEEW}
{\bkmkend AAAAAAAEEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ResizeRequestEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:ResizeRequestEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XResizeRequestEvent} {\b Tao.Platform.X11.XEvent.ResizeRequestEvent}}
}\par
{\bkmkstart AAAAAAAEEX}
{\bkmkend AAAAAAAEEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SelectionClearEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:SelectionClearEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XSelectionClearEvent} {\b Tao.Platform.X11.XEvent.SelectionClearEvent}}
}\par
{\bkmkstart AAAAAAAEEY}
{\bkmkend AAAAAAAEEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SelectionEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:SelectionEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XSelectionEvent} {\b Tao.Platform.X11.XEvent.SelectionEvent}}
}\par
{\bkmkstart AAAAAAAEEZ}
{\bkmkend AAAAAAAEEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SelectionRequestEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:SelectionRequestEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XSelectionRequestEvent} {\b Tao.Platform.X11.XEvent.SelectionRequestEvent}}
}\par
{\bkmkstart AAAAAAAEFA}
{\bkmkend AAAAAAAEFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XEvent.type}}
}\par
{\bkmkstart AAAAAAAEFB}
{\bkmkend AAAAAAAEFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnmapEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:UnmapEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XUnmapEvent} {\b Tao.Platform.X11.XEvent.UnmapEvent}}
}\par
{\bkmkstart AAAAAAAEFC}
{\bkmkend AAAAAAAEFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VisibilityEvent\:Tao::Platform::X11::XEvent}
{\xe \v Tao::Platform::X11::XEvent\:VisibilityEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XVisibilityEvent} {\b Tao.Platform.X11.XEvent.VisibilityEvent}}
}\par
{\bkmkstart AAAAAAAEFD}
{\bkmkend AAAAAAAEFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XEventPad Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad}
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad5}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad6}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad7}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad9}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad10}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad12}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad13}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad14}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad15}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad16}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad17}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad18}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad19}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad20}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad21}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad22}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b pad23}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v pad0\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad0}}
}\par
{\bkmkstart AAAAAAAECX}
{\bkmkend AAAAAAAECX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad1\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad1}}
}\par
{\bkmkstart AAAAAAAECY}
{\bkmkend AAAAAAAECY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad10\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad10}}
}\par
{\bkmkstart AAAAAAAECZ}
{\bkmkend AAAAAAAECZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad11\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad11}}
}\par
{\bkmkstart AAAAAAAEDA}
{\bkmkend AAAAAAAEDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad12\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad12}}
}\par
{\bkmkstart AAAAAAAEDB}
{\bkmkend AAAAAAAEDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad13\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad13}}
}\par
{\bkmkstart AAAAAAAEDC}
{\bkmkend AAAAAAAEDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad14\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad14}}
}\par
{\bkmkstart AAAAAAAEDD}
{\bkmkend AAAAAAAEDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad15\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad15}}
}\par
{\bkmkstart AAAAAAAEDE}
{\bkmkend AAAAAAAEDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad16\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad16}}
}\par
{\bkmkstart AAAAAAAEDF}
{\bkmkend AAAAAAAEDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad17\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad17}}
}\par
{\bkmkstart AAAAAAAEDG}
{\bkmkend AAAAAAAEDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad18\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad18}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad18}}
}\par
{\bkmkstart AAAAAAAEDH}
{\bkmkend AAAAAAAEDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad19\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad19}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad19}}
}\par
{\bkmkstart AAAAAAAEDI}
{\bkmkend AAAAAAAEDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad2\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad2}}
}\par
{\bkmkstart AAAAAAAEDJ}
{\bkmkend AAAAAAAEDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad20\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad20}}
}\par
{\bkmkstart AAAAAAAEDK}
{\bkmkend AAAAAAAEDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad21\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad21}}
}\par
{\bkmkstart AAAAAAAEDL}
{\bkmkend AAAAAAAEDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad22\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad22}}
}\par
{\bkmkstart AAAAAAAEDM}
{\bkmkend AAAAAAAEDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad23\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad23}}
}\par
{\bkmkstart AAAAAAAEDN}
{\bkmkend AAAAAAAEDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad3\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad3}}
}\par
{\bkmkstart AAAAAAAEDO}
{\bkmkend AAAAAAAEDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad4\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad4}}
}\par
{\bkmkstart AAAAAAAEDP}
{\bkmkend AAAAAAAEDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad5\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad5}}
}\par
{\bkmkstart AAAAAAAEDQ}
{\bkmkend AAAAAAAEDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad6\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad6}}
}\par
{\bkmkstart AAAAAAAEDR}
{\bkmkend AAAAAAAEDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad7\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad7}}
}\par
{\bkmkstart AAAAAAAEDS}
{\bkmkend AAAAAAAEDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad8\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad8}}
}\par
{\bkmkstart AAAAAAAEDT}
{\bkmkend AAAAAAAEDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pad9\:Tao::Platform::X11::XEventPad}
{\xe \v Tao::Platform::X11::XEventPad\:pad9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XEventPad.pad9}}
}\par
{\bkmkstart AAAAAAAEDU}
{\bkmkend AAAAAAAEDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XExposeEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent}
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b count}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v count\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XExposeEvent.count}}
}\par
{\bkmkstart AAAAAAADUX}
{\bkmkend AAAAAAADUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XExposeEvent.display}}
}\par
{\bkmkstart AAAAAAADUY}
{\bkmkend AAAAAAADUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XExposeEvent.height}}
}\par
{\bkmkstart AAAAAAADUZ}
{\bkmkend AAAAAAADUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XExposeEvent.send_event}}
}\par
{\bkmkstart AAAAAAADVA}
{\bkmkend AAAAAAADVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XExposeEvent.serial}}
}\par
{\bkmkstart AAAAAAADVB}
{\bkmkend AAAAAAADVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XExposeEvent.type}}
}\par
{\bkmkstart AAAAAAADVC}
{\bkmkend AAAAAAADVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XExposeEvent.width}}
}\par
{\bkmkstart AAAAAAADVD}
{\bkmkend AAAAAAADVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XExposeEvent.window}}
}\par
{\bkmkstart AAAAAAADVE}
{\bkmkend AAAAAAADVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XExposeEvent.x}}
}\par
{\bkmkstart AAAAAAADVF}
{\bkmkend AAAAAAADVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XExposeEvent}
{\xe \v Tao::Platform::X11::XExposeEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XExposeEvent.y}}
}\par
{\bkmkstart AAAAAAADVG}
{\bkmkend AAAAAAADVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XFocusChangeEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent}
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b NotifyDetail} {\b detail}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v detail\:Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent\:detail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b NotifyDetail} {\b Tao.Platform.X11.XFocusChangeEvent.detail}}
}\par
{\bkmkstart AAAAAAADTF}
{\bkmkend AAAAAAADTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XFocusChangeEvent.display}}
}\par
{\bkmkstart AAAAAAADTG}
{\bkmkend AAAAAAADTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mode\:Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent\:mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XFocusChangeEvent.mode}}
}\par
{\bkmkstart AAAAAAADTH}
{\bkmkend AAAAAAADTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XFocusChangeEvent.send_event}}
}\par
{\bkmkstart AAAAAAADTI}
{\bkmkend AAAAAAADTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XFocusChangeEvent.serial}}
}\par
{\bkmkstart AAAAAAADTJ}
{\bkmkend AAAAAAADTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XFocusChangeEvent.type}}
}\par
{\bkmkstart AAAAAAADTK}
{\bkmkend AAAAAAADTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XFocusChangeEvent}
{\xe \v Tao::Platform::X11::XFocusChangeEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XFocusChangeEvent.window}}
}\par
{\bkmkstart AAAAAAADTL}
{\bkmkend AAAAAAADTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XGCValues Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues}
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GXFunction} {\b function}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b plane_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b foreground}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b background}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b line_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GCLineStyle} {\b line_style}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GCCapStyle} {\b cap_style}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GCJoinStyle} {\b join_style}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GCFillStyle} {\b fill_style}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GCFillRule} {\b fill_rule}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GCArcMode} {\b arc_mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b tile}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b stipple}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b ts_x_origin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b ts_y_origin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b font}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b GCSubwindowMode} {\b subwindow_mode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b graphics_exposures}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b clip_x_origin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b clib_y_origin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b clip_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b dash_offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b dashes}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v arc_mode\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:arc_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GCArcMode} {\b Tao.Platform.X11.XGCValues.arc_mode}}
}\par
{\bkmkstart AAAAAAAEJN}
{\bkmkend AAAAAAAEJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v background\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:background}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGCValues.background}}
}\par
{\bkmkstart AAAAAAAEJO}
{\bkmkend AAAAAAAEJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cap_style\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:cap_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GCCapStyle} {\b Tao.Platform.X11.XGCValues.cap_style}}
}\par
{\bkmkstart AAAAAAAEJP}
{\bkmkend AAAAAAAEJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clib_y_origin\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:clib_y_origin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGCValues.clib_y_origin}}
}\par
{\bkmkstart AAAAAAAEJQ}
{\bkmkend AAAAAAAEJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clip_mask\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:clip_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGCValues.clip_mask}}
}\par
{\bkmkstart AAAAAAAEJR}
{\bkmkend AAAAAAAEJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clip_x_origin\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:clip_x_origin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGCValues.clip_x_origin}}
}\par
{\bkmkstart AAAAAAAEJS}
{\bkmkend AAAAAAAEJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dash_offset\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:dash_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGCValues.dash_offset}}
}\par
{\bkmkstart AAAAAAAEJT}
{\bkmkend AAAAAAAEJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dashes\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:dashes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XGCValues.dashes}}
}\par
{\bkmkstart AAAAAAAEJU}
{\bkmkend AAAAAAAEJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_rule\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:fill_rule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GCFillRule} {\b Tao.Platform.X11.XGCValues.fill_rule}}
}\par
{\bkmkstart AAAAAAAEJV}
{\bkmkend AAAAAAAEJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_style\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:fill_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GCFillStyle} {\b Tao.Platform.X11.XGCValues.fill_style}}
}\par
{\bkmkstart AAAAAAAEJW}
{\bkmkend AAAAAAAEJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v font\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:font}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGCValues.font}}
}\par
{\bkmkstart AAAAAAAEJX}
{\bkmkend AAAAAAAEJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v foreground\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:foreground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGCValues.foreground}}
}\par
{\bkmkstart AAAAAAAEJY}
{\bkmkend AAAAAAAEJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v function\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GXFunction} {\b Tao.Platform.X11.XGCValues.function}}
}\par
{\bkmkstart AAAAAAAEJZ}
{\bkmkend AAAAAAAEJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v graphics_exposures\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:graphics_exposures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XGCValues.graphics_exposures}}
}\par
{\bkmkstart AAAAAAAEKA}
{\bkmkend AAAAAAAEKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v join_style\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:join_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GCJoinStyle} {\b Tao.Platform.X11.XGCValues.join_style}}
}\par
{\bkmkstart AAAAAAAEKB}
{\bkmkend AAAAAAAEKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v line_style\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:line_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GCLineStyle} {\b Tao.Platform.X11.XGCValues.line_style}}
}\par
{\bkmkstart AAAAAAAEKC}
{\bkmkend AAAAAAAEKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v line_width\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:line_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGCValues.line_width}}
}\par
{\bkmkstart AAAAAAAEKD}
{\bkmkend AAAAAAAEKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plane_mask\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:plane_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGCValues.plane_mask}}
}\par
{\bkmkstart AAAAAAAEKE}
{\bkmkend AAAAAAAEKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stipple\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:stipple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGCValues.stipple}}
}\par
{\bkmkstart AAAAAAAEKF}
{\bkmkend AAAAAAAEKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subwindow_mode\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:subwindow_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b GCSubwindowMode} {\b Tao.Platform.X11.XGCValues.subwindow_mode}}
}\par
{\bkmkstart AAAAAAAEKG}
{\bkmkend AAAAAAAEKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tile\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:tile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGCValues.tile}}
}\par
{\bkmkstart AAAAAAAEKH}
{\bkmkend AAAAAAAEKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ts_x_origin\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:ts_x_origin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGCValues.ts_x_origin}}
}\par
{\bkmkstart AAAAAAAEKI}
{\bkmkend AAAAAAAEKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ts_y_origin\:Tao::Platform::X11::XGCValues}
{\xe \v Tao::Platform::X11::XGCValues\:ts_y_origin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGCValues.ts_y_origin}}
}\par
{\bkmkstart AAAAAAAEKJ}
{\bkmkend AAAAAAAEKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XGraphicsExposeEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent}
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b drawable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b major_code}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b minor_code}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v count\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGraphicsExposeEvent.count}}
}\par
{\bkmkstart AAAAAAADVH}
{\bkmkend AAAAAAADVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGraphicsExposeEvent.display}}
}\par
{\bkmkstart AAAAAAADVI}
{\bkmkend AAAAAAADVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawable\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:drawable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGraphicsExposeEvent.drawable}}
}\par
{\bkmkstart AAAAAAADVJ}
{\bkmkend AAAAAAADVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGraphicsExposeEvent.height}}
}\par
{\bkmkstart AAAAAAADVK}
{\bkmkend AAAAAAADVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v major_code\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:major_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGraphicsExposeEvent.major_code}}
}\par
{\bkmkstart AAAAAAADVL}
{\bkmkend AAAAAAADVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minor_code\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:minor_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGraphicsExposeEvent.minor_code}}
}\par
{\bkmkstart AAAAAAADVM}
{\bkmkend AAAAAAADVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XGraphicsExposeEvent.send_event}}
}\par
{\bkmkstart AAAAAAADVN}
{\bkmkend AAAAAAADVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGraphicsExposeEvent.serial}}
}\par
{\bkmkstart AAAAAAADVO}
{\bkmkend AAAAAAADVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XGraphicsExposeEvent.type}}
}\par
{\bkmkstart AAAAAAADVP}
{\bkmkend AAAAAAADVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGraphicsExposeEvent.width}}
}\par
{\bkmkstart AAAAAAADVQ}
{\bkmkend AAAAAAADVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGraphicsExposeEvent.x}}
}\par
{\bkmkstart AAAAAAADVR}
{\bkmkend AAAAAAADVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XGraphicsExposeEvent}
{\xe \v Tao::Platform::X11::XGraphicsExposeEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGraphicsExposeEvent.y}}
}\par
{\bkmkstart AAAAAAADVS}
{\bkmkend AAAAAAADVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XGravityEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent}
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b xevent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGravityEvent.display}}
}\par
{\bkmkstart AAAAAAADYP}
{\bkmkend AAAAAAADYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XGravityEvent.send_event}}
}\par
{\bkmkstart AAAAAAADYQ}
{\bkmkend AAAAAAADYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGravityEvent.serial}}
}\par
{\bkmkstart AAAAAAADYR}
{\bkmkend AAAAAAADYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XGravityEvent.type}}
}\par
{\bkmkstart AAAAAAADYS}
{\bkmkend AAAAAAADYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGravityEvent.window}}
}\par
{\bkmkstart AAAAAAADYT}
{\bkmkend AAAAAAADYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGravityEvent.x}}
}\par
{\bkmkstart AAAAAAADYU}
{\bkmkend AAAAAAADYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xevent\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:xevent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XGravityEvent.xevent}}
}\par
{\bkmkstart AAAAAAADYV}
{\bkmkend AAAAAAADYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XGravityEvent}
{\xe \v Tao::Platform::X11::XGravityEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XGravityEvent.y}}
}\par
{\bkmkstart AAAAAAADYW}
{\bkmkend AAAAAAADYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XIconSize Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XIconSize}
{\xe \v Tao::Platform::X11::XIconSize}
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width_inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height_inc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v height_inc\:Tao::Platform::X11::XIconSize}
{\xe \v Tao::Platform::X11::XIconSize\:height_inc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XIconSize.height_inc}}
}\par
{\bkmkstart AAAAAAAELL}
{\bkmkend AAAAAAAELL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_height\:Tao::Platform::X11::XIconSize}
{\xe \v Tao::Platform::X11::XIconSize\:max_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XIconSize.max_height}}
}\par
{\bkmkstart AAAAAAAELM}
{\bkmkend AAAAAAAELM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_width\:Tao::Platform::X11::XIconSize}
{\xe \v Tao::Platform::X11::XIconSize\:max_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XIconSize.max_width}}
}\par
{\bkmkstart AAAAAAAELN}
{\bkmkend AAAAAAAELN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_height\:Tao::Platform::X11::XIconSize}
{\xe \v Tao::Platform::X11::XIconSize\:min_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XIconSize.min_height}}
}\par
{\bkmkstart AAAAAAAELO}
{\bkmkend AAAAAAAELO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_width\:Tao::Platform::X11::XIconSize}
{\xe \v Tao::Platform::X11::XIconSize\:min_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XIconSize.min_width}}
}\par
{\bkmkstart AAAAAAAELP}
{\bkmkend AAAAAAAELP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width_inc\:Tao::Platform::X11::XIconSize}
{\xe \v Tao::Platform::X11::XIconSize\:width_inc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XIconSize.width_inc}}
}\par
{\bkmkstart AAAAAAAELQ}
{\bkmkend AAAAAAAELQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XKeyBoardState Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState}
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AutoRepeats}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b key_click_percent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bell_percent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b bell_pitch}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b bell_duration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b led_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b global_auto_repeat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AutoRepeats} {\b auto_repeats}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v auto_repeats\:Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState\:auto_repeats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AutoRepeats} {\b Tao.Platform.X11.XKeyBoardState.auto_repeats}}
}\par
{\bkmkstart AAAAAAAEJE}
{\bkmkend AAAAAAAEJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bell_duration\:Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState\:bell_duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.Platform.X11.XKeyBoardState.bell_duration}}
}\par
{\bkmkstart AAAAAAAEJF}
{\bkmkend AAAAAAAEJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bell_percent\:Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState\:bell_percent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XKeyBoardState.bell_percent}}
}\par
{\bkmkstart AAAAAAAEJG}
{\bkmkend AAAAAAAEJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bell_pitch\:Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState\:bell_pitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint {\b Tao.Platform.X11.XKeyBoardState.bell_pitch}}
}\par
{\bkmkstart AAAAAAAEJH}
{\bkmkend AAAAAAAEJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_auto_repeat\:Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState\:global_auto_repeat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XKeyBoardState.global_auto_repeat}}
}\par
{\bkmkstart AAAAAAAEJI}
{\bkmkend AAAAAAAEJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_click_percent\:Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState\:key_click_percent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XKeyBoardState.key_click_percent}}
}\par
{\bkmkstart AAAAAAAEJJ}
{\bkmkend AAAAAAAEJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v led_mask\:Tao::Platform::X11::XKeyBoardState}
{\xe \v Tao::Platform::X11::XKeyBoardState\:led_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Platform.X11.XKeyBoardState.led_mask}}
}\par
{\bkmkstart AAAAAAAEJK}
{\bkmkend AAAAAAAEJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XKeyEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent}
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b subwindow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b state}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b keycode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b same_screen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeyEvent.display}}
}\par
{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keycode\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:keycode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XKeyEvent.keycode}}
}\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeyEvent.root}}
}\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v same_screen\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:same_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XKeyEvent.same_screen}}
}\par
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XKeyEvent.send_event}}
}\par
{\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeyEvent.serial}}
}\par
{\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XKeyEvent.state}}
}\par
{\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subwindow\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:subwindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeyEvent.subwindow}}
}\par
{\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeyEvent.time}}
}\par
{\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XKeyEvent.type}}
}\par
{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeyEvent.window}}
}\par
{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XKeyEvent.x}}
}\par
{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x_root\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:x_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XKeyEvent.x_root}}
}\par
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XKeyEvent.y}}
}\par
{\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y_root\:Tao::Platform::X11::XKeyEvent}
{\xe \v Tao::Platform::X11::XKeyEvent\:y_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XKeyEvent.y_root}}
}\par
{\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XKeymapEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent}
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector5}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector6}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector7}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector9}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector10}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector12}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector13}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector14}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector15}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector16}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector17}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector18}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector19}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector20}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector21}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector22}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector23}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector24}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector25}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector26}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector27}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector28}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector29}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector30}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b key_vector31}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeymapEvent.display}}
}\par
{\bkmkstart AAAAAAADTM}
{\bkmkend AAAAAAADTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector0\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector0}}
}\par
{\bkmkstart AAAAAAADTN}
{\bkmkend AAAAAAADTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector1\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector1}}
}\par
{\bkmkstart AAAAAAADTO}
{\bkmkend AAAAAAADTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector10\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector10}}
}\par
{\bkmkstart AAAAAAADTP}
{\bkmkend AAAAAAADTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector11\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector11}}
}\par
{\bkmkstart AAAAAAADTQ}
{\bkmkend AAAAAAADTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector12\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector12}}
}\par
{\bkmkstart AAAAAAADTR}
{\bkmkend AAAAAAADTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector13\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector13}}
}\par
{\bkmkstart AAAAAAADTS}
{\bkmkend AAAAAAADTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector14\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector14}}
}\par
{\bkmkstart AAAAAAADTT}
{\bkmkend AAAAAAADTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector15\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector15}}
}\par
{\bkmkstart AAAAAAADTU}
{\bkmkend AAAAAAADTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector16\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector16}}
}\par
{\bkmkstart AAAAAAADTV}
{\bkmkend AAAAAAADTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector17\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector17}}
}\par
{\bkmkstart AAAAAAADTW}
{\bkmkend AAAAAAADTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector18\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector18}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector18}}
}\par
{\bkmkstart AAAAAAADTX}
{\bkmkend AAAAAAADTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector19\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector19}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector19}}
}\par
{\bkmkstart AAAAAAADTY}
{\bkmkend AAAAAAADTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector2\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector2}}
}\par
{\bkmkstart AAAAAAADTZ}
{\bkmkend AAAAAAADTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector20\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector20}}
}\par
{\bkmkstart AAAAAAADUA}
{\bkmkend AAAAAAADUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector21\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector21}}
}\par
{\bkmkstart AAAAAAADUB}
{\bkmkend AAAAAAADUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector22\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector22}}
}\par
{\bkmkstart AAAAAAADUC}
{\bkmkend AAAAAAADUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector23\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector23}}
}\par
{\bkmkstart AAAAAAADUD}
{\bkmkend AAAAAAADUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector24\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector24}}
}\par
{\bkmkstart AAAAAAADUE}
{\bkmkend AAAAAAADUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector25\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector25}}
}\par
{\bkmkstart AAAAAAADUF}
{\bkmkend AAAAAAADUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector26\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector26}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector26}}
}\par
{\bkmkstart AAAAAAADUG}
{\bkmkend AAAAAAADUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector27\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector27}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector27}}
}\par
{\bkmkstart AAAAAAADUH}
{\bkmkend AAAAAAADUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector28\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector28}}
}\par
{\bkmkstart AAAAAAADUI}
{\bkmkend AAAAAAADUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector29\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector29}}
}\par
{\bkmkstart AAAAAAADUJ}
{\bkmkend AAAAAAADUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector3\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector3}}
}\par
{\bkmkstart AAAAAAADUK}
{\bkmkend AAAAAAADUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector30\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector30}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector30}}
}\par
{\bkmkstart AAAAAAADUL}
{\bkmkend AAAAAAADUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector31\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector31}}
}\par
{\bkmkstart AAAAAAADUM}
{\bkmkend AAAAAAADUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector4\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector4}}
}\par
{\bkmkstart AAAAAAADUN}
{\bkmkend AAAAAAADUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector5\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector5}}
}\par
{\bkmkstart AAAAAAADUO}
{\bkmkend AAAAAAADUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector6\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector6}}
}\par
{\bkmkstart AAAAAAADUP}
{\bkmkend AAAAAAADUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector7\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector7}}
}\par
{\bkmkstart AAAAAAADUQ}
{\bkmkend AAAAAAADUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector8\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector8}}
}\par
{\bkmkstart AAAAAAADUR}
{\bkmkend AAAAAAADUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key_vector9\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:key_vector9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XKeymapEvent.key_vector9}}
}\par
{\bkmkstart AAAAAAADUS}
{\bkmkend AAAAAAADUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XKeymapEvent.send_event}}
}\par
{\bkmkstart AAAAAAADUT}
{\bkmkend AAAAAAADUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeymapEvent.serial}}
}\par
{\bkmkstart AAAAAAADUU}
{\bkmkend AAAAAAADUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XKeymapEvent.type}}
}\par
{\bkmkstart AAAAAAADUV}
{\bkmkend AAAAAAADUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XKeymapEvent}
{\xe \v Tao::Platform::X11::XKeymapEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XKeymapEvent.window}}
}\par
{\bkmkstart AAAAAAADUW}
{\bkmkend AAAAAAADUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XMapEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent}
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b xevent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b override_redirect}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapEvent.display}}
}\par
{\bkmkstart AAAAAAADXF}
{\bkmkend AAAAAAADXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v override_redirect\:Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent\:override_redirect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XMapEvent.override_redirect}}
}\par
{\bkmkstart AAAAAAADXG}
{\bkmkend AAAAAAADXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XMapEvent.send_event}}
}\par
{\bkmkstart AAAAAAADXH}
{\bkmkend AAAAAAADXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapEvent.serial}}
}\par
{\bkmkstart AAAAAAADXI}
{\bkmkend AAAAAAADXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XMapEvent.type}}
}\par
{\bkmkstart AAAAAAADXJ}
{\bkmkend AAAAAAADXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapEvent.window}}
}\par
{\bkmkstart AAAAAAADXK}
{\bkmkend AAAAAAADXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xevent\:Tao::Platform::X11::XMapEvent}
{\xe \v Tao::Platform::X11::XMapEvent\:xevent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapEvent.xevent}}
}\par
{\bkmkstart AAAAAAADXL}
{\bkmkend AAAAAAADXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XMappingEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent}
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b request}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b first_keycode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b count}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v count\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMappingEvent.count}}
}\par
{\bkmkstart AAAAAAAECI}
{\bkmkend AAAAAAAECI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMappingEvent.display}}
}\par
{\bkmkstart AAAAAAAECJ}
{\bkmkend AAAAAAAECJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v first_keycode\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:first_keycode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMappingEvent.first_keycode}}
}\par
{\bkmkstart AAAAAAAECK}
{\bkmkend AAAAAAAECK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v request\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:request}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMappingEvent.request}}
}\par
{\bkmkstart AAAAAAAECL}
{\bkmkend AAAAAAAECL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XMappingEvent.send_event}}
}\par
{\bkmkstart AAAAAAAECM}
{\bkmkend AAAAAAAECM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMappingEvent.serial}}
}\par
{\bkmkstart AAAAAAAECN}
{\bkmkend AAAAAAAECN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XMappingEvent.type}}
}\par
{\bkmkstart AAAAAAAECO}
{\bkmkend AAAAAAAECO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XMappingEvent}
{\xe \v Tao::Platform::X11::XMappingEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMappingEvent.window}}
}\par
{\bkmkstart AAAAAAAECP}
{\bkmkend AAAAAAAECP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XMapRequestEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XMapRequestEvent}
{\xe \v Tao::Platform::X11::XMapRequestEvent}
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b parent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XMapRequestEvent}
{\xe \v Tao::Platform::X11::XMapRequestEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapRequestEvent.display}}
}\par
{\bkmkstart AAAAAAADXM}
{\bkmkend AAAAAAADXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:Tao::Platform::X11::XMapRequestEvent}
{\xe \v Tao::Platform::X11::XMapRequestEvent\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapRequestEvent.parent}}
}\par
{\bkmkstart AAAAAAADXN}
{\bkmkend AAAAAAADXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XMapRequestEvent}
{\xe \v Tao::Platform::X11::XMapRequestEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XMapRequestEvent.send_event}}
}\par
{\bkmkstart AAAAAAADXO}
{\bkmkend AAAAAAADXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XMapRequestEvent}
{\xe \v Tao::Platform::X11::XMapRequestEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapRequestEvent.serial}}
}\par
{\bkmkstart AAAAAAADXP}
{\bkmkend AAAAAAADXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XMapRequestEvent}
{\xe \v Tao::Platform::X11::XMapRequestEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XMapRequestEvent.type}}
}\par
{\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XMapRequestEvent}
{\xe \v Tao::Platform::X11::XMapRequestEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMapRequestEvent.window}}
}\par
{\bkmkstart AAAAAAADXR}
{\bkmkend AAAAAAADXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XModifierKeymap Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XModifierKeymap}
{\xe \v Tao::Platform::X11::XModifierKeymap}
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_keypermod}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b modifiermap}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v max_keypermod\:Tao::Platform::X11::XModifierKeymap}
{\xe \v Tao::Platform::X11::XModifierKeymap\:max_keypermod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XModifierKeymap.max_keypermod}}
}\par
{\bkmkstart AAAAAAAEJC}
{\bkmkend AAAAAAAEJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v modifiermap\:Tao::Platform::X11::XModifierKeymap}
{\xe \v Tao::Platform::X11::XModifierKeymap\:modifiermap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Platform.X11.XModifierKeymap.modifiermap}}
}\par
{\bkmkstart AAAAAAAEJD}
{\bkmkend AAAAAAAEJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XMotionEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent}
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b subwindow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y_root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b state}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal byte {\b is_hint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b same_screen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMotionEvent.display}}
}\par
{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v is_hint\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:is_hint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal byte {\b Tao.Platform.X11.XMotionEvent.is_hint}}
}\par
{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMotionEvent.root}}
}\par
{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v same_screen\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:same_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XMotionEvent.same_screen}}
}\par
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XMotionEvent.send_event}}
}\par
{\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMotionEvent.serial}}
}\par
{\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMotionEvent.state}}
}\par
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subwindow\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:subwindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMotionEvent.subwindow}}
}\par
{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMotionEvent.time}}
}\par
{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XMotionEvent.type}}
}\par
{\bkmkstart AAAAAAADSI}
{\bkmkend AAAAAAADSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XMotionEvent.window}}
}\par
{\bkmkstart AAAAAAADSJ}
{\bkmkend AAAAAAADSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMotionEvent.x}}
}\par
{\bkmkstart AAAAAAADSK}
{\bkmkend AAAAAAADSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x_root\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:x_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMotionEvent.x_root}}
}\par
{\bkmkstart AAAAAAADSL}
{\bkmkend AAAAAAADSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMotionEvent.y}}
}\par
{\bkmkstart AAAAAAADSM}
{\bkmkend AAAAAAADSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y_root\:Tao::Platform::X11::XMotionEvent}
{\xe \v Tao::Platform::X11::XMotionEvent\:y_root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XMotionEvent.y_root}}
}\par
{\bkmkstart AAAAAAADSN}
{\bkmkend AAAAAAADSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XNoExposeEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent}
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b drawable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b major_code}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b minor_code}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XNoExposeEvent.display}}
}\par
{\bkmkstart AAAAAAADVT}
{\bkmkend AAAAAAADVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawable\:Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent\:drawable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XNoExposeEvent.drawable}}
}\par
{\bkmkstart AAAAAAADVU}
{\bkmkend AAAAAAADVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v major_code\:Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent\:major_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XNoExposeEvent.major_code}}
}\par
{\bkmkstart AAAAAAADVV}
{\bkmkend AAAAAAADVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minor_code\:Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent\:minor_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XNoExposeEvent.minor_code}}
}\par
{\bkmkstart AAAAAAADVW}
{\bkmkend AAAAAAADVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XNoExposeEvent.send_event}}
}\par
{\bkmkstart AAAAAAADVX}
{\bkmkend AAAAAAADVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XNoExposeEvent.serial}}
}\par
{\bkmkstart AAAAAAADVY}
{\bkmkend AAAAAAADVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XNoExposeEvent}
{\xe \v Tao::Platform::X11::XNoExposeEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XNoExposeEvent.type}}
}\par
{\bkmkstart AAAAAAADVZ}
{\bkmkend AAAAAAADVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XPropertyEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent}
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b atom}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b state}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v atom\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:atom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XPropertyEvent.atom}}
}\par
{\bkmkstart AAAAAAAEAG}
{\bkmkend AAAAAAAEAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XPropertyEvent.display}}
}\par
{\bkmkstart AAAAAAAEAH}
{\bkmkend AAAAAAAEAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XPropertyEvent.send_event}}
}\par
{\bkmkstart AAAAAAAEAI}
{\bkmkend AAAAAAAEAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XPropertyEvent.serial}}
}\par
{\bkmkstart AAAAAAAEAJ}
{\bkmkend AAAAAAAEAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XPropertyEvent.state}}
}\par
{\bkmkstart AAAAAAAEAK}
{\bkmkend AAAAAAAEAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XPropertyEvent.time}}
}\par
{\bkmkstart AAAAAAAEAL}
{\bkmkend AAAAAAAEAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XPropertyEvent.type}}
}\par
{\bkmkstart AAAAAAAEAM}
{\bkmkend AAAAAAAEAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XPropertyEvent}
{\xe \v Tao::Platform::X11::XPropertyEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XPropertyEvent.window}}
}\par
{\bkmkstart AAAAAAAEAN}
{\bkmkend AAAAAAAEAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XReparentEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent}
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b xevent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b parent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b override_redirect}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XReparentEvent.display}}
}\par
{\bkmkstart AAAAAAADXS}
{\bkmkend AAAAAAADXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v override_redirect\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:override_redirect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XReparentEvent.override_redirect}}
}\par
{\bkmkstart AAAAAAADXT}
{\bkmkend AAAAAAADXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XReparentEvent.parent}}
}\par
{\bkmkstart AAAAAAADXU}
{\bkmkend AAAAAAADXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XReparentEvent.send_event}}
}\par
{\bkmkstart AAAAAAADXV}
{\bkmkend AAAAAAADXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XReparentEvent.serial}}
}\par
{\bkmkstart AAAAAAADXW}
{\bkmkend AAAAAAADXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XReparentEvent.type}}
}\par
{\bkmkstart AAAAAAADXX}
{\bkmkend AAAAAAADXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XReparentEvent.window}}
}\par
{\bkmkstart AAAAAAADXY}
{\bkmkend AAAAAAADXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XReparentEvent.x}}
}\par
{\bkmkstart AAAAAAADXZ}
{\bkmkend AAAAAAADXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xevent\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:xevent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XReparentEvent.xevent}}
}\par
{\bkmkstart AAAAAAADYA}
{\bkmkend AAAAAAADYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XReparentEvent}
{\xe \v Tao::Platform::X11::XReparentEvent\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XReparentEvent.y}}
}\par
{\bkmkstart AAAAAAADYB}
{\bkmkend AAAAAAADYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XResizeRequestEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent}
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XResizeRequestEvent.display}}
}\par
{\bkmkstart AAAAAAADYX}
{\bkmkend AAAAAAADYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XResizeRequestEvent.height}}
}\par
{\bkmkstart AAAAAAADYY}
{\bkmkend AAAAAAADYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XResizeRequestEvent.send_event}}
}\par
{\bkmkstart AAAAAAADYZ}
{\bkmkend AAAAAAADYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XResizeRequestEvent.serial}}
}\par
{\bkmkstart AAAAAAADZA}
{\bkmkend AAAAAAADZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XResizeRequestEvent.type}}
}\par
{\bkmkstart AAAAAAADZB}
{\bkmkend AAAAAAADZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XResizeRequestEvent.width}}
}\par
{\bkmkstart AAAAAAADZC}
{\bkmkend AAAAAAADZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XResizeRequestEvent}
{\xe \v Tao::Platform::X11::XResizeRequestEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XResizeRequestEvent.window}}
}\par
{\bkmkstart AAAAAAADZD}
{\bkmkend AAAAAAADZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XScreen Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen}
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b ext_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b mwidth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b mheight}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b ndepths}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b depths}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b root_depth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root_visual}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b default_gc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b cmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b white_pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b black_pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_maps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_maps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b backing_store}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b save_unders}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root_input_mask}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v backing_store\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:backing_store}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.backing_store}}
}\par
{\bkmkstart AAAAAAAEHV}
{\bkmkend AAAAAAAEHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v black_pixel\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:black_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.black_pixel}}
}\par
{\bkmkstart AAAAAAAEHW}
{\bkmkend AAAAAAAEHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cmap\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:cmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.cmap}}
}\par
{\bkmkstart AAAAAAAEHX}
{\bkmkend AAAAAAAEHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_gc\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:default_gc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.default_gc}}
}\par
{\bkmkstart AAAAAAAEHY}
{\bkmkend AAAAAAAEHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v depths\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:depths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.depths}}
}\par
{\bkmkstart AAAAAAAEHZ}
{\bkmkend AAAAAAAEHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v display\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.display}}
}\par
{\bkmkstart AAAAAAAEIA}
{\bkmkend AAAAAAAEIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ext_data\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:ext_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.ext_data}}
}\par
{\bkmkstart AAAAAAAEIB}
{\bkmkend AAAAAAAEIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.height}}
}\par
{\bkmkstart AAAAAAAEIC}
{\bkmkend AAAAAAAEIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_maps\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:max_maps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.max_maps}}
}\par
{\bkmkstart AAAAAAAEID}
{\bkmkend AAAAAAAEID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mheight\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:mheight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.mheight}}
}\par
{\bkmkstart AAAAAAAEIE}
{\bkmkend AAAAAAAEIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_maps\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:min_maps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.min_maps}}
}\par
{\bkmkstart AAAAAAAEIF}
{\bkmkend AAAAAAAEIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mwidth\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:mwidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.mwidth}}
}\par
{\bkmkstart AAAAAAAEIG}
{\bkmkend AAAAAAAEIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ndepths\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:ndepths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.ndepths}}
}\par
{\bkmkstart AAAAAAAEIH}
{\bkmkend AAAAAAAEIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.root}}
}\par
{\bkmkstart AAAAAAAEII}
{\bkmkend AAAAAAAEII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root_depth\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:root_depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.root_depth}}
}\par
{\bkmkstart AAAAAAAEIJ}
{\bkmkend AAAAAAAEIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root_input_mask\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:root_input_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.root_input_mask}}
}\par
{\bkmkstart AAAAAAAEIK}
{\bkmkend AAAAAAAEIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root_visual\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:root_visual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.root_visual}}
}\par
{\bkmkstart AAAAAAAEIL}
{\bkmkend AAAAAAAEIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v save_unders\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:save_unders}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XScreen.save_unders}}
}\par
{\bkmkstart AAAAAAAEIM}
{\bkmkend AAAAAAAEIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v white_pixel\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:white_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XScreen.white_pixel}}
}\par
{\bkmkstart AAAAAAAEIN}
{\bkmkend AAAAAAAEIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XScreen}
{\xe \v Tao::Platform::X11::XScreen\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XScreen.width}}
}\par
{\bkmkstart AAAAAAAEIO}
{\bkmkend AAAAAAAEIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XSelectionClearEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent}
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b selection}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionClearEvent.display}}
}\par
{\bkmkstart AAAAAAAEAO}
{\bkmkend AAAAAAAEAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selection\:Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent\:selection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionClearEvent.selection}}
}\par
{\bkmkstart AAAAAAAEAP}
{\bkmkend AAAAAAAEAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XSelectionClearEvent.send_event}}
}\par
{\bkmkstart AAAAAAAEAQ}
{\bkmkend AAAAAAAEAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionClearEvent.serial}}
}\par
{\bkmkstart AAAAAAAEAR}
{\bkmkend AAAAAAAEAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionClearEvent.time}}
}\par
{\bkmkstart AAAAAAAEAS}
{\bkmkend AAAAAAAEAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XSelectionClearEvent.type}}
}\par
{\bkmkstart AAAAAAAEAT}
{\bkmkend AAAAAAAEAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XSelectionClearEvent}
{\xe \v Tao::Platform::X11::XSelectionClearEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionClearEvent.window}}
}\par
{\bkmkstart AAAAAAAEAU}
{\bkmkend AAAAAAAEAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XSelectionEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent}
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b requestor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b selection}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b target}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b property}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionEvent.display}}
}\par
{\bkmkstart AAAAAAAEBF}
{\bkmkend AAAAAAAEBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v property\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:property}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionEvent.property}}
}\par
{\bkmkstart AAAAAAAEBG}
{\bkmkend AAAAAAAEBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v requestor\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:requestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionEvent.requestor}}
}\par
{\bkmkstart AAAAAAAEBH}
{\bkmkend AAAAAAAEBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selection\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:selection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionEvent.selection}}
}\par
{\bkmkstart AAAAAAAEBI}
{\bkmkend AAAAAAAEBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XSelectionEvent.send_event}}
}\par
{\bkmkstart AAAAAAAEBJ}
{\bkmkend AAAAAAAEBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionEvent.serial}}
}\par
{\bkmkstart AAAAAAAEBK}
{\bkmkend AAAAAAAEBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionEvent.target}}
}\par
{\bkmkstart AAAAAAAEBL}
{\bkmkend AAAAAAAEBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionEvent.time}}
}\par
{\bkmkstart AAAAAAAEBM}
{\bkmkend AAAAAAAEBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XSelectionEvent}
{\xe \v Tao::Platform::X11::XSelectionEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XSelectionEvent.type}}
}\par
{\bkmkstart AAAAAAAEBN}
{\bkmkend AAAAAAAEBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XSelectionRequestEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent}
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b owner}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b requestor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b selection}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b target}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b property}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b time}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.display}}
}\par
{\bkmkstart AAAAAAAEAV}
{\bkmkend AAAAAAAEAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v owner\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:owner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.owner}}
}\par
{\bkmkstart AAAAAAAEAW}
{\bkmkend AAAAAAAEAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v property\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:property}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.property}}
}\par
{\bkmkstart AAAAAAAEAX}
{\bkmkend AAAAAAAEAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v requestor\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:requestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.requestor}}
}\par
{\bkmkstart AAAAAAAEAY}
{\bkmkend AAAAAAAEAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selection\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:selection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.selection}}
}\par
{\bkmkstart AAAAAAAEAZ}
{\bkmkend AAAAAAAEAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XSelectionRequestEvent.send_event}}
}\par
{\bkmkstart AAAAAAAEBA}
{\bkmkend AAAAAAAEBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.serial}}
}\par
{\bkmkstart AAAAAAAEBB}
{\bkmkend AAAAAAAEBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.target}}
}\par
{\bkmkstart AAAAAAAEBC}
{\bkmkend AAAAAAAEBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSelectionRequestEvent.time}}
}\par
{\bkmkstart AAAAAAAEBD}
{\bkmkend AAAAAAAEBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XSelectionRequestEvent}
{\xe \v Tao::Platform::X11::XSelectionRequestEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XSelectionRequestEvent.type}}
}\par
{\bkmkstart AAAAAAAEBE}
{\bkmkend AAAAAAAEBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XSetWindowAttributes Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes}
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b background_pixmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b background_pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b border_pixmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b border_pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b Gravity} {\b bit_gravity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b Gravity} {\b win_gravity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b backing_store}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b backing_planes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b backing_pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b save_under}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b event_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b do_not_propagate_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b override_redirect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b colormap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b cursor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v background_pixel\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:background_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.background_pixel}}
}\par
{\bkmkstart AAAAAAAEFO}
{\bkmkend AAAAAAAEFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v background_pixmap\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:background_pixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.background_pixmap}}
}\par
{\bkmkstart AAAAAAAEFP}
{\bkmkend AAAAAAAEFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backing_pixel\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:backing_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.backing_pixel}}
}\par
{\bkmkstart AAAAAAAEFQ}
{\bkmkend AAAAAAAEFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backing_planes\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:backing_planes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.backing_planes}}
}\par
{\bkmkstart AAAAAAAEFR}
{\bkmkend AAAAAAAEFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backing_store\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:backing_store}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSetWindowAttributes.backing_store}}
}\par
{\bkmkstart AAAAAAAEFS}
{\bkmkend AAAAAAAEFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bit_gravity\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:bit_gravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b Gravity} {\b Tao.Platform.X11.XSetWindowAttributes.bit_gravity}}
}\par
{\bkmkstart AAAAAAAEFT}
{\bkmkend AAAAAAAEFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v border_pixel\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:border_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.border_pixel}}
}\par
{\bkmkstart AAAAAAAEFU}
{\bkmkend AAAAAAAEFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v border_pixmap\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:border_pixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.border_pixmap}}
}\par
{\bkmkstart AAAAAAAEFV}
{\bkmkend AAAAAAAEFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colormap\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:colormap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.colormap}}
}\par
{\bkmkstart AAAAAAAEFW}
{\bkmkend AAAAAAAEFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cursor\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.cursor}}
}\par
{\bkmkstart AAAAAAAEFX}
{\bkmkend AAAAAAAEFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v do_not_propagate_mask\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:do_not_propagate_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.do_not_propagate_mask}}
}\par
{\bkmkstart AAAAAAAEFY}
{\bkmkend AAAAAAAEFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v event_mask\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:event_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSetWindowAttributes.event_mask}}
}\par
{\bkmkstart AAAAAAAEFZ}
{\bkmkend AAAAAAAEFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v override_redirect\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:override_redirect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XSetWindowAttributes.override_redirect}}
}\par
{\bkmkstart AAAAAAAEGA}
{\bkmkend AAAAAAAEGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v save_under\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:save_under}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XSetWindowAttributes.save_under}}
}\par
{\bkmkstart AAAAAAAEGB}
{\bkmkend AAAAAAAEGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v win_gravity\:Tao::Platform::X11::XSetWindowAttributes}
{\xe \v Tao::Platform::X11::XSetWindowAttributes\:win_gravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b Gravity} {\b Tao.Platform.X11.XSetWindowAttributes.win_gravity}}
}\par
{\bkmkstart AAAAAAAEGC}
{\bkmkend AAAAAAAEGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XSizeHints Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints}
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width_inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height_inc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_aspect_x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b min_aspect_y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_aspect_x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b max_aspect_y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b base_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b base_height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b win_gravity}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v base_height\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:base_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.base_height}}
}\par
{\bkmkstart AAAAAAAEKK}
{\bkmkend AAAAAAAEKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v base_width\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:base_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.base_width}}
}\par
{\bkmkstart AAAAAAAEKL}
{\bkmkend AAAAAAAEKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v flags\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XSizeHints.flags}}
}\par
{\bkmkstart AAAAAAAEKM}
{\bkmkend AAAAAAAEKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.height}}
}\par
{\bkmkstart AAAAAAAEKN}
{\bkmkend AAAAAAAEKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height_inc\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:height_inc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.height_inc}}
}\par
{\bkmkstart AAAAAAAEKO}
{\bkmkend AAAAAAAEKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_aspect_x\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:max_aspect_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.max_aspect_x}}
}\par
{\bkmkstart AAAAAAAEKP}
{\bkmkend AAAAAAAEKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_aspect_y\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:max_aspect_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.max_aspect_y}}
}\par
{\bkmkstart AAAAAAAEKQ}
{\bkmkend AAAAAAAEKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_height\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:max_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.max_height}}
}\par
{\bkmkstart AAAAAAAEKR}
{\bkmkend AAAAAAAEKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_width\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:max_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.max_width}}
}\par
{\bkmkstart AAAAAAAEKS}
{\bkmkend AAAAAAAEKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_aspect_x\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:min_aspect_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.min_aspect_x}}
}\par
{\bkmkstart AAAAAAAEKT}
{\bkmkend AAAAAAAEKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_aspect_y\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:min_aspect_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.min_aspect_y}}
}\par
{\bkmkstart AAAAAAAEKU}
{\bkmkend AAAAAAAEKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_height\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:min_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.min_height}}
}\par
{\bkmkstart AAAAAAAEKV}
{\bkmkend AAAAAAAEKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_width\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:min_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.min_width}}
}\par
{\bkmkstart AAAAAAAEKW}
{\bkmkend AAAAAAAEKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.width}}
}\par
{\bkmkstart AAAAAAAEKX}
{\bkmkend AAAAAAAEKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width_inc\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:width_inc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.width_inc}}
}\par
{\bkmkstart AAAAAAAEKY}
{\bkmkend AAAAAAAEKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v win_gravity\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:win_gravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.win_gravity}}
}\par
{\bkmkstart AAAAAAAEKZ}
{\bkmkend AAAAAAAEKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.x}}
}\par
{\bkmkstart AAAAAAAELA}
{\bkmkend AAAAAAAELA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XSizeHints}
{\xe \v Tao::Platform::X11::XSizeHints\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XSizeHints.y}}
}\par
{\bkmkstart AAAAAAAELB}
{\bkmkend AAAAAAAELB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XStandardColormap Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap}
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b colormap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b red_max}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b red_mult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b green_max}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b green_mult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b blue_max}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b blue_mult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b base_pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b visualid}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b killid}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v base_pixel\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:base_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.base_pixel}}
}\par
{\bkmkstart AAAAAAAEHF}
{\bkmkend AAAAAAAEHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v blue_max\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:blue_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.blue_max}}
}\par
{\bkmkstart AAAAAAAEHG}
{\bkmkend AAAAAAAEHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v blue_mult\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:blue_mult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.blue_mult}}
}\par
{\bkmkstart AAAAAAAEHH}
{\bkmkend AAAAAAAEHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colormap\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:colormap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.colormap}}
}\par
{\bkmkstart AAAAAAAEHI}
{\bkmkend AAAAAAAEHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v green_max\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:green_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.green_max}}
}\par
{\bkmkstart AAAAAAAEHJ}
{\bkmkend AAAAAAAEHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v green_mult\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:green_mult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.green_mult}}
}\par
{\bkmkstart AAAAAAAEHK}
{\bkmkend AAAAAAAEHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v killid\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:killid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.killid}}
}\par
{\bkmkstart AAAAAAAEHL}
{\bkmkend AAAAAAAEHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v red_max\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:red_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.red_max}}
}\par
{\bkmkstart AAAAAAAEHM}
{\bkmkend AAAAAAAEHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v red_mult\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:red_mult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.red_mult}}
}\par
{\bkmkstart AAAAAAAEHN}
{\bkmkend AAAAAAAEHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visualid\:Tao::Platform::X11::XStandardColormap}
{\xe \v Tao::Platform::X11::XStandardColormap\:visualid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XStandardColormap.visualid}}
}\par
{\bkmkstart AAAAAAAEHO}
{\bkmkend AAAAAAAEHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XTextProperty Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XTextProperty}
{\xe \v Tao::Platform::X11::XTextProperty}
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal string {\b value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b encoding}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b format}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b nitems}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v encoding\:Tao::Platform::X11::XTextProperty}
{\xe \v Tao::Platform::X11::XTextProperty\:encoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XTextProperty.encoding}}
}\par
{\bkmkstart AAAAAAAEHB}
{\bkmkend AAAAAAAEHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v format\:Tao::Platform::X11::XTextProperty}
{\xe \v Tao::Platform::X11::XTextProperty\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XTextProperty.format}}
}\par
{\bkmkstart AAAAAAAEHC}
{\bkmkend AAAAAAAEHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nitems\:Tao::Platform::X11::XTextProperty}
{\xe \v Tao::Platform::X11::XTextProperty\:nitems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XTextProperty.nitems}}
}\par
{\bkmkstart AAAAAAAEHD}
{\bkmkend AAAAAAAEHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:Tao::Platform::X11::XTextProperty}
{\xe \v Tao::Platform::X11::XTextProperty\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal string {\b Tao.Platform.X11.XTextProperty.value}}
}\par
{\bkmkstart AAAAAAAEHE}
{\bkmkend AAAAAAAEHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XUnmapEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent}
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b xevent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b from_configure}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XUnmapEvent.display}}
}\par
{\bkmkstart AAAAAAADWY}
{\bkmkend AAAAAAADWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v from_configure\:Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent\:from_configure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XUnmapEvent.from_configure}}
}\par
{\bkmkstart AAAAAAADWZ}
{\bkmkend AAAAAAADWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XUnmapEvent.send_event}}
}\par
{\bkmkstart AAAAAAADXA}
{\bkmkend AAAAAAADXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XUnmapEvent.serial}}
}\par
{\bkmkstart AAAAAAADXB}
{\bkmkend AAAAAAADXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XUnmapEvent.type}}
}\par
{\bkmkstart AAAAAAADXC}
{\bkmkend AAAAAAADXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XUnmapEvent.window}}
}\par
{\bkmkstart AAAAAAADXD}
{\bkmkend AAAAAAADXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xevent\:Tao::Platform::X11::XUnmapEvent}
{\xe \v Tao::Platform::X11::XUnmapEvent\:xevent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XUnmapEvent.xevent}}
}\par
{\bkmkstart AAAAAAADXE}
{\bkmkend AAAAAAADXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XVisibilityEvent Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XVisibilityEvent}
{\xe \v Tao::Platform::X11::XVisibilityEvent}
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XEventName} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b serial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b send_event}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b display}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b state}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v display\:Tao::Platform::X11::XVisibilityEvent}
{\xe \v Tao::Platform::X11::XVisibilityEvent\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XVisibilityEvent.display}}
}\par
{\bkmkstart AAAAAAADWA}
{\bkmkend AAAAAAADWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v send_event\:Tao::Platform::X11::XVisibilityEvent}
{\xe \v Tao::Platform::X11::XVisibilityEvent\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XVisibilityEvent.send_event}}
}\par
{\bkmkstart AAAAAAADWB}
{\bkmkend AAAAAAADWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v serial\:Tao::Platform::X11::XVisibilityEvent}
{\xe \v Tao::Platform::X11::XVisibilityEvent\:serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XVisibilityEvent.serial}}
}\par
{\bkmkstart AAAAAAADWC}
{\bkmkend AAAAAAADWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Tao::Platform::X11::XVisibilityEvent}
{\xe \v Tao::Platform::X11::XVisibilityEvent\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XVisibilityEvent.state}}
}\par
{\bkmkstart AAAAAAADWD}
{\bkmkend AAAAAAADWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Tao::Platform::X11::XVisibilityEvent}
{\xe \v Tao::Platform::X11::XVisibilityEvent\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XEventName} {\b Tao.Platform.X11.XVisibilityEvent.type}}
}\par
{\bkmkstart AAAAAAADWE}
{\bkmkend AAAAAAADWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window\:Tao::Platform::X11::XVisibilityEvent}
{\xe \v Tao::Platform::X11::XVisibilityEvent\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XVisibilityEvent.window}}
}\par
{\bkmkstart AAAAAAADWF}
{\bkmkend AAAAAAADWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XVisualInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo}
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b visual}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b visualid}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b screen}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b depth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b redMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b greenMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b blueMask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b colormap_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bits_per_rgb}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.Platform.X11.XVisualInfo.ToString ()}
}\par
{\bkmkstart AAAAAAAEFE}
{\bkmkend AAAAAAAEFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bits_per_rgb\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:bits_per_rgb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XVisualInfo.bits_per_rgb}}
}\par
{\bkmkstart AAAAAAAEFF}
{\bkmkend AAAAAAAEFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v blueMask\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:blueMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long {\b Tao.Platform.X11.XVisualInfo.blueMask}}
}\par
{\bkmkstart AAAAAAAEFG}
{\bkmkend AAAAAAAEFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v colormap_size\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:colormap_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XVisualInfo.colormap_size}}
}\par
{\bkmkstart AAAAAAAEFH}
{\bkmkend AAAAAAAEFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v depth\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XVisualInfo.depth}}
}\par
{\bkmkstart AAAAAAAEFI}
{\bkmkend AAAAAAAEFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v greenMask\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:greenMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long {\b Tao.Platform.X11.XVisualInfo.greenMask}}
}\par
{\bkmkstart AAAAAAAEFJ}
{\bkmkend AAAAAAAEFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v redMask\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:redMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long {\b Tao.Platform.X11.XVisualInfo.redMask}}
}\par
{\bkmkstart AAAAAAAEFK}
{\bkmkend AAAAAAAEFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v screen\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b Tao.Platform.X11.XVisualInfo.screen}}
}\par
{\bkmkstart AAAAAAAEFL}
{\bkmkend AAAAAAAEFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v visual\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:visual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Platform.X11.XVisualInfo.visual}}
}\par
{\bkmkstart AAAAAAAEFM}
{\bkmkend AAAAAAAEFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v visualid\:Tao::Platform::X11::XVisualInfo}
{\xe \v Tao::Platform::X11::XVisualInfo\:visualid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr {\b Tao.Platform.X11.XVisualInfo.visualid}}
}\par
{\bkmkstart AAAAAAAEFN}
{\bkmkend AAAAAAAEFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XWindowAttributes Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes}
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b border_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b depth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b visual}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b c_class}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b Gravity} {\b bit_gravity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b Gravity} {\b win_gravity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b backing_store}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b backing_planes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b backing_pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b save_under}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b colormap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b map_installed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b MapState} {\b map_state}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b all_event_masks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b your_event_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b do_not_propagate_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b override_direct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b screen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Tao.Platform.X11.XWindowAttributes.ToString ()}
}\par
{\bkmkstart AAAAAAAEGD}
{\bkmkend AAAAAAAEGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v all_event_masks\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:all_event_masks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.all_event_masks}}
}\par
{\bkmkstart AAAAAAAEGE}
{\bkmkend AAAAAAAEGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backing_pixel\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:backing_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.backing_pixel}}
}\par
{\bkmkstart AAAAAAAEGF}
{\bkmkend AAAAAAAEGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backing_planes\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:backing_planes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.backing_planes}}
}\par
{\bkmkstart AAAAAAAEGG}
{\bkmkend AAAAAAAEGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backing_store\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:backing_store}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.backing_store}}
}\par
{\bkmkstart AAAAAAAEGH}
{\bkmkend AAAAAAAEGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bit_gravity\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:bit_gravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b Gravity} {\b Tao.Platform.X11.XWindowAttributes.bit_gravity}}
}\par
{\bkmkstart AAAAAAAEGI}
{\bkmkend AAAAAAAEGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v border_width\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:border_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.border_width}}
}\par
{\bkmkstart AAAAAAAEGJ}
{\bkmkend AAAAAAAEGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v c_class\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:c_class}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.c_class}}
}\par
{\bkmkstart AAAAAAAEGK}
{\bkmkend AAAAAAAEGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colormap\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:colormap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.colormap}}
}\par
{\bkmkstart AAAAAAAEGL}
{\bkmkend AAAAAAAEGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v depth\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.depth}}
}\par
{\bkmkstart AAAAAAAEGM}
{\bkmkend AAAAAAAEGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v do_not_propagate_mask\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:do_not_propagate_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.do_not_propagate_mask}}
}\par
{\bkmkstart AAAAAAAEGN}
{\bkmkend AAAAAAAEGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.height}}
}\par
{\bkmkstart AAAAAAAEGO}
{\bkmkend AAAAAAAEGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_installed\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:map_installed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XWindowAttributes.map_installed}}
}\par
{\bkmkstart AAAAAAAEGP}
{\bkmkend AAAAAAAEGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_state\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:map_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b MapState} {\b Tao.Platform.X11.XWindowAttributes.map_state}}
}\par
{\bkmkstart AAAAAAAEGQ}
{\bkmkend AAAAAAAEGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v override_direct\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:override_direct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XWindowAttributes.override_direct}}
}\par
{\bkmkstart AAAAAAAEGR}
{\bkmkend AAAAAAAEGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.root}}
}\par
{\bkmkstart AAAAAAAEGS}
{\bkmkend AAAAAAAEGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v save_under\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:save_under}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XWindowAttributes.save_under}}
}\par
{\bkmkstart AAAAAAAEGT}
{\bkmkend AAAAAAAEGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v screen\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.screen}}
}\par
{\bkmkstart AAAAAAAEGU}
{\bkmkend AAAAAAAEGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visual\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:visual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.visual}}
}\par
{\bkmkstart AAAAAAAEGV}
{\bkmkend AAAAAAAEGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.width}}
}\par
{\bkmkstart AAAAAAAEGW}
{\bkmkend AAAAAAAEGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v win_gravity\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:win_gravity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b Gravity} {\b Tao.Platform.X11.XWindowAttributes.win_gravity}}
}\par
{\bkmkstart AAAAAAAEGX}
{\bkmkend AAAAAAAEGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.x}}
}\par
{\bkmkstart AAAAAAAEGY}
{\bkmkend AAAAAAAEGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowAttributes.y}}
}\par
{\bkmkstart AAAAAAAEGZ}
{\bkmkend AAAAAAAEGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v your_event_mask\:Tao::Platform::X11::XWindowAttributes}
{\xe \v Tao::Platform::X11::XWindowAttributes\:your_event_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowAttributes.your_event_mask}}
}\par
{\bkmkstart AAAAAAAEHA}
{\bkmkend AAAAAAAEHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XWindowChanges Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges}
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b height}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b border_width}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b sibling}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b StackMode} {\b stack_mode}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v border_width\:Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges\:border_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowChanges.border_width}}
}\par
{\bkmkstart AAAAAAAEIP}
{\bkmkend AAAAAAAEIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowChanges.height}}
}\par
{\bkmkstart AAAAAAAEIQ}
{\bkmkend AAAAAAAEIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sibling\:Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges\:sibling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWindowChanges.sibling}}
}\par
{\bkmkstart AAAAAAAEIR}
{\bkmkend AAAAAAAEIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stack_mode\:Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges\:stack_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b StackMode} {\b Tao.Platform.X11.XWindowChanges.stack_mode}}
}\par
{\bkmkstart AAAAAAAEIS}
{\bkmkend AAAAAAAEIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowChanges.width}}
}\par
{\bkmkstart AAAAAAAEIT}
{\bkmkend AAAAAAAEIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowChanges.x}}
}\par
{\bkmkstart AAAAAAAEIU}
{\bkmkend AAAAAAAEIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Tao::Platform::X11::XWindowChanges}
{\xe \v Tao::Platform::X11::XWindowChanges\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWindowChanges.y}}
}\par
{\bkmkstart AAAAAAAEIV}
{\bkmkend AAAAAAAEIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tao.Platform.X11.XWMHints Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints}
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal bool {\b input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal {\b XInitialState} {\b initial_state}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b icon_pixmap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b icon_window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b icon_x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal int {\b icon_y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b icon_mask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal IntPtr {\b window_group}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v flags\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWMHints.flags}}
}\par
{\bkmkstart AAAAAAAELC}
{\bkmkend AAAAAAAELC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v icon_mask\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:icon_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWMHints.icon_mask}}
}\par
{\bkmkstart AAAAAAAELD}
{\bkmkend AAAAAAAELD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v icon_pixmap\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:icon_pixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWMHints.icon_pixmap}}
}\par
{\bkmkstart AAAAAAAELE}
{\bkmkend AAAAAAAELE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v icon_window\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:icon_window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWMHints.icon_window}}
}\par
{\bkmkstart AAAAAAAELF}
{\bkmkend AAAAAAAELF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v icon_x\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:icon_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWMHints.icon_x}}
}\par
{\bkmkstart AAAAAAAELG}
{\bkmkend AAAAAAAELG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v icon_y\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:icon_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal int {\b Tao.Platform.X11.XWMHints.icon_y}}
}\par
{\bkmkstart AAAAAAAELH}
{\bkmkend AAAAAAAELH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initial_state\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:initial_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal {\b XInitialState} {\b Tao.Platform.X11.XWMHints.initial_state}}
}\par
{\bkmkstart AAAAAAAELI}
{\bkmkend AAAAAAAELI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v input\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal bool {\b Tao.Platform.X11.XWMHints.input}}
}\par
{\bkmkstart AAAAAAAELJ}
{\bkmkend AAAAAAAELJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window_group\:Tao::Platform::X11::XWMHints}
{\xe \v Tao::Platform::X11::XWMHints\:window_group}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal IntPtr {\b Tao.Platform.X11.XWMHints.window_group}}
}\par
{\bkmkstart AAAAAAAELK}
{\bkmkend AAAAAAAELK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
src/Tao.Platform.X11/{\b Structs.cs}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Cg/Cg.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Cg/Cg.cs}
{\xe \v src/Tao.Cg/Cg.cs}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Cg.Cg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Cg} core runtime binding for .NET, implementing {\b Cg} 1.4.1. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Cg}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Cg/CgGl.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Cg/CgGl.cs}
{\xe \v src/Tao.Cg/CgGl.cs}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Cg.CgGl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Cg} core runtime binding for .NET, implementing {\b Cg} 1.4.1. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Cg}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Cg/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Cg/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.Cg/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.DevIl/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.DevIl/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.DevIl/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FFmpeg/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FFmpeg/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.FFmpeg/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FreeGlut/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FreeGlut/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.FreeGlut/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FreeType/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FreeType/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.FreeType/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FtGl/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FtGl/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.FtGl/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.GlBindGen/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Glfw/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Glfw/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.Glfw/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Lua/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Lua/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.Lua/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Ode/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Ode/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.Ode/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenAl/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenAl/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.OpenAl/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.OpenGl/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.PhysFs/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.PhysFs/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.PhysFs/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.Platform.Windows/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.X11/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.X11/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.Platform.X11/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/Properties/AssemblyInfo.cs}
{\xe \v src/Tao.Sdl/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.DevIl/Il.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.DevIl/Il.cs}
{\xe \v src/Tao.DevIl/Il.cs}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.DevIl.Il}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DevIL (Developer's Image Library) IL binding for .NET, implementing DevIL 1.6.8 RC2. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.DevIl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.DevIl/Ilu.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.DevIl/Ilu.cs}
{\xe \v src/Tao.DevIl/Ilu.cs}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.DevIl.Ilu}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DevIL (Developer's Image Library) ILU binding for .NET. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.DevIl.ILinfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.DevIl.ILpointf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.DevIl.ILpointi}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.DevIl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.DevIl/Ilut.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.DevIl/Ilut.cs}
{\xe \v src/Tao.DevIl/Ilut.cs}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.DevIl.Ilut}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DevIL (Developer's Image Library) ILUT binding for .NET. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.DevIl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FFmpeg/AVCodec.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FFmpeg/AVCodec.cs}
{\xe \v src/Tao.FFmpeg/AVCodec.cs}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FFmpeg.FFmpeg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.RcOverride}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVPanScan}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVFrame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVCodecContext}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVCodec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVPicture}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVPaletteControl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVSubtitleRect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVSubtitle}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVCodecParserContext}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVCodecParser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilterContext}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVBitStreamFilter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.FFmpeg}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FFmpeg/AVFormat.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FFmpeg/AVFormat.cs}
{\xe \v src/Tao.FFmpeg/AVFormat.cs}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FFmpeg.FFmpeg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVPacket}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVFrac}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVProbeData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVFormatParameters}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVOutputFormat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVInputFormat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVIndexEntry}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVStream}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVFormatContext}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVPacketList}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVImageInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVImageFormat}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.FFmpeg}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FFmpeg/AVSWScale.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FFmpeg/AVSWScale.cs}
{\xe \v src/Tao.FFmpeg/AVSWScale.cs}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FFmpeg.FFmpeg}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.FFmpeg}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FFmpeg/AVUtil.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FFmpeg/AVUtil.cs}
{\xe \v src/Tao.FFmpeg/AVUtil.cs}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FFmpeg.FFmpeg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FFmpeg.FFmpeg.ByteIOContext}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVClass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVOption}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FFmpeg.FFmpeg.AVRational}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.FFmpeg}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FreeGlut/Glut.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FreeGlut/Glut.cs}
{\xe \v src/Tao.FreeGlut/Glut.cs}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FreeGlut.Glut}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FreeGLUT (OpenGL Utility Toolkit) binding for .NET, implementing {\b FreeGlut} 2.4.0. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.FreeGlut}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FreeType/FreeType.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FreeType/FreeType.cs}
{\xe \v src/Tao.FreeType/FreeType.cs}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.MemoryRec_}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} 2 Binding for .NET. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_StreamRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe an input stream. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_StreamDesc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A union type used to store either a long or a pointer. This is used to store a file descriptor or a \'91FILE*\'92 in an input stream. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Vector}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector; coordinates are of the FT_Pos type. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_BBox}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold an outline's bounding box, i.e., the coordinates of its extrema in the horizontal and vertical directions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Bitmap}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a bitmap or pixmap to the raster. Note that we now manage pixmaps of various depths through the \'91pixel_mode\'92 field. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Outline}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure is used to describe an outline to the scan-line converter. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Outline_Funcs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold various function pointers used during outline decomposition in order to emit segments, conic, and cubic B\'E9ziers, as well as \'91move to\'92 and \'91close to\'92 operations. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.RasterRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Span}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model a single span of gray (or black) pixels when rendering a monochrome or anti-aliased bitmap. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Raster_Params}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure to hold the arguments used by a raster's render functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Raster_Funcs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to describe a given raster class to the library. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_UnitVector}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2D vector unit vector. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Matrix}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to store a 2x2 matrix. Coefficients are in 16.16 fixed float format. The computation performed is: x' = x*xx + y*xy y' = x*yx + y*yy. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read-only binary data represented as a pointer and a length. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Generic}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Client applications often need to associate their own data to a variety of {\b FreeType} core objects. For example, a text layout API might want to associate a glyph cache to a given size object. Most {\b FreeType} object contains a \'91generic\'92 field, of type {\b FT_Generic}, which usage is left to client applications and font servers. It can be used to store a pointer to client-specific data, as well as the address of a \'91finalizer\'92 function, which will be called by {\b FreeType} when the object is destroyed (for example, the previous client example would put the address of the glyph cache destructor in the \'91finalizer\'92 field). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_ListNodeRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a single list element. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_ListRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to hold a simple double-linked list. These are used in many parts of {\b FreeType}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Glyph_Metrics}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to model the metrics of a single glyph. The values are expressed in 26.6 fractional pixel format; if the flag FT_LOAD_NO_SCALE has been used while loading the glyph, values are expressed in font units instead. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Bitmap_Size}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure models the metrics of a bitmap strike (i.e., a set of glyphs for a given point size and resolution) in a bitmap font. It is used for the \'91available_sizes\'92 field of FT_Face. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.LibraryRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.ModuleRec_}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
/ }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.DriverRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.RendererRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_FaceRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root face class structure. A face object models a typeface in a font file. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_SizeRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root size class structure. A size object models a face object at a given size. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_GlyphSlotRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b FreeType} root glyph slot class structure. A glyph slot is a container where individual glyphs can be loaded, be they in outline or bitmap format. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_CharMapRec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base charmap structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.Face_InternalRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.Size_InternalRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Size_Metrics}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size metrics structure gives the metrics of a size object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.SubGlyphRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.Slot_InternalRec_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Parameter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple structure used to pass more or less generic parameters to FT_Open_Face. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.FreeType.FT_Open_Args}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to indicate how to open a new font file or stream. A pointer to such a structure can be used as a parameter for the functions FT_Open_Face and FT_Attach_Stream. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FreeType.FT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main {\b FreeType} method class. Call FT_Init_FreeType to initialise. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.FreeType}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::FreeType.FT_Pixel_Mode} \{ {\b Tao::FreeType.FT_PIXEL_MODE_NONE} =  0, 
{\b Tao::FreeType.FT_PIXEL_MODE_MONO}, 
{\b Tao::FreeType.FT_PIXEL_MODE_GRAY}, 
{\b Tao::FreeType.FT_PIXEL_MODE_GRAY2}, 
{\b Tao::FreeType.FT_PIXEL_MODE_GRAY4}, 
{\b Tao::FreeType.FT_PIXEL_MODE_LCD}, 
{\b Tao::FreeType.FT_PIXEL_MODE_LCD_V}, 
{\b Tao::FreeType.FT_PIXEL_MODE_MAX}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type used to describe the format of pixels in a given bitmap. Note that additional formats may be added in the future. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::FreeType.FT_Glyph_Format} \{ {\b Tao::FreeType.FT_GLYPH_FORMAT_NONE} =  (int)((uint)0 << 24 | (uint)0 << 16 | (uint)0 << 8 | (uint)0), 
{\b Tao::FreeType.FT_GLYPH_FORMAT_COMPOSITE} =  (int)((uint)'c' << 24 | (uint)'o' << 16 | (uint)'m' << 8 | (uint)'p'), 
{\b Tao::FreeType.FT_GLYPH_FORMAT_BITMAP} =  (int)((uint)'b' << 24 | (uint)'i' << 16 | (uint)'t' << 8 | (uint)'s'), 
{\b Tao::FreeType.FT_GLYPH_FORMAT_OUTLINE} =  (int)((uint)'o' << 24 | (uint)'u' << 16 | (uint)'t' << 8 | (uint)'l'), 
{\b Tao::FreeType.FT_GLYPH_FORMAT_PLOTTER} =  (int)((uint)'p' << 24 | (uint)'l' << 16 | (uint)'o' << 8 | (uint)'t')
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type used to describe the format of a given glyph image. Note that this version of FreeType only supports two image formats, even though future font drivers will be able to register their own format. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::FreeType.FT_Encoding} \{ {\b Tao::FreeType.FT_ENCODING_NONE} =  (int)((uint)0 << 24 | (uint)0 << 16 | (uint)0 << 8 | (uint)0), 
{\b Tao::FreeType.FT_ENCODING_MS_SYMBOL} =  (int)((uint)'s' << 24 | (uint)'y' << 16 | (uint)'m' << 8 | (uint)'b'), 
{\b Tao::FreeType.FT_ENCODING_UNICODE} =  (int)((uint)'u' << 24 | (uint)'n' << 16 | (uint)'i' << 8 | (uint)'c'), 
{\b Tao::FreeType.FT_ENCODING_SJIS} =  (int)((uint)'s' << 24 | (uint)'j' << 16 | (uint)'i' << 8 | (uint)'s'), 
{\b Tao::FreeType.FT_ENCODING_GB2312} =  (int)((uint)'g' << 24 | (uint)'b' << 16 | (uint)' ' << 8 | (uint)' '), 
{\b Tao::FreeType.FT_ENCODING_BIG5} =  (int)((uint)'b' << 24 | (uint)'i' << 16 | (uint)'g' << 8 | (uint)'5'), 
{\b Tao::FreeType.FT_ENCODING_WANSUNG} =  (int)((uint)'w' << 24 | (uint)'a' << 16 | (uint)'n' << 8 | (uint)'s'), 
{\b Tao::FreeType.FT_ENCODING_JOHAB} =  (int)((uint)'j' << 24 | (uint)'o' << 16 | (uint)'h' << 8 | (uint)'a'), 
{\b Tao::FreeType.FT_ENCODING_MS_SJIS} =  (int)(FT_Encoding.FT_ENCODING_SJIS), 
{\b Tao::FreeType.FT_ENCODING_MS_GB2312} =  (int)(FT_Encoding.FT_ENCODING_GB2312), 
{\b Tao::FreeType.FT_ENCODING_MS_BIG5} =  (int)(FT_Encoding.FT_ENCODING_BIG5), 
{\b Tao::FreeType.FT_ENCODING_MS_WANSUNG} =  (int)(FT_Encoding.FT_ENCODING_WANSUNG), 
{\b Tao::FreeType.FT_ENCODING_MS_JOHAB} =  (int)(FT_Encoding.FT_ENCODING_JOHAB), 
{\b Tao::FreeType.FT_ENCODING_ADOBE_STANDARD} =  (int)((uint)'A' << 24 | (uint)'D' << 16 | (uint)'O' << 8 | (uint)'B'), 
{\b Tao::FreeType.FT_ENCODING_ADOBE_EXPERT} =  (int)((uint)'A' << 24 | (uint)'D' << 16 | (uint)'B' << 8 | (uint)'E'), 
{\b Tao::FreeType.FT_ENCODING_ADOBE_CUSTOM} =  (int)((uint)'A' << 24 | (uint)'D' << 16 | (uint)'B' << 8 | (uint)'C'), 
{\b Tao::FreeType.FT_ENCODING_ADOBE_LATIN_1} =  (int)((uint)'l' << 24 | (uint)'a' << 16 | (uint)'t' << 8 | (uint)'1'), 
{\b Tao::FreeType.FT_ENCODING_OLD_LATIN_2} =  (int)((uint)'l' << 24 | (uint)'a' << 16 | (uint)'t' << 8 | (uint)'2'), 
{\b Tao::FreeType.FT_ENCODING_APPLE_ROMAN} =  (int)((uint)'a' << 24 | (uint)'r' << 16 | (uint)'m' << 8 | (uint)'n')
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration used to specify character sets supported by charmaps. Used in the FT_Select_Charmap API function. note: Despite the name, this enumeration lists specific character repertories (i.e., charsets), and not text encoding methods (e.g., UTF-8, UTF-16, GB2312_EUC, etc.). Because of 32-bit charcodes defined in Unicode (i.e., surrogates), all character codes must be expressed as FT_Longs. Other encodings might be defined in the future. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::FreeType.FT_Render_Mode} \{ {\b Tao::FreeType.FT_RENDER_MODE_NORMAL} =  0, 
{\b Tao::FreeType.FT_RENDER_MODE_LIGHT}, 
{\b Tao::FreeType.FT_RENDER_MODE_MONO}, 
{\b Tao::FreeType.FT_RENDER_MODE_LCD}, 
{\b Tao::FreeType.FT_RENDER_MODE_LCD_V}, 
{\b Tao::FreeType.FT_RENDER_MODE_MAX}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration type that lists the render modes supported by FreeType 2. Each mode corresponds to a specific type of scanline conversion performed on the outline. For bitmap fonts the \'91bitmap->pixel_mode\'92 field in the FT_GlyphSlotRec structure gives the format of the returned bitmap. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::FreeType.FT_Kerning_Mode} \{ {\b Tao::FreeType.FT_KERNING_DEFAULT} =  0, 
{\b Tao::FreeType.FT_KERNING_UNFITTED}, 
{\b Tao::FreeType.FT_KERNING_UNSCALED}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumeration used to specify which kerning values to return in FT_Get_Kerning. \par
}}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.FtGl/FtGl.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.FtGl/FtGl.cs}
{\xe \v src/Tao.FtGl/FtGl.cs}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FTGL bindings for .NET, implementing FTGL 2.1.3.0. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTGLBitmapFont}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTGLPixmapFont}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTGLOutlineFont}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTGLPolygonFont}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTGLExtrudeFont}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTGLTextureFont}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTFont}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Font abstract class. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTSimpleLayout}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.FtGl.FtGl.FTLayout}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Layout abstract class. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.FtGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/BindStreamWriter.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/BindStreamWriter.cs}
{\xe \v src/Tao.GlBindGen/BindStreamWriter.cs}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.BindStreamWriter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/GL2/Generator.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/GL2/Generator.cs}
{\xe \v src/Tao.GlBindGen/GL2/Generator.cs}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.GL2.Generator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.GL2}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Glu/Generator.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Glu/Generator.cs}
{\xe \v src/Tao.GlBindGen/Glu/Generator.cs}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Glu.Generator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Glu}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Glx/Generator.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Glx/Generator.cs}
{\xe \v src/Tao.GlBindGen/Glx/Generator.cs}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Glx.Generator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Glx}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Wgl/Generator.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Wgl/Generator.cs}
{\xe \v src/Tao.GlBindGen/Wgl/Generator.cs}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Wgl.Generator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Wgl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/IBind.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/IBind.cs}
{\xe \v src/Tao.GlBindGen/IBind.cs}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b Bind.IBind}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/ISpecReader.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/ISpecReader.cs}
{\xe \v src/Tao.GlBindGen/ISpecReader.cs}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b Bind.ISpecReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/ISpecWriter.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/ISpecWriter.cs}
{\xe \v src/Tao.GlBindGen/ISpecWriter.cs}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b Bind.ISpecWriter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Main.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Main.cs}
{\xe \v src/Tao.GlBindGen/Main.cs}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.MainClass}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Bind.GeneratorMode} \{ {\b Bind.Unknown}, 
{\b Bind.GL2}, 
{\b Bind.GL3}, 
{\b Bind.Wgl}, 
{\b Bind.Glx}, 
{\b Bind.Glu}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Properties/Bind.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Properties/Bind.cs}
{\xe \v src/Tao.GlBindGen/Properties/Bind.cs}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Bind.Properties.Bind}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl.Bind.Properties}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Properties/Bind.Designer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Properties/Bind.Designer.cs}
{\xe \v src/Tao.GlBindGen/Properties/Bind.Designer.cs}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.GlBindGen.Properties.Bind}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.GlBindGen.Properties}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Settings.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Settings.cs}
{\xe \v src/Tao.GlBindGen/Settings.cs}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Settings}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Structures/Constant.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Structures/Constant.cs}
{\xe \v src/Tao.GlBindGen/Structures/Constant.cs}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.Constant}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl constant in C# format. Both the constant name and value can be retrieved or set. The value can be either a number, another constant or an alias to a constant. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Structures/Delegate.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Structures/Delegate.cs}
{\xe \v src/Tao.GlBindGen/Structures/Delegate.cs}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.Delegate}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an opengl function. The return value, function name, function parameters and opengl version can be retrieved or set. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.DelegateCollection}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Structures/Enum.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Structures/Enum.cs}
{\xe \v src/Tao.GlBindGen/Structures/Enum.cs}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.Enum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.EnumCollection}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Structures/Function.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Structures/Function.cs}
{\xe \v src/Tao.GlBindGen/Structures/Function.cs}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.Function}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.FunctionBody}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.FunctionCollection}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Structures/Parameter.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Structures/Parameter.cs}
{\xe \v src/Tao.GlBindGen/Structures/Parameter.cs}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.Parameter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a single parameter of an opengl function. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.ParameterCollection}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds the parameter list of an opengl function. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Structures/Type.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Structures/Type.cs}
{\xe \v src/Tao.GlBindGen/Structures/Type.cs}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Structures.Type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.GlBindGen/Utilities.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.GlBindGen/Utilities.cs}
{\xe \v src/Tao.GlBindGen/Utilities.cs}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Bind.Utilities}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Bind}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Bind.WrapperTypes} \{ {\b Bind.None} =  0, 
{\b Bind.BoolParameter}, 
{\b Bind.GenericParameter}, 
{\b Bind.ArrayParameter}, 
{\b Bind.UncheckedParameter}, 
{\b Bind.PointerParameter}, 
{\b Bind.ReferenceParameter}, 
{\b Bind.StringReturnType}, 
{\b Bind.GenericReturnType}, 
{\b Bind.ArrayReturnType}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Glfw/Glfw.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Glfw/Glfw.cs}
{\xe \v src/Tao.Glfw/Glfw.cs}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Glfw.Glfw}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLFW (OpenGL Framework) binding for .NET, implementing GLFW 2.6.0. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Glfw.Glfw.GLFWvidmode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video mode. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Glfw.Glfw.GLFWimage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Glfw}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Lua/Lua.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Lua/Lua.cs}
{\xe \v src/Tao.Lua/Lua.cs}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Lua.Lua}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Lua} bindings for .NET, implementing {\b Lua} 5.1.1 ({\f2 http://www.lua.org}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Lua.Lua.lua_Debug}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure used to carry different pieces of information about an active function. lua_getstack fills only the private part of this structure, for later use. To fill the other fields of {\b lua_Debug} with useful information, call lua_getinfo. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Lua.Lua.luaL_Reg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for arrays of functions to be registered by luaL_register. name is the function name and func is a pointer to the function. Any array of {\b luaL_Reg} must end with an sentinel entry in which both name and func are NULL. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Lua.Lua.luaL_Buffer}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type for a string buffer. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Lua}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Ode/Ode.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Ode/Ode.cs}
{\xe \v src/Tao.Ode/Ode.cs}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Ode.Ode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open Dynamics Engine (ODE - {\f2 http://ode.org}) bindings for .NET ODE Version: 0.9. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dMass}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Describes the mass parameters of a rigid body. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dContactGeom}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact info set by collision functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dSurfaceParameters}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the properties of the colliding surfaces. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dContact}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contact structure used by contact joint. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dVector3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dVector4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dQuaternion}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.Aabb}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dMatrix3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dMatrix4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Ode.Ode.dJointFeedback}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
During the world time step, the forces that are applied by each joint are computed. These forces are added directly to the joined bodies, and the user normally has no way of telling which joint contributed how much force. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dGeomClass}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Ode}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TriMeshNumbers} \{ {\b TRIMESH_FACE_NORMALS} =  1, 
{\b TRIMESH_LAST_TRANSFORMATION} =  2
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
During the time step any feedback structures that are attached to joints will be filled in with the joint s force and torque information.The {\b Tao::Ode.dJointGetFeedback} () function returns the current feedback structure pointer\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The {\b dJointGetFeedback} () function returns the current feedback structure pointer\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The or if none is {\b used} (this is the default).TODO\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetLMotorAxis} (dJointID j, int anum, int rel, dReal x, dReal y, dReal z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetLMotorNumAxes} (dJointID j, int num)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetLMotorParam} (dJointID j, int parameter, dReal value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b JointSetPlane2DAngleParam} (dJointID j, int parameter, dReal value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetPlane2DXParam} (dJointID j, int parameter, dReal value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetPlane2DYParam} (dJointID j, int parameter, dReal value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetPRAnchor} (dJointID j, dReal x, dReal y, dReal z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetPRAxis1} (dJointID j, dReal x, dReal y, dReal z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetPRAxis2} (dJointID j, dReal x, dReal y, dReal z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointSetPRParam} (dJointID j, int parameter, dReal value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointGetLMotorAxis} (dJointID j, int anum, out dVector3 result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dJointGetLMotorNumAxes} (dJointID j)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dReal {\b dJointGetLMotorParam} (dJointID j, int parameter)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointGetPRAnchor} (dJointID j, out dVector3 result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointGetPRAxis1} (dJointID j, out dVector3 result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointGetPRAxis2} (dJointID j, out dVector3 result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dReal {\b dJointGetPRParam} (dJointID j, int parameter)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dReal {\b dJointGetPRPosition} (dJointID j)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointGetUniversalAngles} (dJointID j, out dReal angle1, out dReal angle2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dReal {\b dJointGetPRPositionRate} (dJointID j)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dMassSetTrimesh} (out dMass mass, dReal density, dGeomID g)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomSetQuaternion} (dGeomID geom, ref dReal w)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildByte} (dHeightfieldDataID d, byte[] pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildByte} (dHeightfieldDataID d, IntPtr pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildCallback} (dHeightfieldDataID d, IntPtr pUserData, dHeightfieldGetHeight pCallback, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildShort} (dHeightfieldDataID d, ushort[] pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildShort} (dHeightfieldDataID d, short[] pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildShort} (dHeightfieldDataID d, IntPtr pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildSingle} (dHeightfieldDataID d, float[] pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildSingle} (dHeightfieldDataID d, IntPtr pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildDouble} (dHeightfieldDataID d, double[] pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataBuildDouble} (dHeightfieldDataID d, IntPtr pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dHeightfieldDataID {\b dGeomHeightfieldDataCreate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataDestroy} (dHeightfieldDataID d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldDataSetBounds} (dHeightfieldDataID d, dReal minHeight, dReal maxHeight)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dHeightfieldDataID {\b dGeomHeightfieldGetHeightfieldData} (dGeomID g)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomHeightfieldSetHeightfieldData} (dGeomID g, dHeightfieldDataID d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomGetAABB} (dGeomID geom, out dReal minX)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomSetOffsetQuaternion} (dGeomID geom, ref dReal X)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomSetOffsetWorldRotation} (dGeomID geom, ref dReal M00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomSetOffsetWorldQuaternion} (dGeomID geom, ref dReal X)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomSetConvex} (dGeomID geom, dReal[] planes, int planeCount, dReal[] points, int pointCount, int[] polygons)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dGeomID {\b dCreateConvex} (dSpaceID space, dReal[] planes, int planeCount, dReal[] points, int pointCount, int[] polygons)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomBoxGetLengths} (dGeomID geom, out dReal x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyOffsetPosition} (dGeomID geom, ref dVector3 pos)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyOffsetPosition} (dGeomID geom, ref dReal X)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyOffsetRotation} (dGeomID geom, ref dMatrix3 R)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyOffsetRotation} (dGeomID geom, ref dReal M00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyPosition} (dGeomID geom, out dVector3 pos)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyPosition} (dGeomID geom, out dReal X)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyRotation} (dGeomID geom, out dMatrix3 R)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomCopyRotation} (dGeomID geom, out dReal M00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomRayGet} (dGeomID ray, ref dReal startX, ref dReal dirX)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dBoxBox} (dVector3 p1, dMatrix3 R1, dVector3 side1, dVector3 p2, dMatrix3 R2, dVector3 side2, ref dVector3 normal, ref dReal depth, ref int return_code, int maxc, ref dContactGeom[] contact, int skip)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
given two boxes (p1,R1,side1) and (p2,R2,side2), collide them together and generate contact points. this returns 0 if there is no contact otherwise it returns the number of contacts generated. `normal' returns the contact normal. `depth' returns the maximum penetration depth along that normal. `return_code' returns a number indicating the type of contact that was detected: 1,2,3 = box 2 intersects with a face of box 1 4,5,6 = box 1 intersects with a face of box 2 7..15 = edge-edge contact `maxc' is the maximum number of contacts allowed to be generated, i.e. the size of the `contact' array. `contact' and `skip' are the contact array information provided to the collision functions. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dSpaceID {\b dQuadTreeSpaceCreate} (dSpaceID space, ref dReal centerX, ref dReal extentsX, int depth)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshDataUpdate} (dTriMeshDataID g)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dTriMeshDataID {\b dGeomTriMeshGetData} (dGeomID g)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshDataBuildDouble} (dTriMeshDataID g, IntPtr vertices, int vertexStride, int vertexCount, IntPtr indices, int indexCount, int triStride, IntPtr normals)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshDataBuildDouble} (dTriMeshDataID g, IntPtr vertices, int vertexStride, int vertexCount, IntPtr indices, int indexCount, int triStride)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshDataBuildSingle} (dTriMeshDataID g, IntPtr vertices, int vertexStride, int vertexCount, IntPtr indices, int indexCount, int triStride)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshDataBuildSingle1} (dTriMeshDataID g, IntPtr vertices, int vertexStride, int vertexCount, IntPtr indices, int indexCount, int triStride, IntPtr normals)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b dTriCallback} (dGeomID TriMesh, dGeomID RefObject, int TriangleIndex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Per triangle callback. Allows user to state if a collision with a particular triangle is wanted If the return value is zero no contact will be generated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b dTriArrayCallback} (dGeomID TriMesh, dGeomID RefObject, int[] TriIndices, int TriCount)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Per object callback. Allows user to get the list of all intersecting triangles in one shot. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b dTriRayCallback} (dGeomID TriMesh, dGeomID Ray, int TriangleIndex, dReal u, dReal v)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ray callback. Allows the user to determine if a ray collides with a triangle based on the barycentric coordinates of an intersection. The user can for example sample a bitmap to determine if a collision should occur. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b dGeomTriMeshDataGet} (dTriMeshDataID g, int data_id)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshDataPreprocess} (dTriMeshDataID g)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshSetLastTransform} (dTriMeshDataID d, ref dMatrix4 last_trans)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dGeomTriMeshSetLastTransform} (dTriMeshDataID d, ref dReal M00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dBodyCopyPosition} (dBodyID body, out dVector3 pos)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dBodyCopyPosition} (dBodyID body, out dReal X)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dBodyCopyQuaternion} (dBodyID body, out dQuaternion quat)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dBodyCopyQuaternion} (dBodyID body, out dReal X)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dBodyCopyRotation} (dBodyID body, out dMatrix3 R)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dBodyCopyRotation} (dBodyID body, out dReal M00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b dAABBTestFn} (dGeomID o1, dGeomID o2, ref dReal aabb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b dColliderFn} (dGeomID o1, dGeomID o2, int flags, out dContactGeom contact, int skip)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b dGetAABBFn} (dGeomID geom, out dReal aabb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate dColliderFn {\b dGetColliderFnFn} (int num)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b dGeomDtorFn} (dGeomID o)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate dReal {\b dHeightfieldGetHeight} (IntPtr p_user_data, int x, int z)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b dCreateHeightfield} (dSpaceID space, IntPtr data, int bPlaceable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dSetZero} (out dReal a, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dSetValue} (out dReal a, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dReal {\b dDot} (ref dReal X0, ref dReal X1, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dJointID {\b dJointCreatePlane2D} (dWorldID world, dJointGroupID group)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dJointID {\b dJointCreatePR} (dWorldID world, dJointGroupID group)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dJointAddPRTorque} (dJointID joint, dReal torque)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dFactorCholesky} (ref dReal A00, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dSolveCholesky} (ref dReal L, out dReal b, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dInvertPDMatrix} (ref dReal A, out dReal Ainv, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dIsPositiveDefinite} (ref dReal A, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dFactorLDLT} (ref dReal A, out dReal d, int n, int nskip)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dSolveL1T} (ref dReal L, out dReal b, int n, int nskip)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dVectorScale} (out dReal a, ref dReal d, int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dLDLTAddTL} (ref dReal L, ref dReal d, ref dReal a, int n, int nskip)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static dReal {\b dRandReal} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dVector3 {\b Tao::Ode.t1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the jointfeedback structure from the joint to get information about the forces applied by each joint. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dVector3 {\b Tao::Ode.f2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dVector3 {\b Tao::Ode.t2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v TriMeshNumbers\:Ode.cs}
{\xe \v Ode.cs\:TriMeshNumbers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TriMeshNumbers}}
}\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v TRIMESH_FACE_NORMALS\:Ode.cs}
{\xe \v Ode.cs\:TRIMESH_FACE_NORMALS}
{\b {\i TRIMESH_FACE_NORMALS{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\xe \v TRIMESH_LAST_TRANSFORMATION\:Ode.cs}
{\xe \v Ode.cs\:TRIMESH_LAST_TRANSFORMATION}
{\b {\i TRIMESH_LAST_TRANSFORMATION{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v dAABBTestFn\:Ode.cs}
{\xe \v Ode.cs\:dAABBTestFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int dAABBTestFn (dGeomID {\i o1}, dGeomID {\i o2}, ref dReal {\i aabb})}
}\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i o1} \par
{\i o2} \par
{\i aabb} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dBodyCopyPosition\:Ode.cs}
{\xe \v Ode.cs\:dBodyCopyPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dBodyCopyPosition (dBodyID {\i body}, out dVector3 {\i pos})}
}\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i body} \par
{\i pos} \par
}
}}
{\xe \v dBodyCopyPosition\:Ode.cs}
{\xe \v Ode.cs\:dBodyCopyPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dBodyCopyPosition (dBodyID {\i body}, out dReal {\i X})}
}\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i body} \par
{\i X} \par
}
}}
{\xe \v dBodyCopyQuaternion\:Ode.cs}
{\xe \v Ode.cs\:dBodyCopyQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dBodyCopyQuaternion (dBodyID {\i body}, out dQuaternion {\i quat})}
}\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i body} \par
{\i quat} \par
}
}}
{\xe \v dBodyCopyQuaternion\:Ode.cs}
{\xe \v Ode.cs\:dBodyCopyQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dBodyCopyQuaternion (dBodyID {\i body}, out dReal {\i X})}
}\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i body} \par
{\i X} \par
}
}}
{\xe \v dBodyCopyRotation\:Ode.cs}
{\xe \v Ode.cs\:dBodyCopyRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dBodyCopyRotation (dBodyID {\i body}, out dMatrix3 {\i R})}
}\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i body} \par
{\i R} \par
}
}}
{\xe \v dBodyCopyRotation\:Ode.cs}
{\xe \v Ode.cs\:dBodyCopyRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dBodyCopyRotation (dBodyID {\i body}, out dReal {\i M00})}
}\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i body} \par
{\i M00} \par
}
}}
{\xe \v dBoxBox\:Ode.cs}
{\xe \v Ode.cs\:dBoxBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dBoxBox (dVector3 {\i p1}, dMatrix3 {\i R1}, dVector3 {\i side1}, dVector3 {\i p2}, dMatrix3 {\i R2}, dVector3 {\i side2}, ref dVector3 {\i normal}, ref dReal {\i depth}, ref int {\i return_code}, int {\i maxc}, ref dContactGeom[] {\i contact}, int {\i skip})}
}\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
given two boxes (p1,R1,side1) and (p2,R2,side2), collide them together and generate contact points. this returns 0 if there is no contact otherwise it returns the number of contacts generated. `normal' returns the contact normal. `depth' returns the maximum penetration depth along that normal. `return_code' returns a number indicating the type of contact that was detected: 1,2,3 = box 2 intersects with a face of box 1 4,5,6 = box 1 intersects with a face of box 2 7..15 = edge-edge contact `maxc' is the maximum number of contacts allowed to be generated, i.e. the size of the `contact' array. `contact' and `skip' are the contact array information provided to the collision functions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this function only fills in the position and depth fields.\par
TODO: Needs testing. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i p1} A dVector3 containing the center coordinates for box 1\par
{\i R1} A dMatrix3 containing the rotation matrix for box 1\par
{\i side1} A dVector3 containing the side lengths (x/y/z) for box 1\par
{\i p2} A dVector3 containing the center coordinates for box 2\par
{\i R2} A dMatrix3 containing the rotation matrix for box 2\par
{\i side2} A dVector3 containing the side lengths (x/y/z) for box 1\par
{\i normal} returns the value of the contact normal\par
{\i depth} returns the maximum penetration along the contact normal\par
{\i return_code} returns the type of contact detected\par
{\i maxc} specifies the maximum number of contacts allowed (should match size of contact array)\par
{\i contact} an array of ContactGeoms returning the contact information\par
{\i skip} contact array information provided to collision functions. Size of contact geom?\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the number of contacts generated\par
}}}
{\xe \v dColliderFn\:Ode.cs}
{\xe \v Ode.cs\:dColliderFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int dColliderFn (dGeomID {\i o1}, dGeomID {\i o2}, int {\i flags}, out dContactGeom {\i contact}, int {\i skip})}
}\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i o1} \par
{\i o2} \par
{\i flags} \par
{\i contact} \par
{\i skip} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dCreateConvex\:Ode.cs}
{\xe \v Ode.cs\:dCreateConvex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dGeomID dCreateConvex (dSpaceID {\i space}, dReal[] {\i planes}, int {\i planeCount}, dReal[] {\i points}, int {\i pointCount}, int[] {\i polygons})}
}\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i space} \par
{\i planes} \par
{\i planeCount} \par
{\i points} \par
{\i pointCount} \par
{\i polygons} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dCreateHeightfield\:Ode.cs}
{\xe \v Ode.cs\:dCreateHeightfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr dCreateHeightfield (dSpaceID {\i space}, IntPtr {\i data}, int {\i bPlaceable})}
}\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i space} \par
{\i data} \par
{\i bPlaceable} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dDot\:Ode.cs}
{\xe \v Ode.cs\:dDot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dReal dDot (ref dReal {\i X0}, ref dReal {\i X1}, int {\i n})}
}\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i X0} \par
{\i X1} \par
{\i n} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dFactorCholesky\:Ode.cs}
{\xe \v Ode.cs\:dFactorCholesky}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dFactorCholesky (ref dReal {\i A00}, int {\i n})}
}\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i A00} \par
{\i n} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dFactorLDLT\:Ode.cs}
{\xe \v Ode.cs\:dFactorLDLT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dFactorLDLT (ref dReal {\i A}, out dReal {\i d}, int {\i n}, int {\i nskip})}
}\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i A} \par
{\i d} \par
{\i n} \par
{\i nskip} \par
}
}}
{\xe \v dGeomBoxGetLengths\:Ode.cs}
{\xe \v Ode.cs\:dGeomBoxGetLengths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomBoxGetLengths (dGeomID {\i geom}, out dReal {\i x})}
}\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i x} \par
}
}}
{\xe \v dGeomCopyOffsetPosition\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyOffsetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyOffsetPosition (dGeomID {\i geom}, ref dVector3 {\i pos})}
}\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i pos} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomCopyOffsetPosition\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyOffsetPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyOffsetPosition (dGeomID {\i geom}, ref dReal {\i X})}
}\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i X} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomCopyOffsetRotation\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyOffsetRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyOffsetRotation (dGeomID {\i geom}, ref dMatrix3 {\i R})}
}\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i R} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomCopyOffsetRotation\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyOffsetRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyOffsetRotation (dGeomID {\i geom}, ref dReal {\i M00})}
}\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i M00} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomCopyPosition\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyPosition (dGeomID {\i geom}, out dReal {\i X})}
}\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i X} \par
}
}}
{\xe \v dGeomCopyPosition\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyPosition (dGeomID {\i geom}, out dVector3 {\i pos})}
}\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i pos} \par
}
}}
{\xe \v dGeomCopyRotation\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyRotation (dGeomID {\i geom}, out dMatrix3 {\i R})}
}\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i R} \par
}
}}
{\xe \v dGeomCopyRotation\:Ode.cs}
{\xe \v Ode.cs\:dGeomCopyRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomCopyRotation (dGeomID {\i geom}, out dReal {\i M00})}
}\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i M00} \par
}
}}
{\xe \v dGeomDtorFn\:Ode.cs}
{\xe \v Ode.cs\:dGeomDtorFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void dGeomDtorFn (dGeomID {\i o})}
}\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i o} \par
}
}}
{\xe \v dGeomGetAABB\:Ode.cs}
{\xe \v Ode.cs\:dGeomGetAABB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomGetAABB (dGeomID {\i geom}, out dReal {\i minX})}
}\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i minX} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildByte\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildByte (dHeightfieldDataID {\i d}, byte[] {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildByte\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildByte (dHeightfieldDataID {\i d}, IntPtr {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildCallback\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildCallback (dHeightfieldDataID {\i d}, IntPtr {\i pUserData}, dHeightfieldGetHeight {\i pCallback}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pUserData} \par
{\i pCallback} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildDouble\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildDouble (dHeightfieldDataID {\i d}, double[] {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildDouble\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildDouble (dHeightfieldDataID {\i d}, IntPtr {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildShort\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildShort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildShort (dHeightfieldDataID {\i d}, ushort[] {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildShort\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildShort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildShort (dHeightfieldDataID {\i d}, short[] {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildShort\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildShort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildShort (dHeightfieldDataID {\i d}, IntPtr {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildSingle\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildSingle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildSingle (dHeightfieldDataID {\i d}, IntPtr {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataBuildSingle\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataBuildSingle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataBuildSingle (dHeightfieldDataID {\i d}, float[] {\i pHeightData}, int {\i bCopyHeightData}, dReal {\i width}, dReal {\i depth}, int {\i widthSamples}, int {\i depthSamples}, dReal {\i scale}, dReal {\i offset}, dReal {\i thickness}, int {\i bWrap})}
}\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i pHeightData} \par
{\i bCopyHeightData} \par
{\i width} \par
{\i depth} \par
{\i widthSamples} \par
{\i depthSamples} \par
{\i scale} \par
{\i offset} \par
{\i thickness} \par
{\i bWrap} \par
}
}}
{\xe \v dGeomHeightfieldDataCreate\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataCreate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dHeightfieldDataID dGeomHeightfieldDataCreate ()}
}\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomHeightfieldDataDestroy\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataDestroy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataDestroy (dHeightfieldDataID {\i d})}
}\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
}
}}
{\xe \v dGeomHeightfieldDataSetBounds\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldDataSetBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldDataSetBounds (dHeightfieldDataID {\i d}, dReal {\i minHeight}, dReal {\i maxHeight})}
}\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i minHeight} \par
{\i maxHeight} \par
}
}}
{\xe \v dGeomHeightfieldGetHeightfieldData\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldGetHeightfieldData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dHeightfieldDataID dGeomHeightfieldGetHeightfieldData (dGeomID {\i g})}
}\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomHeightfieldSetHeightfieldData\:Ode.cs}
{\xe \v Ode.cs\:dGeomHeightfieldSetHeightfieldData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomHeightfieldSetHeightfieldData (dGeomID {\i g}, dHeightfieldDataID {\i d})}
}\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
{\i d} \par
}
}}
{\xe \v dGeomRayGet\:Ode.cs}
{\xe \v Ode.cs\:dGeomRayGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomRayGet (dGeomID {\i ray}, ref dReal {\i startX}, ref dReal {\i dirX})}
}\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ray} \par
{\i startX} \par
{\i dirX} \par
}
}}
{\xe \v dGeomSetConvex\:Ode.cs}
{\xe \v Ode.cs\:dGeomSetConvex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomSetConvex (dGeomID {\i geom}, dReal[] {\i planes}, int {\i planeCount}, dReal[] {\i points}, int {\i pointCount}, int[] {\i polygons})}
}\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i planes} \par
{\i planeCount} \par
{\i points} \par
{\i pointCount} \par
{\i polygons} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomSetOffsetQuaternion\:Ode.cs}
{\xe \v Ode.cs\:dGeomSetOffsetQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomSetOffsetQuaternion (dGeomID {\i geom}, ref dReal {\i X})}
}\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i X} \par
}
}}
{\xe \v dGeomSetOffsetWorldQuaternion\:Ode.cs}
{\xe \v Ode.cs\:dGeomSetOffsetWorldQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomSetOffsetWorldQuaternion (dGeomID {\i geom}, ref dReal {\i X})}
}\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i X} \par
}
}}
{\xe \v dGeomSetOffsetWorldRotation\:Ode.cs}
{\xe \v Ode.cs\:dGeomSetOffsetWorldRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomSetOffsetWorldRotation (dGeomID {\i geom}, ref dReal {\i M00})}
}\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i M00} \par
}
}}
{\xe \v dGeomSetQuaternion\:Ode.cs}
{\xe \v Ode.cs\:dGeomSetQuaternion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomSetQuaternion (dGeomID {\i geom}, ref dReal {\i w})}
}\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i w} \par
}
}}
{\xe \v dGeomTriMeshDataBuildDouble\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshDataBuildDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshDataBuildDouble (dTriMeshDataID {\i g}, IntPtr {\i vertices}, int {\i vertexStride}, int {\i vertexCount}, IntPtr {\i indices}, int {\i indexCount}, int {\i triStride})}
}\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
{\i vertices} \par
{\i vertexStride} \par
{\i vertexCount} \par
{\i indices} \par
{\i indexCount} \par
{\i triStride} \par
}
}}
{\xe \v dGeomTriMeshDataBuildDouble\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshDataBuildDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshDataBuildDouble (dTriMeshDataID {\i g}, IntPtr {\i vertices}, int {\i vertexStride}, int {\i vertexCount}, IntPtr {\i indices}, int {\i indexCount}, int {\i triStride}, IntPtr {\i normals})}
}\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
{\i vertices} \par
{\i vertexStride} \par
{\i vertexCount} \par
{\i indices} \par
{\i indexCount} \par
{\i triStride} \par
{\i normals} \par
}
}}
{\xe \v dGeomTriMeshDataBuildSingle\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshDataBuildSingle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshDataBuildSingle (dTriMeshDataID {\i g}, IntPtr {\i vertices}, int {\i vertexStride}, int {\i vertexCount}, IntPtr {\i indices}, int {\i indexCount}, int {\i triStride})}
}\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
{\i vertices} \par
{\i vertexStride} \par
{\i vertexCount} \par
{\i indices} \par
{\i indexCount} \par
{\i triStride} \par
}
}}
{\xe \v dGeomTriMeshDataBuildSingle1\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshDataBuildSingle1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshDataBuildSingle1 (dTriMeshDataID {\i g}, IntPtr {\i vertices}, int {\i vertexStride}, int {\i vertexCount}, IntPtr {\i indices}, int {\i indexCount}, int {\i triStride}, IntPtr {\i normals})}
}\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
{\i vertices} \par
{\i vertexStride} \par
{\i vertexCount} \par
{\i indices} \par
{\i indexCount} \par
{\i triStride} \par
{\i normals} \par
}
}}
{\xe \v dGeomTriMeshDataGet\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshDataGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr dGeomTriMeshDataGet (dTriMeshDataID {\i g}, int {\i data_id})}
}\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
{\i data_id} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomTriMeshDataPreprocess\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshDataPreprocess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshDataPreprocess (dTriMeshDataID {\i g})}
}\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
}
}}
{\xe \v dGeomTriMeshDataUpdate\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshDataUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshDataUpdate (dTriMeshDataID {\i g})}
}\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
}
}}
{\xe \v dGeomTriMeshGetData\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshGetData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dTriMeshDataID dGeomTriMeshGetData (dGeomID {\i g})}
}\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i g} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dGeomTriMeshSetLastTransform\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshSetLastTransform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshSetLastTransform (dTriMeshDataID {\i d}, ref dReal {\i M00})}
}\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i M00} \par
}
}}
{\xe \v dGeomTriMeshSetLastTransform\:Ode.cs}
{\xe \v Ode.cs\:dGeomTriMeshSetLastTransform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dGeomTriMeshSetLastTransform (dTriMeshDataID {\i d}, ref dMatrix4 {\i last_trans})}
}\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i d} \par
{\i last_trans} \par
}
}}
{\xe \v dGetAABBFn\:Ode.cs}
{\xe \v Ode.cs\:dGetAABBFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void dGetAABBFn (dGeomID {\i geom}, out dReal {\i aabb})}
}\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i geom} \par
{\i aabb} \par
}
}}
{\xe \v dGetColliderFnFn\:Ode.cs}
{\xe \v Ode.cs\:dGetColliderFnFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate dColliderFn dGetColliderFnFn (int {\i num})}
}\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i num} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dHeightfieldGetHeight\:Ode.cs}
{\xe \v Ode.cs\:dHeightfieldGetHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate dReal dHeightfieldGetHeight (IntPtr {\i p_user_data}, int {\i x}, int {\i z})}
}\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i p_user_data} \par
{\i x} \par
{\i z} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dInvertPDMatrix\:Ode.cs}
{\xe \v Ode.cs\:dInvertPDMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dInvertPDMatrix (ref dReal {\i A}, out dReal {\i Ainv}, int {\i n})}
}\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i A} \par
{\i Ainv} \par
{\i n} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dIsPositiveDefinite\:Ode.cs}
{\xe \v Ode.cs\:dIsPositiveDefinite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dIsPositiveDefinite (ref dReal {\i A}, int {\i n})}
}\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i A} \par
{\i n} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointAddPRTorque\:Ode.cs}
{\xe \v Ode.cs\:dJointAddPRTorque}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointAddPRTorque (dJointID {\i joint}, dReal {\i torque})}
}\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joint} \par
{\i torque} \par
}
}}
{\xe \v dJointCreatePlane2D\:Ode.cs}
{\xe \v Ode.cs\:dJointCreatePlane2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dJointID dJointCreatePlane2D (dWorldID {\i world}, dJointGroupID {\i group})}
}\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i world} \par
{\i group} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointCreatePR\:Ode.cs}
{\xe \v Ode.cs\:dJointCreatePR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dJointID dJointCreatePR (dWorldID {\i world}, dJointGroupID {\i group})}
}\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i world} \par
{\i group} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointGetFeedback\:Ode.cs}
{\xe \v Ode.cs\:dJointGetFeedback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
The dJointGetFeedback ()}
}\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dJointGetLMotorAxis\:Ode.cs}
{\xe \v Ode.cs\:dJointGetLMotorAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointGetLMotorAxis (dJointID {\i j}, int {\i anum}, out dVector3 {\i result})}
}\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i anum} \par
{\i result} \par
}
}}
{\xe \v dJointGetLMotorNumAxes\:Ode.cs}
{\xe \v Ode.cs\:dJointGetLMotorNumAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dJointGetLMotorNumAxes (dJointID {\i j})}
}\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointGetLMotorParam\:Ode.cs}
{\xe \v Ode.cs\:dJointGetLMotorParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dReal dJointGetLMotorParam (dJointID {\i j}, int {\i parameter})}
}\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i parameter} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointGetPRAnchor\:Ode.cs}
{\xe \v Ode.cs\:dJointGetPRAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointGetPRAnchor (dJointID {\i j}, out dVector3 {\i result})}
}\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i result} \par
}
}}
{\xe \v dJointGetPRAxis1\:Ode.cs}
{\xe \v Ode.cs\:dJointGetPRAxis1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointGetPRAxis1 (dJointID {\i j}, out dVector3 {\i result})}
}\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i result} \par
}
}}
{\xe \v dJointGetPRAxis2\:Ode.cs}
{\xe \v Ode.cs\:dJointGetPRAxis2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointGetPRAxis2 (dJointID {\i j}, out dVector3 {\i result})}
}\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i result} \par
}
}}
{\xe \v dJointGetPRParam\:Ode.cs}
{\xe \v Ode.cs\:dJointGetPRParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dReal dJointGetPRParam (dJointID {\i j}, int {\i parameter})}
}\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i parameter} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointGetPRPosition\:Ode.cs}
{\xe \v Ode.cs\:dJointGetPRPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dReal dJointGetPRPosition (dJointID {\i j})}
}\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointGetPRPositionRate\:Ode.cs}
{\xe \v Ode.cs\:dJointGetPRPositionRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dReal dJointGetPRPositionRate (dJointID {\i j})}
}\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dJointGetUniversalAngles\:Ode.cs}
{\xe \v Ode.cs\:dJointGetUniversalAngles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointGetUniversalAngles (dJointID {\i j}, out dReal {\i angle1}, out dReal {\i angle2})}
}\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i angle1} \par
{\i angle2} \par
}
}}
{\xe \v dJointSetLMotorAxis\:Ode.cs}
{\xe \v Ode.cs\:dJointSetLMotorAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetLMotorAxis (dJointID {\i j}, int {\i anum}, int {\i rel}, dReal {\i x}, dReal {\i y}, dReal {\i z})}
}\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i anum} \par
{\i rel} \par
{\i x} \par
{\i y} \par
{\i z} \par
}
}}
{\xe \v dJointSetLMotorNumAxes\:Ode.cs}
{\xe \v Ode.cs\:dJointSetLMotorNumAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetLMotorNumAxes (dJointID {\i j}, int {\i num})}
}\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i num} \par
}
}}
{\xe \v dJointSetLMotorParam\:Ode.cs}
{\xe \v Ode.cs\:dJointSetLMotorParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetLMotorParam (dJointID {\i j}, int {\i parameter}, dReal {\i value})}
}\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i parameter} \par
{\i value} \par
}
}}
{\xe \v dJointSetPlane2DXParam\:Ode.cs}
{\xe \v Ode.cs\:dJointSetPlane2DXParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetPlane2DXParam (dJointID {\i j}, int {\i parameter}, dReal {\i value})}
}\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i parameter} \par
{\i value} \par
}
}}
{\xe \v dJointSetPlane2DYParam\:Ode.cs}
{\xe \v Ode.cs\:dJointSetPlane2DYParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetPlane2DYParam (dJointID {\i j}, int {\i parameter}, dReal {\i value})}
}\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i parameter} \par
{\i value} \par
}
}}
{\xe \v dJointSetPRAnchor\:Ode.cs}
{\xe \v Ode.cs\:dJointSetPRAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetPRAnchor (dJointID {\i j}, dReal {\i x}, dReal {\i y}, dReal {\i z})}
}\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i x} \par
{\i y} \par
{\i z} \par
}
}}
{\xe \v dJointSetPRAxis1\:Ode.cs}
{\xe \v Ode.cs\:dJointSetPRAxis1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetPRAxis1 (dJointID {\i j}, dReal {\i x}, dReal {\i y}, dReal {\i z})}
}\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i x} \par
{\i y} \par
{\i z} \par
}
}}
{\xe \v dJointSetPRAxis2\:Ode.cs}
{\xe \v Ode.cs\:dJointSetPRAxis2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetPRAxis2 (dJointID {\i j}, dReal {\i x}, dReal {\i y}, dReal {\i z})}
}\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i x} \par
{\i y} \par
{\i z} \par
}
}}
{\xe \v dJointSetPRParam\:Ode.cs}
{\xe \v Ode.cs\:dJointSetPRParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dJointSetPRParam (dJointID {\i j}, int {\i parameter}, dReal {\i value})}
}\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i parameter} \par
{\i value} \par
}
}}
{\xe \v dLDLTAddTL\:Ode.cs}
{\xe \v Ode.cs\:dLDLTAddTL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dLDLTAddTL (ref dReal {\i L}, ref dReal {\i d}, ref dReal {\i a}, int {\i n}, int {\i nskip})}
}\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i L} \par
{\i d} \par
{\i a} \par
{\i n} \par
{\i nskip} \par
}
}}
{\xe \v dMassSetTrimesh\:Ode.cs}
{\xe \v Ode.cs\:dMassSetTrimesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dMassSetTrimesh (out dMass {\i mass}, dReal {\i density}, dGeomID {\i g})}
}\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mass} \par
{\i density} \par
{\i g} \par
}
}}
{\xe \v dQuadTreeSpaceCreate\:Ode.cs}
{\xe \v Ode.cs\:dQuadTreeSpaceCreate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dSpaceID dQuadTreeSpaceCreate (dSpaceID {\i space}, ref dReal {\i centerX}, ref dReal {\i extentsX}, int {\i depth})}
}\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i space} \par
{\i centerX} \par
{\i extentsX} \par
{\i depth} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dRandReal\:Ode.cs}
{\xe \v Ode.cs\:dRandReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static dReal dRandReal ()}
}\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v dSetValue\:Ode.cs}
{\xe \v Ode.cs\:dSetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dSetValue (out dReal {\i a}, int {\i n})}
}\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} \par
{\i n} \par
}
}}
{\xe \v dSetZero\:Ode.cs}
{\xe \v Ode.cs\:dSetZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dSetZero (out dReal {\i a}, int {\i n})}
}\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} \par
{\i n} \par
}
}}
{\xe \v dSolveCholesky\:Ode.cs}
{\xe \v Ode.cs\:dSolveCholesky}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dSolveCholesky (ref dReal {\i L}, out dReal {\i b}, int {\i n})}
}\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i L} \par
{\i b} \par
{\i n} \par
}
}}
{\xe \v dSolveL1T\:Ode.cs}
{\xe \v Ode.cs\:dSolveL1T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dSolveL1T (ref dReal {\i L}, out dReal {\i b}, int {\i n}, int {\i nskip})}
}\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i L} \par
{\i b} \par
{\i n} \par
{\i nskip} \par
}
}}
{\xe \v dTriArrayCallback\:Ode.cs}
{\xe \v Ode.cs\:dTriArrayCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void dTriArrayCallback (dGeomID {\i TriMesh}, dGeomID {\i RefObject}, int[] {\i TriIndices}, int {\i TriCount})}
}\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Per object callback. Allows user to get the list of all intersecting triangles in one shot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dTriCallback\:Ode.cs}
{\xe \v Ode.cs\:dTriCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int dTriCallback (dGeomID {\i TriMesh}, dGeomID {\i RefObject}, int {\i TriangleIndex})}
}\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Per triangle callback. Allows user to state if a collision with a particular triangle is wanted If the return value is zero no contact will be generated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dTriRayCallback\:Ode.cs}
{\xe \v Ode.cs\:dTriRayCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int dTriRayCallback (dGeomID {\i TriMesh}, dGeomID {\i Ray}, int {\i TriangleIndex}, dReal {\i u}, dReal {\i v})}
}\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ray callback. Allows the user to determine if a ray collides with a triangle based on the barycentric coordinates of an intersection. The user can for example sample a bitmap to determine if a collision should occur. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dVectorScale\:Ode.cs}
{\xe \v Ode.cs\:dVectorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dVectorScale (out dReal {\i a}, ref dReal {\i d}, int {\i n})}
}\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i a} \par
{\i d} \par
{\i n} \par
}
}}
{\xe \v JointSetPlane2DAngleParam\:Ode.cs}
{\xe \v Ode.cs\:JointSetPlane2DAngleParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void JointSetPlane2DAngleParam (dJointID {\i j}, int {\i parameter}, dReal {\i value})}
}\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i j} \par
{\i parameter} \par
{\i value} \par
}
}}
{\xe \v used\:Ode.cs}
{\xe \v Ode.cs\:used}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
The or if none is used (this is the {\i default})}
}\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenAl/Al.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenAl/Al.cs}
{\xe \v src/Tao.OpenAl/Al.cs}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenAl.Al}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenAL binding for .NET, implementing AL 1.1. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenAl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenAl/Alc.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenAl/Alc.cs}
{\xe \v src/Tao.OpenAl/Alc.cs}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenAl.Alc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenAL binding for .NET, implementing ALC 1.1. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenAl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenAl/ALDelegates.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenAl/ALDelegates.cs}
{\xe \v src/Tao.OpenAl/ALDelegates.cs}
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenAl.Delegates}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenAl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenAl/Alut.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenAl/Alut.cs}
{\xe \v src/Tao.OpenAl/Alut.cs}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenAl.Alut}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenAL binding for .NET, implementing ALUT 1.1. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenAl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/Gl.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/Gl.cs}
{\xe \v src/Tao.OpenGl/Gl.cs}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL binding for .NET, implementing OpenGL 2.1, plus extensions. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/GLCore.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/GLCore.cs}
{\xe \v src/Tao.OpenGl/GLCore.cs}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL binding for .NET, implementing OpenGL 2.1, plus extensions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl.Imports}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains DllImports for the core OpenGL functions. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/GLDelegates.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/GLDelegates.cs}
{\xe \v src/Tao.OpenGl/GLDelegates.cs}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL binding for .NET, implementing OpenGL 2.1, plus extensions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl.Delegates}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/GLEnums.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/GLEnums.cs}
{\xe \v src/Tao.OpenGl/GLEnums.cs}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL binding for .NET, implementing OpenGL 2.1, plus extensions. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/GlExtensionLoader.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/GlExtensionLoader.cs}
{\xe \v src/Tao.OpenGl/GlExtensionLoader.cs}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.OpenGLExtensionImport}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.GlExtensionLoader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.GlExtensionLoader.GlContextInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/GlHelper.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/GlHelper.cs}
{\xe \v src/Tao.OpenGl/GlHelper.cs}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OpenGL binding for .NET, implementing OpenGL 2.1, plus extensions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl.Imports}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains DllImports for the core OpenGL functions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b Tao.OpenGl.Gl.IGetProcAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl.GetProcAddressWindows}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl.GetProcAddressX11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Gl.GetProcAddressOSX}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.OpenGl/Glu.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.OpenGl/Glu.cs}
{\xe \v src/Tao.OpenGl/Glu.cs}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.OpenGl.Glu}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLU (OpenGL Utility) binding for .NET, implementing GLU 1.3. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.OpenGl.Glu.GLUnurbs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.OpenGl.Glu.GLUquadric}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.OpenGl.Glu.GLUtesselator}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.OpenGl.Glu.GLUnurbsObj}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU NURBS object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.OpenGl.Glu.GLUquadricObj}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU quadric object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.OpenGl.Glu.GLUtesselatorObj}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU tesselator object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.OpenGl.Glu.GLUtriangulatorObj}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a GLU triangulator object. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.OpenGl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.PhysFs/Fs.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.PhysFs/Fs.cs}
{\xe \v src/Tao.PhysFs/Fs.cs}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.PhysFs.Fs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PhysFS bindings for .NET, implementing PhysFS 1.0.1 ({\f2 http://icculus.org/physfs/}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.PhysFs.Fs.PHYSFS_Version}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information the version of PhysicsFS in use. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.PhysFs.Fs.PHYSFS_ArchiveInfo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information on various PhysicsFS-supported archives. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.PhysFs.Fs.PHYSFS_ArchiveInfoInternal}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information on various PhysicsFS-supported archives. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.PhysFs.Fs.PHYSFS_File}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PhysicsFS file handle. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.PhysFs}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/Gdi.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/Gdi.cs}
{\xe \v src/Tao.Platform.Windows/Gdi.cs}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Gdi}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GDI binding for .NET, implementing Windows-specific GDI functionality. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Gdi.DEVMODE}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b DEVMODE}}  data structure contains information about the initialization and environment of a printer or a display device. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Gdi.GLYPHMETRICSFLOAT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b GLYPHMETRICSFLOAT}}  structure contains information about the placement and orientation of a glyph in a character cell. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Gdi.PIXELFORMATDESCRIPTOR}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b PIXELFORMATDESCRIPTOR}}  structure describes the pixel format of a drawing surface. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Gdi.POINTFLOAT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b POINTFLOAT}}  structure contains the x and y coordinates of a point. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Gdi.LAYERPLANEDESCRIPTOR}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/IlasmAttribute.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/IlasmAttribute.cs}
{\xe \v src/Tao.Platform.Windows/IlasmAttribute.cs}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.IlasmAttribute}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Injects supplied MSIL into the method's body. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/Kernel.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/Kernel.cs}
{\xe \v src/Tao.Platform.Windows/Kernel.cs}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Kernel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel binding for .NET, implementing Windows-specific kernel functionality. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Kernel.MEMORYSTATUS}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b MEMORYSTATUS}}  structure contains information about the current state of both physical and virtual memory. \par
The GlobalMemoryStatus function stores information in a {\b {\b MEMORYSTATUS}}  structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b {\b SYSTEM_INFO}}  structure contains information about the current computer system. This includes the architecture and type of the processor, the number of processors in the system, the page size, and other such information. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Kernel.SYSTEM_INFO_UNION}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Union for the OemId, ProcessorArchitecture, and Reserved fields of the {\b SYSTEM_INFO} structure. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/SimpleOpenGlControl.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/SimpleOpenGlControl.cs}
{\xe \v src/Tao.Platform.Windows/SimpleOpenGlControl.cs}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.SimpleOpenGlControl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple OpenGL control allowing quick development of {\b Windows} Forms-based OpenGL applications. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/User.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/User.cs}
{\xe \v src/Tao.Platform.Windows/User.cs}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.User}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User binding for .NET, implementing Windows-specific user functionality. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/Wgl.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/Wgl.cs}
{\xe \v src/Tao.Platform.Windows/Wgl.cs}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/WglCore.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/WglCore.cs}
{\xe \v src/Tao.Platform.Windows/WglCore.cs}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl.Imports}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains DllImports for the core OpenGL functions. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/WglDelegates.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/WglDelegates.cs}
{\xe \v src/Tao.Platform.Windows/WglDelegates.cs}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl.Delegates}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/WglEnums.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/WglEnums.cs}
{\xe \v src/Tao.Platform.Windows/WglEnums.cs}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/WglHelper.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/WglHelper.cs}
{\xe \v src/Tao.Platform.Windows/WglHelper.cs}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Wgl.Imports}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains DllImports for the core OpenGL functions. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/Winmm.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/Winmm.cs}
{\xe \v src/Tao.Platform.Windows/Winmm.cs}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.Winmm}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Windows} Multimedia binding for .NET, implementing Windows-specific multimedia functionality. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Winmm.JOYCAPS}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYCAPS} structure contains information about the joystick capabilities. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Winmm.JOYINFO}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFO} structure contains information about the joystick position and button state. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.Windows.Winmm.JOYINFOEX}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JOYINFOEX} structure contains extended information about the joystick position, point-of-view position, and button state. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.Windows/WinNt.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.Windows/WinNt.cs}
{\xe \v src/Tao.Platform.Windows/WinNt.cs}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.Windows.WinNt}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WinNT binding for .NET, implementing {\b Windows} NT-specific functionality. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.Windows}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.X11/API.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.X11/API.cs}
{\xe \v src/Tao.Platform.X11/API.cs}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.X11.API}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.API.XF86VidModeModeLine}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.API.XF86VidModeModeInfo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies an XF86 display mode. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.API.XF86VidModeMonitor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.API.XF86VidModeSyncRange}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.API.XF86VidModeNotifyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.API.XF86VidModeGamma}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.X11.VisualInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.X11.SetWindowAttributes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.SizeHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.SizeHints.Rectangle}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.Constants}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.X11}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.ErrorCodes} \{ {\b Tao::Platform::X11.Success} =  0, 
{\b Tao::Platform::X11.BadRequest} =  1, 
{\b Tao::Platform::X11.BadValue} =  2, 
{\b Tao::Platform::X11.BadWindow} =  3, 
{\b Tao::Platform::X11.BadPixmap} =  4, 
{\b Tao::Platform::X11.BadAtom} =  5, 
{\b Tao::Platform::X11.BadCursor} =  6, 
{\b Tao::Platform::X11.BadFont} =  7, 
{\b Tao::Platform::X11.BadMatch} =  8, 
{\b Tao::Platform::X11.BadDrawable} =  9, 
{\b Tao::Platform::X11.BadAccess} =  10, 
{\b Tao::Platform::X11.BadAlloc} =  11, 
{\b Tao::Platform::X11.BadColor} =  12, 
{\b Tao::Platform::X11.BadGC} =  13, 
{\b Tao::Platform::X11.BadIDChoice} =  14, 
{\b Tao::Platform::X11.BadName} =  15, 
{\b Tao::Platform::X11.BadLength} =  16, 
{\b Tao::Platform::X11.BadImplementation} =  17
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.CreateWindowMask} \{ {\b Tao::Platform::X11.CWBackPixmap} =  (1L<<0), 
{\b Tao::Platform::X11.CWBackPixel} =  (1L<<1), 
{\b Tao::Platform::X11.CWSaveUnder} =  (1L<<10), 
{\b Tao::Platform::X11.CWEventMask} =  (1L<<11), 
{\b Tao::Platform::X11.CWDontPropagate} =  (1L<<12), 
{\b Tao::Platform::X11.CWColormap} =  (1L<<13), 
{\b Tao::Platform::X11.CWCursor} =  (1L<<14), 
{\b Tao::Platform::X11.CWBorderPixmap} =  (1L<<2), 
{\b Tao::Platform::X11.CWBorderPixel} =  (1L<<3), 
{\b Tao::Platform::X11.CWBitGravity} =  (1L<<4), 
{\b Tao::Platform::X11.CWWinGravity} =  (1L<<5), 
{\b Tao::Platform::X11.CWBackingStore} =  (1L<<6), 
{\b Tao::Platform::X11.CWBackingPlanes} =  (1L<<7), 
{\b Tao::Platform::X11.CWBackingPixel} =  (1L<<8), 
{\b Tao::Platform::X11.CWOverrideRedirect} =  (1L<<9)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XKey} \{ {\b Tao::Platform::X11.BackSpace} =  0xff08, 
{\b Tao::Platform::X11.Tab} =  0xff09, 
{\b Tao::Platform::X11.Linefeed} =  0xff0a, 
{\b Tao::Platform::X11.Clear} =  0xff0b, 
{\b Tao::Platform::X11.Return} =  0xff0d, 
{\b Tao::Platform::X11.Pause} =  0xff13, 
{\b Tao::Platform::X11.Scroll_Lock} =  0xff14, 
{\b Tao::Platform::X11.Sys_Req} =  0xff15, 
{\b Tao::Platform::X11.Escape} =  0xff1b, 
{\b Tao::Platform::X11.Delete} =  0xffff, 
{\b Tao::Platform::X11.Multi_key} =  0xff20, 
{\b Tao::Platform::X11.Codeinput} =  0xff37, 
{\b Tao::Platform::X11.SingleCandidate} =  0xff3c, 
{\b Tao::Platform::X11.MultipleCandidate} =  0xff3d, 
{\b Tao::Platform::X11.PreviousCandidate} =  0xff3e, 
{\b Tao::Platform::X11.Kanji} =  0xff21, 
{\b Tao::Platform::X11.Muhenkan} =  0xff22, 
{\b Tao::Platform::X11.Henkan_Mode} =  0xff23, 
{\b Tao::Platform::X11.Henkan} =  0xff23, 
{\b Tao::Platform::X11.Romaji} =  0xff24, 
{\b Tao::Platform::X11.Hiragana} =  0xff25, 
{\b Tao::Platform::X11.Katakana} =  0xff26, 
{\b Tao::Platform::X11.Hiragana_Katakana} =  0xff27, 
{\b Tao::Platform::X11.Zenkaku} =  0xff28, 
{\b Tao::Platform::X11.Hankaku} =  0xff29, 
{\b Tao::Platform::X11.Zenkaku_Hankaku} =  0xff2a, 
{\b Tao::Platform::X11.Touroku} =  0xff2b, 
{\b Tao::Platform::X11.Massyo} =  0xff2c, 
{\b Tao::Platform::X11.Kana_Lock} =  0xff2d, 
{\b Tao::Platform::X11.Kana_Shift} =  0xff2e, 
{\b Tao::Platform::X11.Eisu_Shift} =  0xff2f, 
{\b Tao::Platform::X11.Eisu_toggle} =  0xff30, 
{\b Tao::Platform::X11.Kanji_Bangou} =  0xff37, 
{\b Tao::Platform::X11.Zen_Koho} =  0xff3d, 
{\b Tao::Platform::X11.Mae_Koho} =  0xff3e, 
{\b Tao::Platform::X11.Home} =  0xff50, 
{\b Tao::Platform::X11.Left} =  0xff51, 
{\b Tao::Platform::X11.Up} =  0xff52, 
{\b Tao::Platform::X11.Right} =  0xff53, 
{\b Tao::Platform::X11.Down} =  0xff54, 
{\b Tao::Platform::X11.Prior} =  0xff55, 
{\b Tao::Platform::X11.Page_Up} =  0xff55, 
{\b Tao::Platform::X11.Next} =  0xff56, 
{\b Tao::Platform::X11.Page_Down} =  0xff56, 
{\b Tao::Platform::X11.End} =  0xff57, 
{\b Tao::Platform::X11.Begin} =  0xff58, 
{\b Tao::Platform::X11.Select} =  0xff60, 
{\b Tao::Platform::X11.Print} =  0xff61, 
{\b Tao::Platform::X11.Execute} =  0xff62, 
{\b Tao::Platform::X11.Insert} =  0xff63, 
{\b Tao::Platform::X11.Undo} =  0xff65, 
{\b Tao::Platform::X11.Redo} =  0xff66, 
{\b Tao::Platform::X11.Menu} =  0xff67, 
{\b Tao::Platform::X11.Find} =  0xff68, 
{\b Tao::Platform::X11.Cancel} =  0xff69, 
{\b Tao::Platform::X11.Help} =  0xff6a, 
{\b Tao::Platform::X11.Break} =  0xff6b, 
{\b Tao::Platform::X11.Mode_switch} =  0xff7e, 
{\b Tao::Platform::X11.script_switch} =  0xff7e, 
{\b Tao::Platform::X11.Num_Lock} =  0xff7f, 
{\b Tao::Platform::X11.KP_Space} =  0xff80, 
{\b Tao::Platform::X11.KP_Tab} =  0xff89, 
{\b Tao::Platform::X11.KP_Enter} =  0xff8d, 
{\b Tao::Platform::X11.KP_F1} =  0xff91, 
{\b Tao::Platform::X11.KP_F2} =  0xff92, 
{\b Tao::Platform::X11.KP_F3} =  0xff93, 
{\b Tao::Platform::X11.KP_F4} =  0xff94, 
{\b Tao::Platform::X11.KP_Home} =  0xff95, 
{\b Tao::Platform::X11.KP_Left} =  0xff96, 
{\b Tao::Platform::X11.KP_Up} =  0xff97, 
{\b Tao::Platform::X11.KP_Right} =  0xff98, 
{\b Tao::Platform::X11.KP_Down} =  0xff99, 
{\b Tao::Platform::X11.KP_Prior} =  0xff9a, 
{\b Tao::Platform::X11.KP_Page_Up} =  0xff9a, 
{\b Tao::Platform::X11.KP_Next} =  0xff9b, 
{\b Tao::Platform::X11.KP_Page_Down} =  0xff9b, 
{\b Tao::Platform::X11.KP_End} =  0xff9c, 
{\b Tao::Platform::X11.KP_Begin} =  0xff9d, 
{\b Tao::Platform::X11.KP_Insert} =  0xff9e, 
{\b Tao::Platform::X11.KP_Delete} =  0xff9f, 
{\b Tao::Platform::X11.KP_Equal} =  0xffbd, 
{\b Tao::Platform::X11.KP_Multiply} =  0xffaa, 
{\b Tao::Platform::X11.KP_Add} =  0xffab, 
{\b Tao::Platform::X11.KP_Separator} =  0xffac, 
{\b Tao::Platform::X11.KP_Subtract} =  0xffad, 
{\b Tao::Platform::X11.KP_Decimal} =  0xffae, 
{\b Tao::Platform::X11.KP_Divide} =  0xffaf, 
{\b Tao::Platform::X11.KP_0} =  0xffb0, 
{\b Tao::Platform::X11.KP_1} =  0xffb1, 
{\b Tao::Platform::X11.KP_2} =  0xffb2, 
{\b Tao::Platform::X11.KP_3} =  0xffb3, 
{\b Tao::Platform::X11.KP_4} =  0xffb4, 
{\b Tao::Platform::X11.KP_5} =  0xffb5, 
{\b Tao::Platform::X11.KP_6} =  0xffb6, 
{\b Tao::Platform::X11.KP_7} =  0xffb7, 
{\b Tao::Platform::X11.KP_8} =  0xffb8, 
{\b Tao::Platform::X11.KP_9} =  0xffb9, 
{\b Tao::Platform::X11.F1} =  0xffbe, 
{\b Tao::Platform::X11.F2} =  0xffbf, 
{\b Tao::Platform::X11.F3} =  0xffc0, 
{\b Tao::Platform::X11.F4} =  0xffc1, 
{\b Tao::Platform::X11.F5} =  0xffc2, 
{\b Tao::Platform::X11.F6} =  0xffc3, 
{\b Tao::Platform::X11.F7} =  0xffc4, 
{\b Tao::Platform::X11.F8} =  0xffc5, 
{\b Tao::Platform::X11.F9} =  0xffc6, 
{\b Tao::Platform::X11.F10} =  0xffc7, 
{\b Tao::Platform::X11.F11} =  0xffc8, 
{\b Tao::Platform::X11.L1} =  0xffc8, 
{\b Tao::Platform::X11.F12} =  0xffc9, 
{\b Tao::Platform::X11.L2} =  0xffc9, 
{\b Tao::Platform::X11.F13} =  0xffca, 
{\b Tao::Platform::X11.L3} =  0xffca, 
{\b Tao::Platform::X11.F14} =  0xffcb, 
{\b Tao::Platform::X11.L4} =  0xffcb, 
{\b Tao::Platform::X11.F15} =  0xffcc, 
{\b Tao::Platform::X11.L5} =  0xffcc, 
{\b Tao::Platform::X11.F16} =  0xffcd, 
{\b Tao::Platform::X11.L6} =  0xffcd, 
{\b Tao::Platform::X11.F17} =  0xffce, 
{\b Tao::Platform::X11.L7} =  0xffce, 
{\b Tao::Platform::X11.F18} =  0xffcf, 
{\b Tao::Platform::X11.L8} =  0xffcf, 
{\b Tao::Platform::X11.F19} =  0xffd0, 
{\b Tao::Platform::X11.L9} =  0xffd0, 
{\b Tao::Platform::X11.F20} =  0xffd1, 
{\b Tao::Platform::X11.L10} =  0xffd1, 
{\b Tao::Platform::X11.F21} =  0xffd2, 
{\b Tao::Platform::X11.R1} =  0xffd2, 
{\b Tao::Platform::X11.F22} =  0xffd3, 
{\b Tao::Platform::X11.R2} =  0xffd3, 
{\b Tao::Platform::X11.F23} =  0xffd4, 
{\b Tao::Platform::X11.R3} =  0xffd4, 
{\b Tao::Platform::X11.F24} =  0xffd5, 
{\b Tao::Platform::X11.R4} =  0xffd5, 
{\b Tao::Platform::X11.F25} =  0xffd6, 
{\b Tao::Platform::X11.R5} =  0xffd6, 
{\b Tao::Platform::X11.F26} =  0xffd7, 
{\b Tao::Platform::X11.R6} =  0xffd7, 
{\b Tao::Platform::X11.F27} =  0xffd8, 
{\b Tao::Platform::X11.R7} =  0xffd8, 
{\b Tao::Platform::X11.F28} =  0xffd9, 
{\b Tao::Platform::X11.R8} =  0xffd9, 
{\b Tao::Platform::X11.F29} =  0xffda, 
{\b Tao::Platform::X11.R9} =  0xffda, 
{\b Tao::Platform::X11.F30} =  0xffdb, 
{\b Tao::Platform::X11.R10} =  0xffdb, 
{\b Tao::Platform::X11.F31} =  0xffdc, 
{\b Tao::Platform::X11.R11} =  0xffdc, 
{\b Tao::Platform::X11.F32} =  0xffdd, 
{\b Tao::Platform::X11.R12} =  0xffdd, 
{\b Tao::Platform::X11.F33} =  0xffde, 
{\b Tao::Platform::X11.R13} =  0xffde, 
{\b Tao::Platform::X11.F34} =  0xffdf, 
{\b Tao::Platform::X11.R14} =  0xffdf, 
{\b Tao::Platform::X11.F35} =  0xffe0, 
{\b Tao::Platform::X11.R15} =  0xffe0, 
{\b Tao::Platform::X11.Shift_L} =  0xffe1, 
{\b Tao::Platform::X11.Shift_R} =  0xffe2, 
{\b Tao::Platform::X11.Control_L} =  0xffe3, 
{\b Tao::Platform::X11.Control_R} =  0xffe4, 
{\b Tao::Platform::X11.Caps_Lock} =  0xffe5, 
{\b Tao::Platform::X11.Shift_Lock} =  0xffe6, 
{\b Tao::Platform::X11.Meta_L} =  0xffe7, 
{\b Tao::Platform::X11.Meta_R} =  0xffe8, 
{\b Tao::Platform::X11.Alt_L} =  0xffe9, 
{\b Tao::Platform::X11.Alt_R} =  0xffea, 
{\b Tao::Platform::X11.Super_L} =  0xffeb, 
{\b Tao::Platform::X11.Super_R} =  0xffec, 
{\b Tao::Platform::X11.Hyper_L} =  0xffed, 
{\b Tao::Platform::X11.Hyper_R} =  0xffee, 
{\b Tao::Platform::X11.space} =  0x0020, 
{\b Tao::Platform::X11.exclam} =  0x0021, 
{\b Tao::Platform::X11.quotedbl} =  0x0022, 
{\b Tao::Platform::X11.numbersign} =  0x0023, 
{\b Tao::Platform::X11.dollar} =  0x0024, 
{\b Tao::Platform::X11.percent} =  0x0025, 
{\b Tao::Platform::X11.ampersand} =  0x0026, 
{\b Tao::Platform::X11.apostrophe} =  0x0027, 
{\b Tao::Platform::X11.quoteright} =  0x0027, 
{\b Tao::Platform::X11.parenleft} =  0x0028, 
{\b Tao::Platform::X11.parenright} =  0x0029, 
{\b Tao::Platform::X11.asterisk} =  0x002a, 
{\b Tao::Platform::X11.plus} =  0x002b, 
{\b Tao::Platform::X11.comma} =  0x002c, 
{\b Tao::Platform::X11.minus} =  0x002d, 
{\b Tao::Platform::X11.period} =  0x002e, 
{\b Tao::Platform::X11.slash} =  0x002f, 
{\b Tao::Platform::X11.Number0} =  0x0030, 
{\b Tao::Platform::X11.Number1} =  0x0031, 
{\b Tao::Platform::X11.Number2} =  0x0032, 
{\b Tao::Platform::X11.Number3} =  0x0033, 
{\b Tao::Platform::X11.Number4} =  0x0034, 
{\b Tao::Platform::X11.Number5} =  0x0035, 
{\b Tao::Platform::X11.Number6} =  0x0036, 
{\b Tao::Platform::X11.Number7} =  0x0037, 
{\b Tao::Platform::X11.Number8} =  0x0038, 
{\b Tao::Platform::X11.Number9} =  0x0039, 
{\b Tao::Platform::X11.colon} =  0x003a, 
{\b Tao::Platform::X11.semicolon} =  0x003b, 
{\b Tao::Platform::X11.less} =  0x003c, 
{\b Tao::Platform::X11.equal} =  0x003d, 
{\b Tao::Platform::X11.greater} =  0x003e, 
{\b Tao::Platform::X11.question} =  0x003f, 
{\b Tao::Platform::X11.at} =  0x0040, 
{\b Tao::Platform::X11.A} =  0x0041, 
{\b Tao::Platform::X11.B} =  0x0042, 
{\b Tao::Platform::X11.C} =  0x0043, 
{\b Tao::Platform::X11.D} =  0x0044, 
{\b Tao::Platform::X11.E} =  0x0045, 
{\b Tao::Platform::X11.F} =  0x0046, 
{\b Tao::Platform::X11.G} =  0x0047, 
{\b Tao::Platform::X11.H} =  0x0048, 
{\b Tao::Platform::X11.I} =  0x0049, 
{\b Tao::Platform::X11.J} =  0x004a, 
{\b Tao::Platform::X11.K} =  0x004b, 
{\b Tao::Platform::X11.L} =  0x004c, 
{\b Tao::Platform::X11.M} =  0x004d, 
{\b Tao::Platform::X11.N} =  0x004e, 
{\b Tao::Platform::X11.O} =  0x004f, 
{\b Tao::Platform::X11.P} =  0x0050, 
{\b Tao::Platform::X11.Q} =  0x0051, 
{\b Tao::Platform::X11.R} =  0x0052, 
{\b Tao::Platform::X11.S} =  0x0053, 
{\b Tao::Platform::X11.T} =  0x0054, 
{\b Tao::Platform::X11.U} =  0x0055, 
{\b Tao::Platform::X11.V} =  0x0056, 
{\b Tao::Platform::X11.W} =  0x0057, 
{\b Tao::Platform::X11.X} =  0x0058, 
{\b Tao::Platform::X11.Y} =  0x0059, 
{\b Tao::Platform::X11.Z} =  0x005a, 
{\b Tao::Platform::X11.bracketleft} =  0x005b, 
{\b Tao::Platform::X11.backslash} =  0x005c, 
{\b Tao::Platform::X11.bracketright} =  0x005d, 
{\b Tao::Platform::X11.asciicircum} =  0x005e, 
{\b Tao::Platform::X11.underscore} =  0x005f, 
{\b Tao::Platform::X11.grave} =  0x0060, 
{\b Tao::Platform::X11.quoteleft} =  0x0060, 
{\b Tao::Platform::X11.a} =  0x0061, 
{\b Tao::Platform::X11.b} =  0x0062, 
{\b Tao::Platform::X11.c} =  0x0063, 
{\b Tao::Platform::X11.d} =  0x0064, 
{\b Tao::Platform::X11.e} =  0x0065, 
{\b Tao::Platform::X11.f} =  0x0066, 
{\b Tao::Platform::X11.g} =  0x0067, 
{\b Tao::Platform::X11.h} =  0x0068, 
{\b Tao::Platform::X11.i} =  0x0069, 
{\b Tao::Platform::X11.j} =  0x006a, 
{\b Tao::Platform::X11.k} =  0x006b, 
{\b Tao::Platform::X11.l} =  0x006c, 
{\b Tao::Platform::X11.m} =  0x006d, 
{\b Tao::Platform::X11.n} =  0x006e, 
{\b Tao::Platform::X11.o} =  0x006f, 
{\b Tao::Platform::X11.p} =  0x0070, 
{\b Tao::Platform::X11.q} =  0x0071, 
{\b Tao::Platform::X11.r} =  0x0072, 
{\b Tao::Platform::X11.s} =  0x0073, 
{\b Tao::Platform::X11.t} =  0x0074, 
{\b Tao::Platform::X11.u} =  0x0075, 
{\b Tao::Platform::X11.v} =  0x0076, 
{\b Tao::Platform::X11.w} =  0x0077, 
{\b Tao::Platform::X11.x} =  0x0078, 
{\b Tao::Platform::X11.y} =  0x0079, 
{\b Tao::Platform::X11.z} =  0x007a, 
{\b Tao::Platform::X11.braceleft} =  0x007b, 
{\b Tao::Platform::X11.bar} =  0x007c, 
{\b Tao::Platform::X11.braceright} =  0x007d, 
{\b Tao::Platform::X11.asciitilde} =  0x007e
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines LATIN-1 and miscellaneous keys. \par
}}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.X11/Functions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.X11/Functions.cs}
{\xe \v src/Tao.Platform.X11/Functions.cs}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.X11.Functions}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.X11}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.X11/Glx.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.X11/Glx.cs}
{\xe \v src/Tao.Platform.X11/Glx.cs}
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.X11.Glx}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GLX (OpenGL XWindow Extensions) binding for .NET, implementing GLX 1.4. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.X11}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Platform.X11/Structs.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Platform.X11/Structs.cs}
{\xe \v src/Tao.Platform.X11/Structs.cs}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XAnyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XKeyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XButtonEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XMotionEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XCrossingEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XFocusChangeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XKeymapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XGraphicsExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XNoExposeEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XVisibilityEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XCreateWindowEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XDestroyWindowEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XUnmapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XMapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XMapRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XReparentEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XConfigureEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XGravityEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XResizeRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XConfigureRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XCirculateEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XCirculateRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XPropertyEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XSelectionClearEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XSelectionRequestEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XSelectionEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XColormapEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XClientMessageEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XMappingEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XErrorEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XEventPad}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Platform.X11.XVisualInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XSetWindowAttributes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XWindowAttributes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XTextProperty}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XStandardColormap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XColor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XScreen}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XWindowChanges}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.MotifWmHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XModifierKeymap}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XKeyBoardState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XKeyBoardState.AutoRepeats}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XGCValues}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XSizeHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XWMHints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Platform.X11.XIconSize}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Platform.X11}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XVisualClass} \{ {\b Tao::Platform::X11.StaticGray} =  0, 
{\b Tao::Platform::X11.GrayScale} =  1, 
{\b Tao::Platform::X11.StaticColor} =  2, 
{\b Tao::Platform::X11.PseudoColor} =  3, 
{\b Tao::Platform::X11.TrueColor} =  4, 
{\b Tao::Platform::X11.DirectColor} =  5
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XWindowClass} \{ {\b Tao::Platform::X11.InputOutput} =  1, 
{\b Tao::Platform::X11.InputOnly} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XEventName} \{ {\b Tao::Platform::X11.KeyPress} =  2, 
{\b Tao::Platform::X11.KeyRelease} =  3, 
{\b Tao::Platform::X11.ButtonPress} =  4, 
{\b Tao::Platform::X11.ButtonRelease} =  5, 
{\b Tao::Platform::X11.MotionNotify} =  6, 
{\b Tao::Platform::X11.EnterNotify} =  7, 
{\b Tao::Platform::X11.LeaveNotify} =  8, 
{\b Tao::Platform::X11.FocusIn} =  9, 
{\b Tao::Platform::X11.FocusOut} =  10, 
{\b Tao::Platform::X11.KeymapNotify} =  11, 
{\b Tao::Platform::X11.Expose} =  12, 
{\b Tao::Platform::X11.GraphicsExpose} =  13, 
{\b Tao::Platform::X11.NoExpose} =  14, 
{\b Tao::Platform::X11.VisibilityNotify} =  15, 
{\b Tao::Platform::X11.CreateNotify} =  16, 
{\b Tao::Platform::X11.DestroyNotify} =  17, 
{\b Tao::Platform::X11.UnmapNotify} =  18, 
{\b Tao::Platform::X11.MapNotify} =  19, 
{\b Tao::Platform::X11.MapRequest} =  20, 
{\b Tao::Platform::X11.ReparentNotify} =  21, 
{\b Tao::Platform::X11.ConfigureNotify} =  22, 
{\b Tao::Platform::X11.ConfigureRequest} =  23, 
{\b Tao::Platform::X11.GravityNotify} =  24, 
{\b Tao::Platform::X11.ResizeRequest} =  25, 
{\b Tao::Platform::X11.CirculateNotify} =  26, 
{\b Tao::Platform::X11.CirculateRequest} =  27, 
{\b Tao::Platform::X11.PropertyNotify} =  28, 
{\b Tao::Platform::X11.SelectionClear} =  29, 
{\b Tao::Platform::X11.SelectionRequest} =  30, 
{\b Tao::Platform::X11.SelectionNotify} =  31, 
{\b Tao::Platform::X11.ColormapNotify} =  32, 
{\b Tao::Platform::X11.ClientMessage} =  33, 
{\b Tao::Platform::X11.MappingNotify} =  34, 
{\b Tao::Platform::X11.LASTEvent}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.SetWindowValuemask} \{ {\b Tao::Platform::X11.Nothing} =  0, 
{\b Tao::Platform::X11.BackPixmap} =  1, 
{\b Tao::Platform::X11.BackPixel} =  2, 
{\b Tao::Platform::X11.BorderPixmap} =  4, 
{\b Tao::Platform::X11.BorderPixel} =  8, 
{\b Tao::Platform::X11.BitGravity} =  16, 
{\b Tao::Platform::X11.WinGravity} =  32, 
{\b Tao::Platform::X11.BackingStore} =  64, 
{\b Tao::Platform::X11.BackingPlanes} =  128, 
{\b Tao::Platform::X11.BackingPixel} =  256, 
{\b Tao::Platform::X11.OverrideRedirect} =  512, 
{\b Tao::Platform::X11.SaveUnder} =  1024, 
{\b Tao::Platform::X11.EventMask} =  2048, 
{\b Tao::Platform::X11.DontPropagate} =  4096, 
{\b Tao::Platform::X11.ColorMap} =  8192, 
{\b Tao::Platform::X11.Cursor} =  16384
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.CreateWindowArgs} \{ {\b Tao::Platform::X11.CopyFromParent} =  0, 
{\b Tao::Platform::X11.ParentRelative} =  1, 
{\b Tao::Platform::X11.InputOutput} =  1, 
{\b Tao::Platform::X11.InputOnly} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.Gravity} \{ {\b Tao::Platform::X11.ForgetGravity} =  0, 
{\b Tao::Platform::X11.NorthWestGravity} =  1, 
{\b Tao::Platform::X11.NorthGravity} =  2, 
{\b Tao::Platform::X11.NorthEastGravity} =  3, 
{\b Tao::Platform::X11.WestGravity} =  4, 
{\b Tao::Platform::X11.CenterGravity} =  5, 
{\b Tao::Platform::X11.EastGravity} =  6, 
{\b Tao::Platform::X11.SouthWestGravity} =  7, 
{\b Tao::Platform::X11.SouthGravity} =  8, 
{\b Tao::Platform::X11.SouthEastGravity} =  9, 
{\b Tao::Platform::X11.StaticGravity} =  10
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XKeySym} \{ {\b Tao::Platform::X11.XK_BackSpace} =  0xFF08, 
{\b Tao::Platform::X11.XK_Tab} =  0xFF09, 
{\b Tao::Platform::X11.XK_Clear} =  0xFF0B, 
{\b Tao::Platform::X11.XK_Return} =  0xFF0D, 
{\b Tao::Platform::X11.XK_Home} =  0xFF50, 
{\b Tao::Platform::X11.XK_Left} =  0xFF51, 
{\b Tao::Platform::X11.XK_Up} =  0xFF52, 
{\b Tao::Platform::X11.XK_Right} =  0xFF53, 
{\b Tao::Platform::X11.XK_Down} =  0xFF54, 
{\b Tao::Platform::X11.XK_Page_Up} =  0xFF55, 
{\b Tao::Platform::X11.XK_Page_Down} =  0xFF56, 
{\b Tao::Platform::X11.XK_End} =  0xFF57, 
{\b Tao::Platform::X11.XK_Begin} =  0xFF58, 
{\b Tao::Platform::X11.XK_Menu} =  0xFF67, 
{\b Tao::Platform::X11.XK_Shift_L} =  0xFFE1, 
{\b Tao::Platform::X11.XK_Shift_R} =  0xFFE2, 
{\b Tao::Platform::X11.XK_Control_L} =  0xFFE3, 
{\b Tao::Platform::X11.XK_Control_R} =  0xFFE4, 
{\b Tao::Platform::X11.XK_Caps_Lock} =  0xFFE5, 
{\b Tao::Platform::X11.XK_Shift_Lock} =  0xFFE6, 
{\b Tao::Platform::X11.XK_Meta_L} =  0xFFE7, 
{\b Tao::Platform::X11.XK_Meta_R} =  0xFFE8, 
{\b Tao::Platform::X11.XK_Alt_L} =  0xFFE9, 
{\b Tao::Platform::X11.XK_Alt_R} =  0xFFEA, 
{\b Tao::Platform::X11.XK_Super_L} =  0xFFEB, 
{\b Tao::Platform::X11.XK_Super_R} =  0xFFEC, 
{\b Tao::Platform::X11.XK_Hyper_L} =  0xFFED, 
{\b Tao::Platform::X11.XK_Hyper_R} =  0xFFEE
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.EventMask} \{ {\b Tao::Platform::X11.NoEventMask} =  0, 
{\b Tao::Platform::X11.KeyPressMask} =  1 << 0, 
{\b Tao::Platform::X11.KeyReleaseMask} =  1 << 1, 
{\b Tao::Platform::X11.ButtonPressMask} =  1 << 2, 
{\b Tao::Platform::X11.ButtonReleaseMask} =  1 << 3, 
{\b Tao::Platform::X11.EnterWindowMask} =  1 << 4, 
{\b Tao::Platform::X11.LeaveWindowMask} =  1 << 5, 
{\b Tao::Platform::X11.PointerMotionMask} =  1 << 6, 
{\b Tao::Platform::X11.PointerMotionHintMask} =  1 << 7, 
{\b Tao::Platform::X11.Button1MotionMask} =  1 << 8, 
{\b Tao::Platform::X11.Button2MotionMask} =  1 << 9, 
{\b Tao::Platform::X11.Button3MotionMask} =  1 << 10, 
{\b Tao::Platform::X11.Button4MotionMask} =  1 << 11, 
{\b Tao::Platform::X11.Button5MotionMask} =  1 << 12, 
{\b Tao::Platform::X11.ButtonMotionMask} =  1 << 13, 
{\b Tao::Platform::X11.KeymapStateMask} =  1 << 14, 
{\b Tao::Platform::X11.ExposureMask} =  1 << 15, 
{\b Tao::Platform::X11.VisibilityChangeMask} =  1 << 16, 
{\b Tao::Platform::X11.StructureNotifyMask} =  1 << 17, 
{\b Tao::Platform::X11.ResizeRedirectMask} =  1 << 18, 
{\b Tao::Platform::X11.SubstructureNotifyMask} =  1 << 19, 
{\b Tao::Platform::X11.SubstructureRedirectMask} =  1 << 20, 
{\b Tao::Platform::X11.FocusChangeMask} =  1 << 21, 
{\b Tao::Platform::X11.PropertyChangeMask} =  1 << 22, 
{\b Tao::Platform::X11.ColormapChangeMask} =  1 << 23, 
{\b Tao::Platform::X11.OwnerGrabButtonMask} =  1 << 24
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GrabMode} \{ {\b Tao::Platform::X11.GrabModeSync} =  0, 
{\b Tao::Platform::X11.GrabModeAsync} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.Atom} \{ {\b Tao::Platform::X11.AnyPropertyType} =  0, 
{\b Tao::Platform::X11.XA_PRIMARY} =  1, 
{\b Tao::Platform::X11.XA_SECONDARY} =  2, 
{\b Tao::Platform::X11.XA_ARC} =  3, 
{\b Tao::Platform::X11.XA_ATOM} =  4, 
{\b Tao::Platform::X11.XA_BITMAP} =  5, 
{\b Tao::Platform::X11.XA_CARDINAL} =  6, 
{\b Tao::Platform::X11.XA_COLORMAP} =  7, 
{\b Tao::Platform::X11.XA_CURSOR} =  8, 
{\b Tao::Platform::X11.XA_CUT_BUFFER0} =  9, 
{\b Tao::Platform::X11.XA_CUT_BUFFER1} =  10, 
{\b Tao::Platform::X11.XA_CUT_BUFFER2} =  11, 
{\b Tao::Platform::X11.XA_CUT_BUFFER3} =  12, 
{\b Tao::Platform::X11.XA_CUT_BUFFER4} =  13, 
{\b Tao::Platform::X11.XA_CUT_BUFFER5} =  14, 
{\b Tao::Platform::X11.XA_CUT_BUFFER6} =  15, 
{\b Tao::Platform::X11.XA_CUT_BUFFER7} =  16, 
{\b Tao::Platform::X11.XA_DRAWABLE} =  17, 
{\b Tao::Platform::X11.XA_FONT} =  18, 
{\b Tao::Platform::X11.XA_INTEGER} =  19, 
{\b Tao::Platform::X11.XA_PIXMAP} =  20, 
{\b Tao::Platform::X11.XA_POINT} =  21, 
{\b Tao::Platform::X11.XA_RECTANGLE} =  22, 
{\b Tao::Platform::X11.XA_RESOURCE_MANAGER} =  23, 
{\b Tao::Platform::X11.XA_RGB_COLOR_MAP} =  24, 
{\b Tao::Platform::X11.XA_RGB_BEST_MAP} =  25, 
{\b Tao::Platform::X11.XA_RGB_BLUE_MAP} =  26, 
{\b Tao::Platform::X11.XA_RGB_DEFAULT_MAP} =  27, 
{\b Tao::Platform::X11.XA_RGB_GRAY_MAP} =  28, 
{\b Tao::Platform::X11.XA_RGB_GREEN_MAP} =  29, 
{\b Tao::Platform::X11.XA_RGB_RED_MAP} =  30, 
{\b Tao::Platform::X11.XA_STRING} =  31, 
{\b Tao::Platform::X11.XA_VISUALID} =  32, 
{\b Tao::Platform::X11.XA_WINDOW} =  33, 
{\b Tao::Platform::X11.XA_WM_COMMAND} =  34, 
{\b Tao::Platform::X11.XA_WM_HINTS} =  35, 
{\b Tao::Platform::X11.XA_WM_CLIENT_MACHINE} =  36, 
{\b Tao::Platform::X11.XA_WM_ICON_NAME} =  37, 
{\b Tao::Platform::X11.XA_WM_ICON_SIZE} =  38, 
{\b Tao::Platform::X11.XA_WM_NAME} =  39, 
{\b Tao::Platform::X11.XA_WM_NORMAL_HINTS} =  40, 
{\b Tao::Platform::X11.XA_WM_SIZE_HINTS} =  41, 
{\b Tao::Platform::X11.XA_WM_ZOOM_HINTS} =  42, 
{\b Tao::Platform::X11.XA_MIN_SPACE} =  43, 
{\b Tao::Platform::X11.XA_NORM_SPACE} =  44, 
{\b Tao::Platform::X11.XA_MAX_SPACE} =  45, 
{\b Tao::Platform::X11.XA_END_SPACE} =  46, 
{\b Tao::Platform::X11.XA_SUPERSCRIPT_X} =  47, 
{\b Tao::Platform::X11.XA_SUPERSCRIPT_Y} =  48, 
{\b Tao::Platform::X11.XA_SUBSCRIPT_X} =  49, 
{\b Tao::Platform::X11.XA_SUBSCRIPT_Y} =  50, 
{\b Tao::Platform::X11.XA_UNDERLINE_POSITION} =  51, 
{\b Tao::Platform::X11.XA_UNDERLINE_THICKNESS} =  52, 
{\b Tao::Platform::X11.XA_STRIKEOUT_ASCENT} =  53, 
{\b Tao::Platform::X11.XA_STRIKEOUT_DESCENT} =  54, 
{\b Tao::Platform::X11.XA_ITALIC_ANGLE} =  55, 
{\b Tao::Platform::X11.XA_X_HEIGHT} =  56, 
{\b Tao::Platform::X11.XA_QUAD_WIDTH} =  57, 
{\b Tao::Platform::X11.XA_WEIGHT} =  58, 
{\b Tao::Platform::X11.XA_POINT_SIZE} =  59, 
{\b Tao::Platform::X11.XA_RESOLUTION} =  60, 
{\b Tao::Platform::X11.XA_COPYRIGHT} =  61, 
{\b Tao::Platform::X11.XA_NOTICE} =  62, 
{\b Tao::Platform::X11.XA_FONT_NAME} =  63, 
{\b Tao::Platform::X11.XA_FAMILY_NAME} =  64, 
{\b Tao::Platform::X11.XA_FULL_NAME} =  65, 
{\b Tao::Platform::X11.XA_CAP_HEIGHT} =  66, 
{\b Tao::Platform::X11.XA_WM_CLASS} =  67, 
{\b Tao::Platform::X11.XA_WM_TRANSIENT_FOR} =  68, 
{\b Tao::Platform::X11.XA_LAST_PREDEFINED} =  68
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.ChangeWindowFlags} \{ {\b Tao::Platform::X11.CWX} =  1 << 0, 
{\b Tao::Platform::X11.CWY} =  1 << 1, 
{\b Tao::Platform::X11.CWWidth} =  1 << 2, 
{\b Tao::Platform::X11.CWHeight} =  1 << 3, 
{\b Tao::Platform::X11.CWBorderWidth} =  1 << 4, 
{\b Tao::Platform::X11.CWSibling} =  1 << 5, 
{\b Tao::Platform::X11.CWStackMode} =  1 << 6
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.StackMode} \{ {\b Tao::Platform::X11.Above} =  0, 
{\b Tao::Platform::X11.Below} =  1, 
{\b Tao::Platform::X11.TopIf} =  2, 
{\b Tao::Platform::X11.BottomIf} =  3, 
{\b Tao::Platform::X11.Opposite} =  4
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.ColorFlags} \{ {\b Tao::Platform::X11.DoRed} =  1 << 0, 
{\b Tao::Platform::X11.DoGreen} =  1 << 1, 
{\b Tao::Platform::X11.DoBlue} =  1 << 2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.NotifyMode} \{ {\b Tao::Platform::X11.NotifyNormal} =  0, 
{\b Tao::Platform::X11.NotifyGrab} =  1, 
{\b Tao::Platform::X11.NotifyUngrab} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.NotifyDetail} \{ {\b Tao::Platform::X11.NotifyAncestor} =  0, 
{\b Tao::Platform::X11.NotifyVirtual} =  1, 
{\b Tao::Platform::X11.NotifyInferior} =  2, 
{\b Tao::Platform::X11.NotifyNonlinear} =  3, 
{\b Tao::Platform::X11.NotifyNonlinearVirtual} =  4, 
{\b Tao::Platform::X11.NotifyPointer} =  5, 
{\b Tao::Platform::X11.NotifyPointerRoot} =  6, 
{\b Tao::Platform::X11.NotifyDetailNone} =  7
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.MotifFlags} \{ {\b Tao::Platform::X11.Functions} =  1, 
{\b Tao::Platform::X11.Decorations} =  2, 
{\b Tao::Platform::X11.InputMode} =  4, 
{\b Tao::Platform::X11.Status} =  8
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.MotifFunctions} \{ {\b Tao::Platform::X11.All} =  0x01, 
{\b Tao::Platform::X11.Resize} =  0x02, 
{\b Tao::Platform::X11.Move} =  0x04, 
{\b Tao::Platform::X11.Minimize} =  0x08, 
{\b Tao::Platform::X11.Maximize} =  0x10, 
{\b Tao::Platform::X11.Close} =  0x20
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.MotifDecorations} \{ {\b Tao::Platform::X11.All} =  0x01, 
{\b Tao::Platform::X11.Border} =  0x02, 
{\b Tao::Platform::X11.ResizeH} =  0x04, 
{\b Tao::Platform::X11.Title} =  0x08, 
{\b Tao::Platform::X11.Menu} =  0x10, 
{\b Tao::Platform::X11.Minimize} =  0x20, 
{\b Tao::Platform::X11.Maximize} =  0x40
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.MotifInputMode} \{ {\b Tao::Platform::X11.Modeless} =  0, 
{\b Tao::Platform::X11.ApplicationModal} =  1, 
{\b Tao::Platform::X11.SystemModal} =  2, 
{\b Tao::Platform::X11.FullApplicationModal} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.KeyMasks} \{ {\b Tao::Platform::X11.ShiftMask} =  (1 << 0), 
{\b Tao::Platform::X11.LockMask} =  (1 << 1), 
{\b Tao::Platform::X11.ControlMask} =  (1 << 2), 
{\b Tao::Platform::X11.Mod1Mask} =  (1 << 3), 
{\b Tao::Platform::X11.Mod2Mask} =  (1 << 4), 
{\b Tao::Platform::X11.Mod3Mask} =  (1 << 5), 
{\b Tao::Platform::X11.Mod4Mask} =  (1 << 6), 
{\b Tao::Platform::X11.Mod5Mask} =  (1 << 7), 
{\b Tao::Platform::X11.ModMasks} =  Mod1Mask | Mod2Mask | Mod3Mask | Mod4Mask | Mod5Mask
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.PropertyMode} \{ {\b Tao::Platform::X11.Replace} =  0, 
{\b Tao::Platform::X11.Prepend} =  1, 
{\b Tao::Platform::X11.Append} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCFunction} \{ {\b Tao::Platform::X11.GCFunction} =  1 << 0, 
{\b Tao::Platform::X11.GCPlaneMask} =  1 << 1, 
{\b Tao::Platform::X11.GCForeground} =  1 << 2, 
{\b Tao::Platform::X11.GCBackground} =  1 << 3, 
{\b Tao::Platform::X11.GCLineWidth} =  1 << 4, 
{\b Tao::Platform::X11.GCLineStyle} =  1 << 5, 
{\b Tao::Platform::X11.GCCapStyle} =  1 << 6, 
{\b Tao::Platform::X11.GCJoinStyle} =  1 << 7, 
{\b Tao::Platform::X11.GCFillStyle} =  1 << 8, 
{\b Tao::Platform::X11.GCFillRule} =  1 << 9, 
{\b Tao::Platform::X11.GCTile} =  1 << 10, 
{\b Tao::Platform::X11.GCStipple} =  1 << 11, 
{\b Tao::Platform::X11.GCTileStipXOrigin} =  1 << 12, 
{\b Tao::Platform::X11.GCTileStipYOrigin} =  1 << 13, 
{\b Tao::Platform::X11.GCFont} =  1 << 14, 
{\b Tao::Platform::X11.GCSubwindowMode} =  1 << 15, 
{\b Tao::Platform::X11.GCGraphicsExposures} =  1 << 16, 
{\b Tao::Platform::X11.GCClipXOrigin} =  1 << 17, 
{\b Tao::Platform::X11.GCClipYOrigin} =  1 << 18, 
{\b Tao::Platform::X11.GCClipMask} =  1 << 19, 
{\b Tao::Platform::X11.GCDashOffset} =  1 << 20, 
{\b Tao::Platform::X11.GCDashList} =  1 << 21, 
{\b Tao::Platform::X11.GCArcMode} =  1 << 22
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCJoinStyle} \{ {\b Tao::Platform::X11.JoinMiter} =  0, 
{\b Tao::Platform::X11.JoinRound} =  1, 
{\b Tao::Platform::X11.JoinBevel} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCLineStyle} \{ {\b Tao::Platform::X11.LineSolid} =  0, 
{\b Tao::Platform::X11.LineOnOffDash} =  1, 
{\b Tao::Platform::X11.LineDoubleDash} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCCapStyle} \{ {\b Tao::Platform::X11.CapNotLast} =  0, 
{\b Tao::Platform::X11.CapButt} =  1, 
{\b Tao::Platform::X11.CapRound} =  2, 
{\b Tao::Platform::X11.CapProjecting} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCFillStyle} \{ {\b Tao::Platform::X11.FillSolid} =  0, 
{\b Tao::Platform::X11.FillTiled} =  1, 
{\b Tao::Platform::X11.FillStippled} =  2, 
{\b Tao::Platform::X11.FillOpaqueStppled} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCFillRule} \{ {\b Tao::Platform::X11.EvenOddRule} =  0, 
{\b Tao::Platform::X11.WindingRule} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCArcMode} \{ {\b Tao::Platform::X11.ArcChord} =  0, 
{\b Tao::Platform::X11.ArcPieSlice} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GCSubwindowMode} \{ {\b Tao::Platform::X11.ClipByChildren} =  0, 
{\b Tao::Platform::X11.IncludeInferiors} =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.GXFunction} \{ {\b Tao::Platform::X11.GXclear} =  0x0, 
{\b Tao::Platform::X11.GXand} =  0x1, 
{\b Tao::Platform::X11.GXandReverse} =  0x2, 
{\b Tao::Platform::X11.GXcopy} =  0x3, 
{\b Tao::Platform::X11.GXandInverted} =  0x4, 
{\b Tao::Platform::X11.GXnoop} =  0x5, 
{\b Tao::Platform::X11.GXxor} =  0x6, 
{\b Tao::Platform::X11.GXor} =  0x7, 
{\b Tao::Platform::X11.GXnor} =  0x8, 
{\b Tao::Platform::X11.GXequiv} =  0x9, 
{\b Tao::Platform::X11.GXinvert} =  0xa, 
{\b Tao::Platform::X11.GXorReverse} =  0xb, 
{\b Tao::Platform::X11.GXcopyInverted} =  0xc, 
{\b Tao::Platform::X11.GXorInverted} =  0xd, 
{\b Tao::Platform::X11.GXnand} =  0xe, 
{\b Tao::Platform::X11.GXset} =  0xf
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.NetWindowManagerState} \{ {\b Tao::Platform::X11.Remove} =  0, 
{\b Tao::Platform::X11.Add} =  1, 
{\b Tao::Platform::X11.Toggle} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.RevertTo} \{ {\b Tao::Platform::X11.None} =  0, 
{\b Tao::Platform::X11.PointerRoot} =  1, 
{\b Tao::Platform::X11.Parent} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.MapState} \{ {\b Tao::Platform::X11.IsUnmapped} =  0, 
{\b Tao::Platform::X11.IsUnviewable} =  1, 
{\b Tao::Platform::X11.IsViewable} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.CursorFontShape} \{ {\b Tao::Platform::X11.XC_X_cursor} =  0, 
{\b Tao::Platform::X11.XC_arrow} =  2, 
{\b Tao::Platform::X11.XC_based_arrow_down} =  4, 
{\b Tao::Platform::X11.XC_based_arrow_up} =  6, 
{\b Tao::Platform::X11.XC_boat} =  8, 
{\b Tao::Platform::X11.XC_bogosity} =  10, 
{\b Tao::Platform::X11.XC_bottom_left_corner} =  12, 
{\b Tao::Platform::X11.XC_bottom_right_corner} =  14, 
{\b Tao::Platform::X11.XC_bottom_side} =  16, 
{\b Tao::Platform::X11.XC_bottom_tee} =  18, 
{\b Tao::Platform::X11.XC_box_spiral} =  20, 
{\b Tao::Platform::X11.XC_center_ptr} =  22, 
{\b Tao::Platform::X11.XC_circle} =  24, 
{\b Tao::Platform::X11.XC_clock} =  26, 
{\b Tao::Platform::X11.XC_coffee_mug} =  28, 
{\b Tao::Platform::X11.XC_cross} =  30, 
{\b Tao::Platform::X11.XC_cross_reverse} =  32, 
{\b Tao::Platform::X11.XC_crosshair} =  34, 
{\b Tao::Platform::X11.XC_diamond_cross} =  36, 
{\b Tao::Platform::X11.XC_dot} =  38, 
{\b Tao::Platform::X11.XC_dotbox} =  40, 
{\b Tao::Platform::X11.XC_double_arrow} =  42, 
{\b Tao::Platform::X11.XC_draft_large} =  44, 
{\b Tao::Platform::X11.XC_draft_small} =  46, 
{\b Tao::Platform::X11.XC_draped_box} =  48, 
{\b Tao::Platform::X11.XC_exchange} =  50, 
{\b Tao::Platform::X11.XC_fleur} =  52, 
{\b Tao::Platform::X11.XC_gobbler} =  54, 
{\b Tao::Platform::X11.XC_gumby} =  56, 
{\b Tao::Platform::X11.XC_hand1} =  58, 
{\b Tao::Platform::X11.XC_hand2} =  60, 
{\b Tao::Platform::X11.XC_heart} =  62, 
{\b Tao::Platform::X11.XC_icon} =  64, 
{\b Tao::Platform::X11.XC_iron_cross} =  66, 
{\b Tao::Platform::X11.XC_left_ptr} =  68, 
{\b Tao::Platform::X11.XC_left_side} =  70, 
{\b Tao::Platform::X11.XC_left_tee} =  72, 
{\b Tao::Platform::X11.XC_left_button} =  74, 
{\b Tao::Platform::X11.XC_ll_angle} =  76, 
{\b Tao::Platform::X11.XC_lr_angle} =  78, 
{\b Tao::Platform::X11.XC_man} =  80, 
{\b Tao::Platform::X11.XC_middlebutton} =  82, 
{\b Tao::Platform::X11.XC_mouse} =  84, 
{\b Tao::Platform::X11.XC_pencil} =  86, 
{\b Tao::Platform::X11.XC_pirate} =  88, 
{\b Tao::Platform::X11.XC_plus} =  90, 
{\b Tao::Platform::X11.XC_question_arrow} =  92, 
{\b Tao::Platform::X11.XC_right_ptr} =  94, 
{\b Tao::Platform::X11.XC_right_side} =  96, 
{\b Tao::Platform::X11.XC_right_tee} =  98, 
{\b Tao::Platform::X11.XC_rightbutton} =  100, 
{\b Tao::Platform::X11.XC_rtl_logo} =  102, 
{\b Tao::Platform::X11.XC_sailboat} =  104, 
{\b Tao::Platform::X11.XC_sb_down_arrow} =  106, 
{\b Tao::Platform::X11.XC_sb_h_double_arrow} =  108, 
{\b Tao::Platform::X11.XC_sb_left_arrow} =  110, 
{\b Tao::Platform::X11.XC_sb_right_arrow} =  112, 
{\b Tao::Platform::X11.XC_sb_up_arrow} =  114, 
{\b Tao::Platform::X11.XC_sb_v_double_arrow} =  116, 
{\b Tao::Platform::X11.XC_sb_shuttle} =  118, 
{\b Tao::Platform::X11.XC_sizing} =  120, 
{\b Tao::Platform::X11.XC_spider} =  122, 
{\b Tao::Platform::X11.XC_spraycan} =  124, 
{\b Tao::Platform::X11.XC_star} =  126, 
{\b Tao::Platform::X11.XC_target} =  128, 
{\b Tao::Platform::X11.XC_tcross} =  130, 
{\b Tao::Platform::X11.XC_top_left_arrow} =  132, 
{\b Tao::Platform::X11.XC_top_left_corner} =  134, 
{\b Tao::Platform::X11.XC_top_right_corner} =  136, 
{\b Tao::Platform::X11.XC_top_side} =  138, 
{\b Tao::Platform::X11.XC_top_tee} =  140, 
{\b Tao::Platform::X11.XC_trek} =  142, 
{\b Tao::Platform::X11.XC_ul_angle} =  144, 
{\b Tao::Platform::X11.XC_umbrella} =  146, 
{\b Tao::Platform::X11.XC_ur_angle} =  148, 
{\b Tao::Platform::X11.XC_watch} =  150, 
{\b Tao::Platform::X11.XC_xterm} =  152, 
{\b Tao::Platform::X11.XC_num_glyphs} =  154
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.SystrayRequest} \{ {\b Tao::Platform::X11.SYSTEM_TRAY_REQUEST_DOCK} =  0, 
{\b Tao::Platform::X11.SYSTEM_TRAY_BEGIN_MESSAGE} =  1, 
{\b Tao::Platform::X11.SYSTEM_TRAY_CANCEL_MESSAGE} =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XSizeHintsFlags} \{ {\b Tao::Platform::X11.USPosition} =  (1 << 0), 
{\b Tao::Platform::X11.USSize} =  (1 << 1), 
{\b Tao::Platform::X11.PPosition} =  (1 << 2), 
{\b Tao::Platform::X11.PSize} =  (1 << 3), 
{\b Tao::Platform::X11.PMinSize} =  (1 << 4), 
{\b Tao::Platform::X11.PMaxSize} =  (1 << 5), 
{\b Tao::Platform::X11.PResizeInc} =  (1 << 6), 
{\b Tao::Platform::X11.PAspect} =  (1 << 7), 
{\b Tao::Platform::X11.PAllHints} =  (PPosition | PSize | PMinSize | PMaxSize | PResizeInc | PAspect), 
{\b Tao::Platform::X11.PBaseSize} =  (1 << 8), 
{\b Tao::Platform::X11.PWinGravity} =  (1 << 9)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XWMHintsFlags} \{ {\b Tao::Platform::X11.InputHint} =  (1 << 0), 
{\b Tao::Platform::X11.StateHint} =  (1 << 1), 
{\b Tao::Platform::X11.IconPixmapHint} =  (1 << 2), 
{\b Tao::Platform::X11.IconWindowHint} =  (1 << 3), 
{\b Tao::Platform::X11.IconPositionHint} =  (1 << 4), 
{\b Tao::Platform::X11.IconMaskHint} =  (1 << 5), 
{\b Tao::Platform::X11.WindowGroupHint} =  (1 << 6), 
{\b Tao::Platform::X11.AllHints} =  (InputHint | StateHint | IconPixmapHint | IconWindowHint | IconPositionHint | IconMaskHint | WindowGroupHint)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XInitialState} \{ {\b Tao::Platform::X11.DontCareState} =  0, 
{\b Tao::Platform::X11.NormalState} =  1, 
{\b Tao::Platform::X11.ZoomState} =  2, 
{\b Tao::Platform::X11.IconicState} =  3, 
{\b Tao::Platform::X11.InactiveState} =  4
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XRequest} \{ {\b Tao::Platform::X11.X_CreateWindow} =  1, 
{\b Tao::Platform::X11.X_ChangeWindowAttributes} =  2, 
{\b Tao::Platform::X11.X_GetWindowAttributes} =  3, 
{\b Tao::Platform::X11.X_DestroyWindow} =  4, 
{\b Tao::Platform::X11.X_DestroySubwindows} =  5, 
{\b Tao::Platform::X11.X_ChangeSaveSet} =  6, 
{\b Tao::Platform::X11.X_ReparentWindow} =  7, 
{\b Tao::Platform::X11.X_MapWindow} =  8, 
{\b Tao::Platform::X11.X_MapSubwindows} =  9, 
{\b Tao::Platform::X11.X_UnmapWindow} =  10, 
{\b Tao::Platform::X11.X_UnmapSubwindows} =  11, 
{\b Tao::Platform::X11.X_ConfigureWindow} =  12, 
{\b Tao::Platform::X11.X_CirculateWindow} =  13, 
{\b Tao::Platform::X11.X_GetGeometry} =  14, 
{\b Tao::Platform::X11.X_QueryTree} =  15, 
{\b Tao::Platform::X11.X_InternAtom} =  16, 
{\b Tao::Platform::X11.X_GetAtomName} =  17, 
{\b Tao::Platform::X11.X_ChangeProperty} =  18, 
{\b Tao::Platform::X11.X_DeleteProperty} =  19, 
{\b Tao::Platform::X11.X_GetProperty} =  20, 
{\b Tao::Platform::X11.X_ListProperties} =  21, 
{\b Tao::Platform::X11.X_SetSelectionOwner} =  22, 
{\b Tao::Platform::X11.X_GetSelectionOwner} =  23, 
{\b Tao::Platform::X11.X_ConvertSelection} =  24, 
{\b Tao::Platform::X11.X_SendEvent} =  25, 
{\b Tao::Platform::X11.X_GrabPointer} =  26, 
{\b Tao::Platform::X11.X_UngrabPointer} =  27, 
{\b Tao::Platform::X11.X_GrabButton} =  28, 
{\b Tao::Platform::X11.X_UngrabButton} =  29, 
{\b Tao::Platform::X11.X_ChangeActivePointerGrab} =  30, 
{\b Tao::Platform::X11.X_GrabKeyboard} =  31, 
{\b Tao::Platform::X11.X_UngrabKeyboard} =  32, 
{\b Tao::Platform::X11.X_GrabKey} =  33, 
{\b Tao::Platform::X11.X_UngrabKey} =  34, 
{\b Tao::Platform::X11.X_AllowEvents} =  35, 
{\b Tao::Platform::X11.X_GrabServer} =  36, 
{\b Tao::Platform::X11.X_UngrabServer} =  37, 
{\b Tao::Platform::X11.X_QueryPointer} =  38, 
{\b Tao::Platform::X11.X_GetMotionEvents} =  39, 
{\b Tao::Platform::X11.X_TranslateCoords} =  40, 
{\b Tao::Platform::X11.X_WarpPointer} =  41, 
{\b Tao::Platform::X11.X_SetInputFocus} =  42, 
{\b Tao::Platform::X11.X_GetInputFocus} =  43, 
{\b Tao::Platform::X11.X_QueryKeymap} =  44, 
{\b Tao::Platform::X11.X_OpenFont} =  45, 
{\b Tao::Platform::X11.X_CloseFont} =  46, 
{\b Tao::Platform::X11.X_QueryFont} =  47, 
{\b Tao::Platform::X11.X_QueryTextExtents} =  48, 
{\b Tao::Platform::X11.X_ListFonts} =  49, 
{\b Tao::Platform::X11.X_ListFontsWithInfo} =  50, 
{\b Tao::Platform::X11.X_SetFontPath} =  51, 
{\b Tao::Platform::X11.X_GetFontPath} =  52, 
{\b Tao::Platform::X11.X_CreatePixmap} =  53, 
{\b Tao::Platform::X11.X_FreePixmap} =  54, 
{\b Tao::Platform::X11.X_CreateGC} =  55, 
{\b Tao::Platform::X11.X_ChangeGC} =  56, 
{\b Tao::Platform::X11.X_CopyGC} =  57, 
{\b Tao::Platform::X11.X_SetDashes} =  58, 
{\b Tao::Platform::X11.X_SetClipRectangles} =  59, 
{\b Tao::Platform::X11.X_FreeGC} =  60, 
{\b Tao::Platform::X11.X_ClearArea} =  61, 
{\b Tao::Platform::X11.X_CopyArea} =  62, 
{\b Tao::Platform::X11.X_CopyPlane} =  63, 
{\b Tao::Platform::X11.X_PolyPoint} =  64, 
{\b Tao::Platform::X11.X_PolyLine} =  65, 
{\b Tao::Platform::X11.X_PolySegment} =  66, 
{\b Tao::Platform::X11.X_PolyRectangle} =  67, 
{\b Tao::Platform::X11.X_PolyArc} =  68, 
{\b Tao::Platform::X11.X_FillPoly} =  69, 
{\b Tao::Platform::X11.X_PolyFillRectangle} =  70, 
{\b Tao::Platform::X11.X_PolyFillArc} =  71, 
{\b Tao::Platform::X11.X_PutImage} =  72, 
{\b Tao::Platform::X11.X_GetImage} =  73, 
{\b Tao::Platform::X11.X_PolyText8} =  74, 
{\b Tao::Platform::X11.X_PolyText16} =  75, 
{\b Tao::Platform::X11.X_ImageText8} =  76, 
{\b Tao::Platform::X11.X_ImageText16} =  77, 
{\b Tao::Platform::X11.X_CreateColormap} =  78, 
{\b Tao::Platform::X11.X_FreeColormap} =  79, 
{\b Tao::Platform::X11.X_CopyColormapAndFree} =  80, 
{\b Tao::Platform::X11.X_InstallColormap} =  81, 
{\b Tao::Platform::X11.X_UninstallColormap} =  82, 
{\b Tao::Platform::X11.X_ListInstalledColormaps} =  83, 
{\b Tao::Platform::X11.X_AllocColor} =  84, 
{\b Tao::Platform::X11.X_AllocNamedColor} =  85, 
{\b Tao::Platform::X11.X_AllocColorCells} =  86, 
{\b Tao::Platform::X11.X_AllocColorPlanes} =  87, 
{\b Tao::Platform::X11.X_FreeColors} =  88, 
{\b Tao::Platform::X11.X_StoreColors} =  89, 
{\b Tao::Platform::X11.X_StoreNamedColor} =  90, 
{\b Tao::Platform::X11.X_QueryColors} =  91, 
{\b Tao::Platform::X11.X_LookupColor} =  92, 
{\b Tao::Platform::X11.X_CreateCursor} =  93, 
{\b Tao::Platform::X11.X_CreateGlyphCursor} =  94, 
{\b Tao::Platform::X11.X_FreeCursor} =  95, 
{\b Tao::Platform::X11.X_RecolorCursor} =  96, 
{\b Tao::Platform::X11.X_QueryBestSize} =  97, 
{\b Tao::Platform::X11.X_QueryExtension} =  98, 
{\b Tao::Platform::X11.X_ListExtensions} =  99, 
{\b Tao::Platform::X11.X_ChangeKeyboardMapping} =  100, 
{\b Tao::Platform::X11.X_GetKeyboardMapping} =  101, 
{\b Tao::Platform::X11.X_ChangeKeyboardControl} =  102, 
{\b Tao::Platform::X11.X_GetKeyboardControl} =  103, 
{\b Tao::Platform::X11.X_Bell} =  104, 
{\b Tao::Platform::X11.X_ChangePointerControl} =  105, 
{\b Tao::Platform::X11.X_GetPointerControl} =  106, 
{\b Tao::Platform::X11.X_SetScreenSaver} =  107, 
{\b Tao::Platform::X11.X_GetScreenSaver} =  108, 
{\b Tao::Platform::X11.X_ChangeHosts} =  109, 
{\b Tao::Platform::X11.X_ListHosts} =  110, 
{\b Tao::Platform::X11.X_SetAccessControl} =  111, 
{\b Tao::Platform::X11.X_SetCloseDownMode} =  112, 
{\b Tao::Platform::X11.X_KillClient} =  113, 
{\b Tao::Platform::X11.X_RotateProperties} =  114, 
{\b Tao::Platform::X11.X_ForceScreenSaver} =  115, 
{\b Tao::Platform::X11.X_SetPointerMapping} =  116, 
{\b Tao::Platform::X11.X_GetPointerMapping} =  117, 
{\b Tao::Platform::X11.X_SetModifierMapping} =  118, 
{\b Tao::Platform::X11.X_GetModifierMapping} =  119, 
{\b Tao::Platform::X11.X_NoOperation} =  127
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XIMProperties} \{ {\b Tao::Platform::X11.XIMPreeditArea} =  0x0001, 
{\b Tao::Platform::X11.XIMPreeditCallbacks} =  0x0002, 
{\b Tao::Platform::X11.XIMPreeditPosition} =  0x0004, 
{\b Tao::Platform::X11.XIMPreeditNothing} =  0x0008, 
{\b Tao::Platform::X11.XIMPreeditNone} =  0x0010, 
{\b Tao::Platform::X11.XIMStatusArea} =  0x0100, 
{\b Tao::Platform::X11.XIMStatusCallbacks} =  0x0200, 
{\b Tao::Platform::X11.XIMStatusNothing} =  0x0400, 
{\b Tao::Platform::X11.XIMStatusNone} =  0x0800
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.WindowType} \{ {\b Tao::Platform::X11.Client} =  1, 
{\b Tao::Platform::X11.Whole} =  2, 
{\b Tao::Platform::X11.Both} =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Tao::Platform::X11.XEmbedMessage} \{ {\b Tao::Platform::X11.EmbeddedNotify} =  0, 
{\b Tao::Platform::X11.WindowActivate} =  1, 
{\b Tao::Platform::X11.WindowDeactivate} =  2, 
{\b Tao::Platform::X11.RequestFocus} =  3, 
{\b Tao::Platform::X11.FocusIn} =  4, 
{\b Tao::Platform::X11.FocusOut} =  5, 
{\b Tao::Platform::X11.FocusNext} =  6, 
{\b Tao::Platform::X11.FocusPrev} =  7, 
{\b Tao::Platform::X11.ModalityOn} =  10, 
{\b Tao::Platform::X11.ModalityOff} =  11, 
{\b Tao::Platform::X11.RegisterAccelerator} =  12, 
{\b Tao::Platform::X11.UnregisterAccelerator} =  13, 
{\b Tao::Platform::X11.ActivateAccelerator} =  14
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal delegate int {\b Tao::Platform::X11.XErrorHandler} (IntPtr DisplayHandle, ref XErrorEvent error_event)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/Sdl.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/Sdl.cs}
{\xe \v src/Tao.Sdl/Sdl.cs}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.Sdl}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple DirectMedia Layer binding for .NET, implementing SDL 1.2.13. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_AudioSpec}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Specification Structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_AudioCVT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Audio Conversion Structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_CDtrack}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CD Track Information Structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.Sdl.SDL_CD}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CDROM Drive Information. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.Sdl.SDL_CDTrackData}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_ActiveEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Application visibility event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_KeyboardEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Keyboard event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_MouseMotionEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse motion event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_MouseButtonEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mouse button event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_JoyAxisEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick axis motion event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_JoyBallEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick trackball motion event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_JoyHatEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick hat position change event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_JoyButtonEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Joystick button event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_ResizeEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Window resized event. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_ExposeEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Screen redraw event. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_QuitEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quit requested event. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Sdl.SDL_UserEvent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user-defined event type. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SDL_SysWMEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SDL_Event}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SDL_keysym}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b SDL_keysym} structure describes a key press or a key release. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_Cursor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMmsg_Unix}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom event structure. TODO. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMinfo_Unix}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The UNIX custom window manager information structure. TODO. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMmsg_Windows}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom event structure. TODO. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMinfo_Windows}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Windows custom window manager information structure. TODO. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMmsg_RiscOS}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RISC OS custom event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMinfo_RiscOS}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RISCOS custom window manager information structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMmsg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom event structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_SysWMinfo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic custom window manager information structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_TimerID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_version}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SDL library. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_Rect}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a rectangular area. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_Color}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format independent color description. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_Palette}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Color palette for 8-bit pixel formats. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_PixelFormat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_Surface}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Graphical Surface Structure. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_VideoInfo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Video Target information. Useful for determining the video hardware capabilities. Not finished. The C struct uses a set of bit-fields that need to be marshalled. The vfmt IntPtr works and provided useful information. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SDL_Overlay}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The YUV hardware video overlay. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Sdl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_LockSurface} ({\b surface})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock a surface for directly access. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_UnlockSurface} ({\b surface})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("Pixel Color - R: %d,  G: %d,  B: %d,  A: %d\\n", red, {\b green}, {\b blue}, {\b alpha})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b AudioSpecCallbackDelegate} (IntPtr userdata, IntPtr stream, int len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used in the SDL_AudioSpec struct. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b SDL_EventFilter} ([Out] SDL_Event evt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function sets up a filter to process all events before they change internal state and are posted to the internal event queue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b ThreadDelegate} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int (SDLCALL *fn)(void *) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b SDL_TimerCallback} (int interval)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prototype for the timer callback. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate int {\b SDL_NewTimerCallback} (int interval)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prototype for the new timer callback. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_QuitSubSystem} (int flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down specified subsystems. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_QuitSubSystem} (uint flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down specified subsystems. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WasInit} (int flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks which SDL subsystems are initialized. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint {\b SDL_WasInit} (uint flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks which SDL subsystems are initialized. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_Quit} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down SDL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b SDL_GetAppState} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns the current state of the application, which is a bitwise combination of SDL_APPMOUSEFOCUS, SDL_APPINPUTFOCUS, and SDL_APPACTIVE. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_AudioInit} (string driver_name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used internally, and should not be used unless you have a specific need to specify the audio driver you want to use. You should normally use SDL_Init(int) or SDL_InitSubSystem(int). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_AudioQuit} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used internally, and should not be used unless you have a specific need to specify the audio driver you want to use. You should normally use SDL_Init() or SDL_InitSubSystem(). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_OpenAudio} (IntPtr desired, IntPtr obtained)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens the audio device with the desired parameters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetAudioStatus} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current audio state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_PauseAudio} (int pause_on)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses and unpauses the audio callback processing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_LoadWAV_RW} (IntPtr src, int freesrc, out IntPtr spec, out IntPtr audio_buf, out int audio_len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function loads a WAVE from the data source, automatically freeing that source if 'freesrc' is non-zero. For example, to load a WAVE file, you could do: SDL_LoadWAV_RW(SDL_RWFromFile("sample.wav", "rb"), 1, ...);. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_LoadWAV_RW} (IntPtr src, int freesrc, out IntPtr spec, out IntPtr audio_buf, out uint audio_len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function loads a WAVE from the data source, automatically freeing that source if 'freesrc' is non-zero. For example, to load a WAVE file, you could do: SDL_LoadWAV_RW(SDL_RWFromFile("sample.wav", "rb"), 1, ...);. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_FreeWAV} (ref IntPtr audio_buf)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees previously opened WAV data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_BuildAudioCVT} (IntPtr cvt, short src_format, byte src_channels, int src_rate, short dst_format, byte dst_channels, int dst_rate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a SDL_AudioCVT structure for conversion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_BuildAudioCVT} (IntPtr cvt, ushort src_format, byte src_channels, int src_rate, ushort dst_format, byte dst_channels, int dst_rate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a SDL_AudioCVT structure for conversion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_ConvertAudio} (IntPtr cvt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert audio data to a desired audio format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_MixAudio} (IntPtr dst, IntPtr src, int len, int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mix audio data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_MixAudio} (IntPtr dst, IntPtr src, uint len, int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mix audio data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_LockAudio} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock out the callback function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_UnlockAudio} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlock the callback function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_CloseAudio} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down audio processing and closes the audio device. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CDNumDrives} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the number of CD-ROM drives on the system. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b SDL_CDName} (int drive)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a human-readable, system-dependent identifier for the CD-ROM. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CDPlay} (IntPtr cdrom, int start, int length)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens a CD-ROM drive for access. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CDPlayTracks} (IntPtr cdrom, int start_track, int start_frame, int ntracks, int nframes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play the given CD track(s). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CDPause} (IntPtr cdrom)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses a CDROM. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CDResume} (IntPtr cdrom)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resumes a CDROM. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CDStop} (IntPtr cdrom)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops a CDROM. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CDEject} (IntPtr cdrom)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ejects a CDROM. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_CDClose} (IntPtr cdrom)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Closes a SDL_CD handle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_HasRDTSC} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has the RDTSC instruction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_HasMMX} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has MMX features. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_HasMMXExt} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has MMX Ext. features. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_Has3DNow} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has 3DNow features. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_HasSSE} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has SSE features. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_HasSSE2} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has SSE2 features. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_HasAltiVec} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has AltiVec features. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_SetError} (string message)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an SDL error string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_ClearError} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the SDL error. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_PumpEvents} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pumps the event loop, gathering events from the input devices. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_PeepEvents} ([In, Out]SDL_Event[] events, int numevents, int action, int mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the event queue for messages and optionally returns them. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_PeepEvents} ([In, Out]SDL_Event[] events, int numevents, int action, uint mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the event queue for messages and optionally returns them. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_PollEvent} (out SDL_Event sdlEvent)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Polls for currently pending events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WaitEvent} (out SDL_Event evt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits indefinitely for the next available event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_PushEvent} (out SDL_Event evt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pushes an event onto the event queue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_SetEventFilter} (SDL_EventFilter filter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up a filter to process all events before they are posted to the event queue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static SDL_EventFilter {\b SDL_GetEventFilter} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves a pointer to the event filter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_EventState} (byte type, int state)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function allows you to set the state of processing certain events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_NumJoysticks} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count the number of joysticks attached to the system. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_JoystickOpen} (int device_index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open a joystick for use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickOpened} (int device_index)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if a joystick has been opened. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickIndex} (IntPtr joystick)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the index of an SDL_Joystick. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickNumAxes} (IntPtr joystick)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick axes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickNumBalls} (IntPtr joystick)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick trackballs. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickNumHats} (IntPtr joystick)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick hats. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickNumButtons} (IntPtr joystick)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick buttons. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_JoystickUpdate} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the state of all joysticks. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickEventState} (int state)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable/disable joystick event polling. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short {\b SDL_JoystickGetAxis} (IntPtr joystick, int axis)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current state of an axis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b SDL_JoystickGetHat} (IntPtr joystick, int hat)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current state of a joystick hat. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_JoystickGetBall} (IntPtr joystick, int ball, out int dx, out int dy)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get relative trackball motion. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b SDL_JoystickGetButton} (IntPtr joystick, int button)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current state of a given button on a given joystick. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_JoystickClose} (IntPtr joystick)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Closes a previously opened joystick. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_EnableUNICODE} (int enable)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable UNICODE translation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_EnableKeyRepeat} (int rate, int delay)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set keyboard repeat rate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetKeyRepeat} (out int rate, out int delay)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get keyboard repeat rate. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetModState} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the state of modifier keys. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_SetModState} (int modstate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the current key modifier state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_LoadObject} (string sofile)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function dynamically loads a shared object and returns a pointer to the object handle (or NULL if there was an error). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_LoadFunction} (IntPtr handle, string name)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given an object handle, this function looks up the address of the named function in the shared object and returns it. This address is no longer valid after calling {\b SDL_UnloadObject()}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_UnloadObject} (IntPtr handle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unload a shared object from memory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b SDL_GetMouseState} (out int x, out int y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the current state of the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b SDL_GetRelativeMouseState} (out int x, out int y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the current state of the mouse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_WarpMouse} (short x, short y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position of the mouse cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_WarpMouse} (ushort x, ushort y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position of the mouse cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CreateCursor} (ref byte data, ref byte mask, int w, int {\b h}, int hot_x, int hot_y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new mouse cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_SetCursor} (ref {\b SDL_Cursor} cursor)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the currently active cursor to the specified one. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_GetCursor} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the currently active cursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_FreeCursor} (ref {\b SDL_Cursor} cursor)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees a cursor created with SDL_CreateCursor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_ShowCursor} (int toggle)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toggle whether or not the cursor is shown on the screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateMutex} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a mutex, initialized unlocked. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_mutexP} (IntPtr mutex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock the mutex (Returns 0, or -1 on error). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_mutexV} (IntPtr mutex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlock the mutex (Returns 0, or -1 on error). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_DestroyMutex} (IntPtr mutex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a mutex. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateSemaphore} (int initial_value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a semaphore, initialized with value, returns NULL on failure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateSemaphore} (uint initial_value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a semaphore, initialized with value, returns NULL on failure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_DestroySemaphore} (IntPtr sem)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a semaphore. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SemWait} (IntPtr sem)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function suspends the calling thread until the semaphore pointed to by sem has a positive count. It then atomically decreases the semaphore count. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SemtryWait} (IntPtr sem)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-blocking variant of {\b SDL_SemWait()}, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait would block, and -1 on error. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SemWaitTimeout} (IntPtr sem, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variant of {\b SDL_SemWait()} with a timeout in milliseconds, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait does not succeed in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SemWaitTimeout} (IntPtr sem, uint ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variant of {\b SDL_SemWait()} with a timeout in milliseconds, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait does not succeed in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SemPost} (IntPtr sem)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atomically increases the semaphore's count (not blocking), returns 0, or -1 on error. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SemValue} (IntPtr sem)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current count of the semaphore. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateCond} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a condition variable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_DestroyCond} (IntPtr cond)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a condition variable. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CondSignal} (IntPtr cond)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart one of the threads that are waiting on the condition variable, returns 0 or -1 on error. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CondBroadcast} (IntPtr cond)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart all threads that are waiting on the condition variable, returns 0 or -1 on error. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CondWait} (IntPtr cond, IntPtr mut)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait on the condition variable, unlocking the provided mutex. The mutex must be locked before entering this function! Returns 0 when it is signaled, or -1 on error. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CondWaitTimeout} (IntPtr cond, IntPtr mutex, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for at most 'ms' milliseconds, and returns 0 if the condition variable is signaled, SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_CondWaitTimeout} (IntPtr cond, IntPtr mutex, uint ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for at most 'ms' milliseconds, and returns 0 if the condition variable is signaled, SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_RWFromFile} (string file, string mode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create SDL_RWops structures from file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_RWFromMem} (IntPtr mem, int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create SDL_RWops structures from memory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_RWFromFP} (IntPtr fp, int autoclose)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_RWFromFP creates a new SDL_RWops structure from a file pointer, opened with stdio. If autoclose is nonzero, the file will be automatically closed when the RWops structure is closed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_RWFromConstMem} (IntPtr mem, int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares a constant memory area for use with RWops. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_AllocRW} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates an empty, unpopulated SDL_RWops structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_FreeRW} (IntPtr context)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees an SDL_RWops structure allocated by {\b SDL_AllocRW}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short {\b SDL_ReadLE16} (IntPtr src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short {\b SDL_ReadBE16} (IntPtr src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_ReadLE32} (IntPtr src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_ReadBE32} (IntPtr src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static long {\b SDL_ReadLE64} (IntPtr src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static long {\b SDL_ReadBE64} (IntPtr src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteLE16} (IntPtr dst, short val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteLE16} (IntPtr dst, ushort val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteBE16} (IntPtr dst, short val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteBE16} (IntPtr dst, ushort val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteLE32} (IntPtr dst, int val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteLE32} (IntPtr dst, uint val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteBE32} (IntPtr dst, int val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteBE32} (IntPtr dst, uint val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteLE64} (IntPtr dst, long val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WriteBE64} (IntPtr dst, long val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_putenv} (string variable)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puts a variable of the form "name=value" into the environment. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetWMInfo} (out Sdl.SDL_SysWMinfo_Unix info)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetWMInfo} (out Sdl.SDL_SysWMinfo_Windows info)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetWMInfo} (out Sdl.SDL_SysWMinfo_RiscOS info)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetWMInfo} (out Sdl.SDL_SysWMinfo info)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateThread} (ThreadDelegate fn, object data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create thread. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_ThreadID} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 32-bit thread identifier for the current thread. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetThreadID} (IntPtr thread)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 32-bit thread identifier for the specified thread, equivalent to {\b SDL_ThreadID()} if the specified thread is NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_WaitThread} (IntPtr thread, out int status)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for a thread to finish. The return code for the thread function is placed in the area pointed to by 'status', if 'status' is not NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_KillThread} (IntPtr thread)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forcefully kill a thread without worrying about its state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetTicks} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of milliseconds since the SDL library initialization. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_Delay} (int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait a specified number of milliseconds before returning. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_Delay} (uint ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait a specified number of milliseconds before returning. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetTimer} (int interval, SDL_TimerCallback callback)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a callback to run after the specified number of milliseconds has elapsed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetTimer} (uint interval, SDL_TimerCallback callback)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a callback to run after the specified number of milliseconds has elapsed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b SDL_TimerID} {\b SDL_AddTimer} (int interval, SDL_NewTimerCallback callback)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a timer which will call a callback after the specified number of milliseconds has elapsed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b SDL_TimerID} {\b SDL_AddTimer} (uint interval, SDL_NewTimerCallback callback)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a timer which will call a callback after the specified number of milliseconds has elapsed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_RemoveTimer} ({\b SDL_TimerID} t)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove a timer which was added with {\b SDL_AddTimer(int, SDL_NewTimerCallback)}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_GetVideoSurface} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns a pointer to the current display surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_GetVideoInfo} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns a read-only pointer to information about the video hardware. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_VideoModeOK} (int width, int height, int bpp, int flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check to see if a particular video mode is supported. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_VideoModeOK} (int width, int height, int bpp, uint flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check to see if a particular video mode is supported. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_SetVideoMode} (int width, int height, int bpp, int flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up a video mode with the specified width, height and bits-per-pixel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_SetVideoMode} (int width, int height, int bpp, uint flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up a video mode with the specified width, height and bits-per-pixel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_UpdateRects} (IntPtr {\b screen}, int numrects,[In, Out] {\b SDL_Rect}[] rects)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure the given list of rectangles is updated on the given screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_UpdateRect} (IntPtr {\b screen}, int x, int y, int w, int {\b h})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure the given area is updated on the given screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_UpdateRect} (IntPtr {\b screen}, int x, int y, uint w, uint {\b h})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure the given area is updated on the given screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_Flip} (IntPtr {\b screen})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swaps screen buffers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetGamma} (float {\b red}, float {\b green}, float {\b blue})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the gamma correction for each of the color channels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetGammaRamp} ([In, Out] short[] {\b red},[In, Out] short[] {\b green},[In, Out] short[] {\b blue})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the gamma translation table for the red, green, and blue channels of the video hardware. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetGammaRamp} ([In, Out] short[] {\b red},[In, Out] short[] {\b green},[In, Out] short[] {\b blue})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the color gamma lookup tables for the display. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GetGammaRamp} ([In, Out] ushort[] {\b red},[In, Out] ushort[] {\b green},[In, Out] ushort[] {\b blue})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the color gamma lookup tables for the display. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
... {\b for} ({\b i}=0;{\b i} &{\b lt};256;{\b i}++)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b if} (!{\b screen})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_SetColors} ({\b screen}, {\b colors}, 0, 256)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
....</example >< paramname="surface"></param >< paramname="firstcolor"></param >< paramname="ncolors"></param >< paramname="colors"></param >< returns > If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to {\b SDL_SetColors} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
....</example >< paramname="surface"></param >< paramname="firstcolor"></param >< paramname="ncolors"></param >< paramname="colors"></param >< returns > If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to it will return.If not all the color entries were set exactly as it will and you should look at the {\b surface} palette to determine the actual color palette.</returns >< seealsocref="SDL_Color"> SDL_Color</seealso >< seealsocref="SDL_Surface"> SDL_Surface</seealso >< seealsocref="SDL_SetPalette"> SDL_SetPalette</seealso >< seealsocref="SDL_SetVideoMode(int,int,int,int)"> SDL_SetVideoMode</seealso > *static int {\b SDL_SetColors} (IntPtr {\b surface},[In, Out] {\b SDL_Color}[] {\b colors}, int firstcolor, int ncolors)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_SetPalette} ({\b screen}, SDL_LOGPAL|SDL_PHYSPAL, {\b colors}, 0, 256)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
....</code ></example >< paramname="surface"></param >< paramname="colors"></param >< paramname="firstcolor"></param >< paramname="flags"></param >< paramname="ncolors"></param >< returns > If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to it will return.If not all the color entries were set exactly as it will and you should look at the {\b surface} palette to determine the actual color palette.</returns > *static int {\b SDL_SetPalette} (IntPtr {\b surface}, int flags,[In, Out] {\b SDL_Color}[] {\b colors}, int firstcolor, int ncolors)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_MapRGB} (IntPtr format, byte r, byte g, byte b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map a RGB color value to a pixel format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_MapRGBA} (IntPtr format, byte r, byte g, byte b, byte a)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map a RGBA color value to a pixel format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_GetRGB} (int {\b pixel}, IntPtr {\b fmt}, out byte r, out byte g, out byte b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGB values from a pixel in the specified pixel format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_GetRGB} (uint {\b pixel}, IntPtr {\b fmt}, out byte r, out byte g, out byte b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGB values from a pixel in the specified pixel format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_GetRGBA} (int {\b pixel}, IntPtr {\b fmt}, out byte r, out byte g, out byte b, out byte a)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGBA values from a pixel in the specified pixel format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b if} ({\b surface}==NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
</example >< paramname="flags"></param >< paramname="width"></param >< paramname="height"></param >< paramname="depth"></param >< paramname="Rmask"></param >< paramname="Gmask"></param >< paramname="Bmask"></param >< paramname="Amask"></param >< returns > IntPtr or NULL upon error.</returns >< seealsocref="SDL_CreateRGBSurfaceFrom(System.IntPtr,int,int,int,int,int,int,int,int)"> SDL_CreateRGBSurfaceFrom</seealso >< seealsocref="SDL_FreeSurface"> SDL_FreeSurface</seealso >< seealsocref="SDL_SetVideoMode(int,int,int,int)"> SDL_SetVideoMode</seealso >< seealsocref="SDL_LockSurface"> SDL_LockSurface</seealso >< seealsocref="SDL_PixelFormat"> SDL_PixelFormat</seealso >< seealsocref="SDL_Surface"> SDL_Surface</seealso >< seealsocref="SDL_SetAlpha(IntPtr,int,byte)"> SDL_SetAlpha</seealso >< seealsocref="SDL_SetColorKey(IntPtr,int,int)"> SDL_SetColorKey</seealso > *static IntPtr {\b SDL_CreateRGBSurface} (int flags, int width, int height, int depth, int {\b Rmask}, int {\b Gmask}, int {\b Bmask}, int {\b Amask})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
</example >< paramname="flags"></param >< paramname="width"></param >< paramname="height"></param >< paramname="depth"></param >< paramname="Rmask"></param >< paramname="Gmask"></param >< paramname="Bmask"></param >< paramname="Amask"></param >< returns > IntPtr or NULL upon error.</returns >< seealsocref="SDL_CreateRGBSurfaceFrom(System.IntPtr,int,int,int,int,int,int,int,int)"> SDL_CreateRGBSurfaceFrom</seealso >< seealsocref="SDL_FreeSurface"> SDL_FreeSurface</seealso >< seealsocref="SDL_SetVideoMode(int,int,int,int)"> SDL_SetVideoMode</seealso >< seealsocref="SDL_LockSurface"> SDL_LockSurface</seealso >< seealsocref="SDL_PixelFormat"> SDL_PixelFormat</seealso >< seealsocref="SDL_Surface"> SDL_Surface</seealso >< seealsocref="SDL_SetAlpha(IntPtr,int,byte)"> SDL_SetAlpha</seealso >< seealsocref="SDL_SetColorKey(IntPtr,int,int)"> SDL_SetColorKey</seealso > *static IntPtr {\b SDL_CreateRGBSurface} (uint flags, int width, int height, int depth, uint {\b Rmask}, uint {\b Gmask}, uint {\b Bmask}, uint {\b Amask})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_AllocSurface} (int flags, int width, int height, int depth, int {\b Rmask}, int {\b Gmask}, int {\b Bmask}, int {\b Amask})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_AllocSurface} (uint flags, int width, int height, int depth, uint {\b Rmask}, uint {\b Gmask}, uint {\b Bmask}, uint {\b Amask})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateRGBSurfaceFrom} (IntPtr pixels, int width, int height, int depth, int pitch, int {\b Rmask}, int {\b Gmask}, int {\b Bmask}, int {\b Amask})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an {\b SDL_Surface} from pixel data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateRGBSurfaceFrom} (IntPtr pixels, int width, int height, int depth, int pitch, uint {\b Rmask}, uint {\b Gmask}, uint {\b Bmask}, uint {\b Amask})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an {\b SDL_Surface} from pixel data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_FreeSurface} (IntPtr {\b surface})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees (deletes) a {\b SDL_Surface}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
.</code >< p > Binds to C function call in SDL_video.or if the {\b surface} couldn t be locked.</returns >< seealsocref="SDL_UnlockSurface"> SDL_UnlockSurface</seealso > *static int {\b SDL_LockSurface} (IntPtr {\b surface})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_UnlockSurface} (IntPtr {\b surface})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlocks a previously locked surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_LoadBMP_RW} (IntPtr src, int freesrc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a surface from a seekable SDL data source (memory or file.). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SaveBMP_RW} (IntPtr {\b surface}, IntPtr dst, int freedst)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save a surface to a seekable SDL data source (memory or file.). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetColorKey} (IntPtr {\b surface}, int flag, int key)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the color key (transparent pixel) in a blittable surface and RLE acceleration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetColorKey} (IntPtr {\b surface}, uint flag, uint key)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the color key (transparent pixel) in a blittable surface and RLE acceleration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetAlpha} (IntPtr {\b surface}, int flag, byte {\b alpha})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjust the alpha properties of a surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_SetAlpha} (IntPtr {\b surface}, uint flag, byte {\b alpha})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjust the alpha properties of a surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_SetClipRect} (IntPtr {\b surface}, ref {\b SDL_Rect} rect)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the clipping rectangle for a surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_GetClipRect} (IntPtr {\b surface}, ref {\b SDL_Rect} rect)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the clipping rectangle for a surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_ConvertSurface} (IntPtr src, IntPtr {\b fmt}, int flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a surface to the same format as another surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_ConvertSurface} (IntPtr src, IntPtr {\b fmt}, uint flags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a surface to the same format as another surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_BlitSurface} (IntPtr src, ref {\b SDL_Rect} srcrect, IntPtr dst, ref {\b SDL_Rect} dstrect)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This performs a fast blit from the source surface to the destination surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_FillRect} (IntPtr {\b surface}, ref {\b SDL_Rect} rect, int color)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function performs a fast fill of the given rectangle with some color. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_FillRect} (IntPtr {\b surface}, ref {\b SDL_Rect} rect, uint color)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function performs a fast fill of the given rectangle with some color. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_DisplayFormat} (IntPtr {\b surface})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a surface to the display format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_DisplayFormatAlpha} (IntPtr {\b surface})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a surface to the display format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateYUVOverlay} (int width, int height, int format, IntPtr display)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a YUV video overlay. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_CreateYUVOverlay} (int width, int height, uint format, IntPtr display)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a YUV video overlay. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_LockYUVOverlay} (IntPtr overlay)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock an overlay. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_UnlockYUVOverlay} (IntPtr overlay)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlock an overlay. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_DisplayYUVOverlay} (IntPtr overlay, ref {\b SDL_Rect} dstrect)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blit the overlay to the display. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_FreeYUVOverlay} (IntPtr overlay)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free a YUV video overlay. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GL_LoadLibrary} (string path)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specify an OpenGL library. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b SDL_GL_GetProcAddress} (string proc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the address of a GL function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_GL_SwapBuffers} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swap OpenGL framebuffers/Update Display. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GL_SetAttribute} (int attr, int val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a special SDL/OpenGL attribute. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_GL_GetAttribute} (int attr, out int val)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of a special SDL/OpenGL attribute. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_WM_SetCaption} (string title, string icon)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the title and icon text of the display window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_WM_GetCaption} (out string title, out string icon)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the title and icon text of the display window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SDL_WM_SetIcon} (IntPtr icon, byte[] mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the icon for the display window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WM_IconifyWindow} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iconify/Minimise the window. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WM_ToggleFullScreen} (IntPtr {\b surface})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toggle fullscreen mode without changing the contents of the screen. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b SDL_WM_GrabInput} (int mode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grabs mouse and keyboard input. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Tao::Sdl.SDL_SysWMEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_PixelFormat} * {\b fmt} = surface.format\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores surface format information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Surface} * {\b surface}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an empty {\b SDL_Surface}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint32 {\b temp} = {\b pixel}&amp\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint32 {\b pixel} = *((Uint32*)surface.pixels)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint8 {\b red} = (Uint8){\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint8 {\b green} = (Uint8){\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint8 {\b blue} = (Uint8){\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint8 {\b alpha} = (Uint8){\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Rmask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
& {\b gt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Rshift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
& {\b lt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Rloss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Gmask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Gshift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Gloss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Bmask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Bshift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Bloss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Amask}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Ashift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fmt. {\b Aloss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Surface} * {\b screen} = SDL_SetVideoMode(640, 480, 8, SDL_HWPALETTE)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets a portion of the colormap for the given 8-bit surface. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SDL_Color} {\b colors} [256]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b i}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
....</example >< paramname="surface"></param >< paramname="firstcolor"></param >< paramname="ncolors"></param >< paramname="colors"></param >< returns > If {\b surface} is not a palettized this function does {\b nothing}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
....</example >< paramname="surface"></param >< paramname="firstcolor"></param >< paramname="ncolors"></param >< paramname="colors"></param >< returns > If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to it will return.If not all the color entries were set exactly as {\b given}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
....</example >< paramname="surface"></param >< paramname="firstcolor"></param >< paramname="ncolors"></param >< paramname="colors"></param >< returns > If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to it will return.If not all the color entries were set exactly as it will {\b return}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
....</code ></example >< paramname="surface"></param >< paramname="colors"></param >< paramname="firstcolor"></param >< paramname="flags"></param >< paramname="ncolors"></param >< returns > If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to {\b SDL_SetPalette}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint32 {\b rmask} = 0x000000ff\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint32 {\b gmask} = 0x00ff0000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint32 {\b bmask} = 0x0000ff00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uint32 {\b amask} = 0x000000ff\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
</example >< paramname="flags"></param >< paramname="width"></param >< paramname="height"></param >< paramname="depth"></param >< paramname="Rmask"></param >< paramname="Gmask"></param >< paramname="Bmask"></param >< paramname="Amask"></param >< returns > IntPtr {\b to< see cref="SDL_Surface"/>}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
.</code >< p > Binds to C function call in SDL_video. {\b h}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AudioSpecCallbackDelegate\:Sdl.cs}
{\xe \v Sdl.cs\:AudioSpecCallbackDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void AudioSpecCallbackDelegate (IntPtr {\i userdata}, IntPtr {\i stream}, int {\i len})}
}\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used in the SDL_AudioSpec struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v for\:Sdl.cs}
{\xe \v Sdl.cs\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ({\b i} = {\f2 0;{\b i}&{\b lt};256;{\b i}++})}
}\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v if\:Sdl.cs}
{\xe \v Sdl.cs\:if}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
if (! {\i screen})}
}\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v if\:Sdl.cs}
{\xe \v Sdl.cs\:if}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
if ({\b surface} = {\f2 =\~ NULL})}
}\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:Sdl.cs}
{\xe \v Sdl.cs\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("Pixel Color - R: % {\i d}, G:% {\i d}, B:% {\i d}, A:%d\\n", {\b red}, {\b green}, {\b blue}, {\b alpha})}
}\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_AddTimer\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_AddTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b SDL_TimerID} SDL_AddTimer (int {\i interval}, SDL_NewTimerCallback {\i callback})}
}\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a timer which will call a callback after the specified number of milliseconds has elapsed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i callback} The callback to run. \par
{\i interval} The timer interval. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an ID value for the added timer or NULL if there was an error. \par
}Adds a callback function to be run after the specified number of milliseconds has elapsed. The callback function is passed the current timer interval and the user supplied parameter from the SDL_AddTimer call and returns the next timer interval. If the returned value from the callback is the same as the one passed in, the periodic alarm continues, otherwise a new alarm is scheduled. \par
To cancel a currently running timer call {\b SDL_RemoveTimer} with the timer ID returned from SDL_AddTimer. \par
The timer callback function may run in a different thread than your main program, and so shouldn't call any functions from within itself. You may always call SDL_PushEvent, however. \par
The granularity of the timer is platform-dependent, but you should count on it being at least 10 ms as this is the most common number. This means that if you request a 16 ms timer, your callback will run approximately 20 ms later on an unloaded system. If you wanted to set a flag signaling a frame update at 30 frames per second (every 33 ms), you might set a timer for 30 ms (see example below). If you use this function, you need to pass SDL_INIT_TIMER to SDL_Init(int). \par
Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_TimerID SDLCALL \par
                SDL_AddTimer(Uint32 interval, \par
                SDL_NewTimerCallback callback, void *param)\par
}
  \par
}}
{\xe \v SDL_AddTimer\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_AddTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b SDL_TimerID} SDL_AddTimer (uint {\i interval}, SDL_NewTimerCallback {\i callback})}
}\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a timer which will call a callback after the specified number of milliseconds has elapsed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i callback} The callback to run. \par
{\i interval} The timer interval. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an ID value for the added timer or NULL if there was an error. \par
}Adds a callback function to be run after the specified number of milliseconds has elapsed. The callback function is passed the current timer interval and the user supplied parameter from the SDL_AddTimer call and returns the next timer interval. If the returned value from the callback is the same as the one passed in, the periodic alarm continues, otherwise a new alarm is scheduled. \par
To cancel a currently running timer call {\b SDL_RemoveTimer} with the timer ID returned from SDL_AddTimer. \par
The timer callback function may run in a different thread than your main program, and so shouldn't call any functions from within itself. You may always call SDL_PushEvent, however. \par
The granularity of the timer is platform-dependent, but you should count on it being at least 10 ms as this is the most common number. This means that if you request a 16 ms timer, your callback will run approximately 20 ms later on an unloaded system. If you wanted to set a flag signaling a frame update at 30 frames per second (every 33 ms), you might set a timer for 30 ms (see example below). If you use this function, you need to pass SDL_INIT_TIMER to SDL_Init(int). \par
Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_TimerID SDLCALL \par
                SDL_AddTimer(Uint32 interval, \par
                SDL_NewTimerCallback callback, void *param)\par
}
  \par
}}
{\xe \v SDL_AllocRW\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_AllocRW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_AllocRW ()}
}\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates an empty, unpopulated SDL_RWops structure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_AllocRW allocates an empty, unpopulated SDL_RWops structure. You must fill out the fields yourself. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the allocated memory on success, or NULL on error. \par
You must free any memory allocated with {\b SDL_AllocRW} with {\b SDL_FreeRW}. Depending on your operating system and compiler, there may be a difference between the malloc() and free() your program uses and the versions SDL calls internally. Trying to mix the two can cause crashing such as segmentation faults.\par
}}}
{\xe \v SDL_AllocSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_AllocSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_AllocSurface (int {\i flags}, int {\i width}, int {\i height}, int {\i depth}, int {\i Rmask}, int {\i Gmask}, int {\i Bmask}, int {\i Amask})}
}\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i flags} \par
{\i width} \par
{\i height} \par
{\i depth} \par
{\i Rmask} \par
{\i Gmask} \par
{\i Bmask} \par
{\i Amask} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_AllocSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_AllocSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_AllocSurface (uint {\i flags}, int {\i width}, int {\i height}, int {\i depth}, uint {\i Rmask}, uint {\i Gmask}, uint {\i Bmask}, uint {\i Amask})}
}\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i flags} \par
{\i width} \par
{\i height} \par
{\i depth} \par
{\i Rmask} \par
{\i Gmask} \par
{\i Bmask} \par
{\i Amask} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_AudioInit\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_AudioInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_AudioInit (string {\i driver_name})}
}\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used internally, and should not be used unless you have a specific need to specify the audio driver you want to use. You should normally use SDL_Init(int) or SDL_InitSubSystem(int). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_AudioInit(const char *driver_name)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i driver_name} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_AudioQuit\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_AudioQuit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_AudioQuit ()}
}\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used internally, and should not be used unless you have a specific need to specify the audio driver you want to use. You should normally use SDL_Init() or SDL_InitSubSystem(). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_AudioQuit()\par
}
 \par
}}
{\xe \v SDL_BlitSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_BlitSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_BlitSurface (IntPtr {\i src}, ref {\b SDL_Rect} {\i srcrect}, IntPtr {\i dst}, ref {\b SDL_Rect} {\i dstrect})}
}\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This performs a fast blit from the source surface to the destination surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This performs a fast blit from the source surface to the destination surface. \par
The width and height in srcrect determine the size of the copied rectangle. Only the position is used in the dstrect (the width and height are ignored). \par
If srcrect is NULL, the entire surface is copied. If dstrect is NULL, then the destination position (upper left corner) is (0, 0). \par
The final blit rectangle is saved in dstrect after all clipping is performed (srcrect is not modified). \par
The blit function should not be called on a locked surface. \par
The results of blitting operations vary greatly depending on whether SDL_SRCAPLHA is set or not. See SDL_SetAlpha for an explaination of how this affects your results. Colorkeying and alpha attributes also interact with surface blitting, as the following pseudo-code should hopefully explain.  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid if (source surface has SDL_SRCALPHA set) \par
                \{\par
                        if (source surface has alpha channel (that is, format->Amask != 0))\par
                        blit using per-pixel alpha, ignoring any colour key\par
                        else \{\par
                        if (source surface has SDL_SRCCOLORKEY set)\par
                                blit using the colour key AND the per-surface alpha value\par
                        else\par
                                blit using the per-surface alpha value\par
                        \}\par
           \} \par
           else \par
           \{\par
           if (source surface has SDL_SRCCOLORKEY set)\par
           blit using the colour key\par
           else\par
           ordinary opaque rectangular blit\par
           \}\par
}
 p>Binds to C-function call in SDL_video.h: code>int SDL_BlitSurface(SDL_Surface *src, SDL_Rect *srcrect, SDL_Surface *dst, SDL_Rect *dstrect); /code>\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} IntPtr to {\b SDL_Surface}\par
{\i srcrect} IntPtr to {\b SDL_Rect}\par
{\i dst} IntPtr to {\b SDL_Surface}\par
{\i dstrect} IntPtr to {\b SDL_Rect}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the blit is successful, it returns 0, otherwise it returns -1. \par
If either of the surfaces were in video memory, and the blit returns -2, the video memory was lost, so it should be reloaded with artwork and re-blitted: \par
{
\par
\pard\plain \s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid while ( SDL_BlitSurface(image, imgrect, screen, dstrect) == -2 ) \par
                \{\par
                        while ( SDL_LockSurface(image)) &lt; 0 )\par
                        SDL_Delay(10);\par
                        -- Write image pixels to image-&gt;pixels --\par
                        SDL_UnlockSurface(image);\par
                \}\par
}
 \par
This happens under DirectX 5.0 when the system switches away from your fullscreen application. Locking the surface will also fail until you have access to the video memory again. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LockSurface}, {\b SDL_FillRect(IntPtr, ref SDL_Rect, int)}, {\b SDL_Surface}, {\b SDL_Rect}\par
}}}
{\xe \v SDL_BuildAudioCVT\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_BuildAudioCVT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_BuildAudioCVT (IntPtr {\i cvt}, short {\i src_format}, byte {\i src_channels}, int {\i src_rate}, short {\i dst_format}, byte {\i dst_channels}, int {\i dst_rate})}
}\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a SDL_AudioCVT structure for conversion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Before an SDL_AudioCVT structure can be used to convert audio data it must be initialized with source and destination information. \par
src_format and dst_format are the source and destination format of the conversion. (For information on audio formats see SDL_AudioSpec). src_channels and dst_channels are the number of channels in the source and destination formats. Finally, src_rate and dst_rate are the frequency or samples-per-second of the source and destination formats. Once again, see SDL_AudioSpec. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_BuildAudioCVT(SDL_AudioCVT *cvt, Uint16 src_format, Uint8 src_channels, int src_rate, Uint16 dst_format, Uint8 dst_channels, int dst_rate)\par
}
\par
See {\b SDL_ConvertAudio}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cvt} \par
{\i src_format} \par
{\i src_channels} \par
{\i src_rate} \par
{\i dst_format} \par
{\i dst_channels} \par
{\i dst_rate} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns -1 if the filter could not be built or 1 if it could. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_ConvertAudio}, SDL_AudioCVT\par
}}}
{\xe \v SDL_BuildAudioCVT\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_BuildAudioCVT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_BuildAudioCVT (IntPtr {\i cvt}, ushort {\i src_format}, byte {\i src_channels}, int {\i src_rate}, ushort {\i dst_format}, byte {\i dst_channels}, int {\i dst_rate})}
}\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a SDL_AudioCVT structure for conversion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Before an SDL_AudioCVT structure can be used to convert audio data it must be initialized with source and destination information. \par
src_format and dst_format are the source and destination format of the conversion. (For information on audio formats see SDL_AudioSpec). src_channels and dst_channels are the number of channels in the source and destination formats. Finally, src_rate and dst_rate are the frequency or samples-per-second of the source and destination formats. Once again, see SDL_AudioSpec. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_BuildAudioCVT(SDL_AudioCVT *cvt, Uint16 src_format, Uint8 src_channels, int src_rate, Uint16 dst_format, Uint8 dst_channels, int dst_rate)\par
}
\par
See {\b SDL_ConvertAudio}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cvt} \par
{\i src_format} \par
{\i src_channels} \par
{\i src_rate} \par
{\i dst_format} \par
{\i dst_channels} \par
{\i dst_rate} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns -1 if the filter could not be built or 1 if it could. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_ConvertAudio}, SDL_AudioCVT\par
}}}
{\xe \v SDL_CDClose\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDClose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_CDClose (IntPtr {\i cdrom})}
}\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Closes a SDL_CD handle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Closes the given cdrom handle. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_CDClose(SDL_CD *cdrom);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cdrom} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_CDOpen, SDL_CD\par
}}}
{\xe \v SDL_CDEject\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDEject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CDEject (IntPtr {\i cdrom})}
}\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ejects a CDROM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ejects the given cdrom. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_CDEject(SDL_CD *cdrom)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cdrom} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0, or -1 on error.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_CD\par
}}}
{\xe \v SDL_CDName\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string SDL_CDName (int {\i drive})}
}\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a human-readable, system-dependent identifier for the CD-ROM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Drive is the index of the drive. Drive indices start to 0 and end at {\b SDL_CDNumDrives()}-1. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid const char *SDL_CDName(int drive);\par
}
\par
Example: "/dev/cdrom" "E:" "/dev/disk/ide/1/master" \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i drive} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a human-readable, system-dependent identifier for the CD-ROM. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CDNumDrives}\par
}}}
{\xe \v SDL_CDNumDrives\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDNumDrives}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CDNumDrives ()}
}\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the number of CD-ROM drives on the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the number of CD-ROM drives on the system, or -1 if SDL_Init() has not been called with the SDL_INIT_CDROM flag. \par
Binds to C-function call in SDL_cdrom.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_CDNumDrives(void)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of CD-ROM drives on the system, or -1 if SDL_Init() has not been called with the SDL_INIT_CDROM flag. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_CDOpen\par
}}}
{\xe \v SDL_CDPause\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDPause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CDPause (IntPtr {\i cdrom})}
}\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses a CDROM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses play on the given cdrom. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_CDPause(SDL_CD *cdrom)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cdrom} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0, or -1 on error.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CDPlay}, {\b SDL_CDResume}\par
}}}
{\xe \v SDL_CDPlay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDPlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CDPlay (IntPtr {\i cdrom}, int {\i start}, int {\i length})}
}\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens a CD-ROM drive for access. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens a CD-ROM drive for access. It returns a SDL_CD structure on success, or NULL if the drive was invalid or busy. This newly opened CD-ROM becomes the default CD used when other CD functions are passed a NULL CD-ROM handle. \par
Drives are numbered starting with 0. Drive 0 is the system default CD-ROM. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_CD *SDL_CDOpen(int drive)\par
}
\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_CD *cdrom;\par
                        int cur_track;\par
                        int min, sec, frame;\par
                        SDL_Init(SDL_INIT_CDROM);\par
                        atexit(SDL_Quit);\par
\par
                        /* Check for CD drives */\par
                        if(!SDL_CDNumDrives())\par
                                \{\par
                        /* None found */\par
                        fprintf(stderr, "No CDROM devices available\\n");\par
                        exit(-1);\par
                \}\par
\par
                /* Open the default drive */\par
                cdrom=SDL_CDOpen(0);\par
\par
                /* Did if open? Check if cdrom is NULL */\par
                if(!cdrom)\par
           \{\par
                fprintf(stderr, "Couldn't open drive: %s\\n", SDL_GetError());\par
                exit(-1);\par
           \}\par
\par
                /* Print Volume info */\par
                printf("Name: %s\\n", SDL_CDName(0));\par
                printf("Tracks: %d\\n", cdrom->numtracks);\par
                for(cur_track=0;cur_track &lt; cdrom-&gt;numtracks; cur_track++)\par
           \{\par
                FRAMES_TO_MSF(cdrom->track[cur_track].length, &amp;min, &amp;sec, &amp;frame);\par
                printf("\\tTrack %d: Length %d:%d\\n", cur_track, min, sec);\par
           \}\par
\par
           SDL_CDClose(cdrom);\par
            /code>\par
            </example>\par
            <param name="drive"></param>\par
            <returns>It returns a SDL_CD structure\par
             on success, or NULL if the drive was invalid or busy.\par
             </returns>\par
             <seealso cref="SDL_CD"/>\par
             <seealso cref="SDL_CDtrack"/>\par
             <seealso cref="SDL_CDClose"/> */\par
        [DllImport(SDL_NATIVE_LIBRARY, CallingConvention = CALLING_CONVENTION),\par
        SuppressUnmanagedCodeSecurity]\par
        public static extern IntPtr SDL_CDOpen(int drive);\par
\par
}
\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int playTrack(int track)\par
                \{\par
                        int playing = 0;\par
\par
                        if ( CD_INDRIVE(SDL_CDStatus(cdrom)) ) \par
                \{\par
                        /* clamp to the actual number of tracks on the CD */\par
                        if (track >= cdrom->numtracks) \par
                \{\par
                        track = cdrom->numtracks-1;\par
                \}\par
\par
                if ( SDL_CDPlayTracks(cdrom, track, 0, 1, 0) == 0 ) \par
           \{\par
                playing = 1;\par
           \}\par
           \}\par
           return playing;\par
           \}\par
            /code>\par
            </example>\par
            <param name="cdrom"></param>\par
            <returns>CDstatus enum</returns>\par
            <seealso cref="SDL_CD"/> */\par
        [DllImport(SDL_NATIVE_LIBRARY, CallingConvention = CALLING_CONVENTION),\par
        SuppressUnmanagedCodeSecurity]\par
        public static extern int SDL_CDStatus(IntPtr cdrom);\par
\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cdrom} \par
{\i start} \par
{\i length} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It returns 0, or -1 if there was an error.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CDPlayTracks}, {\b SDL_CDStop}\par
}}}
{\xe \v SDL_CDPlayTracks\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDPlayTracks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CDPlayTracks (IntPtr {\i cdrom}, int {\i start_track}, int {\i start_frame}, int {\i ntracks}, int {\i nframes})}
}\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play the given CD track(s). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_CDPlayTracks plays the given CD starting at track start_track, for ntracks tracks. \par
start_frame is the frame offset, from the beginning of the start_track, at which to start. nframes is the frame offset, from the beginning of the last track (start_track+ntracks), at which to end playing. \par
SDL_CDPlayTracks should only be called after calling SDL_CDStatus to get track information about the CD. \par
Note: Data tracks are ignored. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_CDPlayTracks(SDL_CD *cdrom, int start_track, int start_frame, int ntracks, int nframes))\par
}
\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                         /* assuming cdrom is a previously opened device */\par
                        /* Play the entire CD */\par
                        if(CD_INDRIVE(SDL_CDStatus(cdrom)))\par
                        SDL_CDPlayTracks(cdrom, 0, 0, 0, 0);\par
\par
                        /* Play the first track */\par
                        if(CD_INDRIVE(SDL_CDStatus(cdrom)))\par
                        SDL_CDPlayTracks(cdrom, 0, 0, 1, 0);\par
\par
                        /* Play first 15 seconds of the 2nd track */\par
                        if(CD_INDRIVE(SDL_CDStatus(cdrom)))\par
                        SDL_CDPlayTracks(cdrom, 1, 0, 0, CD_FPS*15);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cdrom} \par
{\i start_track} \par
{\i start_frame} \par
{\i ntracks} \par
{\i nframes} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0, or -1 if there was an error.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CDPlay}, SDL_CDStatus, SDL_CD\par
}}}
{\xe \v SDL_CDResume\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDResume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CDResume (IntPtr {\i cdrom})}
}\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resumes a CDROM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resumes play on the given cdrom. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_CDResume(SDL_CD *cdrom)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cdrom} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CDPlay}, {\b SDL_CDPause}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0, or -1 on error.\par
}}}
{\xe \v SDL_CDStop\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CDStop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CDStop (IntPtr {\i cdrom})}
}\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops a CDROM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops play on the given cdrom. \par
Binds to C-function in SDL_cdrom.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_CDStop(SDL_CD *cdrom)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cdrom} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0, or -1 on error.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CDPlay}\par
}}}
{\xe \v SDL_ClearError\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ClearError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_ClearError ()}
}\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the SDL error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_error.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_ClearError(void)\par
}
  \par
}}
{\xe \v SDL_CloseAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CloseAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_CloseAudio ()}
}\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down audio processing and closes the audio device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function shuts down audio processing and closes the audio device. \par
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_CloseAudio(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_OpenAudio}\par
}}}
{\xe \v SDL_CondBroadcast\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CondBroadcast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CondBroadcast (IntPtr {\i cond})}
}\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart all threads that are waiting on the condition variable, returns 0 or -1 on error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Restart all threads that are waiting on the condition variable, returns 0 or -1 on error. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_CondBroadcast(SDL_cond *cond)\par
}
  \par
}}
{\xe \v SDL_CondSignal\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CondSignal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CondSignal (IntPtr {\i cond})}
}\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart one of the threads that are waiting on the condition variable, returns 0 or -1 on error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Restart one of the threads that are waiting on the condition variable, returns 0 or -1 on error. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_CondSignal(SDL_cond *cond)\par
}
  \par
}}
{\xe \v SDL_CondWait\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CondWait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CondWait (IntPtr {\i cond}, IntPtr {\i mut})}
}\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait on the condition variable, unlocking the provided mutex. The mutex must be locked before entering this function! Returns 0 when it is signaled, or -1 on error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Wait on the condition variable, unlocking the provided mutex. The mutex must be locked before entering this function! Returns 0 when it is signaled, or -1 on error. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_CondWait(SDL_cond *cond, SDL_mutex *mut)\par
}
  \par
}}
{\xe \v SDL_CondWaitTimeout\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CondWaitTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CondWaitTimeout (IntPtr {\i cond}, IntPtr {\i mutex}, int {\i ms})}
}\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for at most 'ms' milliseconds, and returns 0 if the condition variable is signaled, SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid returns 0 if the condition variable is signaled, SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_CondWaitTimeout(SDL_cond *cond, SDL_mutex *mutex, Uint32 ms)\par
}
  \par
}}
{\xe \v SDL_CondWaitTimeout\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CondWaitTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CondWaitTimeout (IntPtr {\i cond}, IntPtr {\i mutex}, uint {\i ms})}
}\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for at most 'ms' milliseconds, and returns 0 if the condition variable is signaled, SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid returns 0 if the condition variable is signaled, SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_CondWaitTimeout(SDL_cond *cond, SDL_mutex *mutex, Uint32 ms)\par
}
  \par
}}
{\xe \v SDL_ConvertAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ConvertAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_ConvertAudio (IntPtr {\i cvt})}
}\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert audio data to a desired audio format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_ConvertAudio takes one parameter, cvt, which was previously initialized. Initilizing a SDL_AudioCVT is a two step process. First of all, the structure must be passed to {\b SDL_BuildAudioCVT(IntPtr, short, byte, int, short, byte, int)} along with source and destination format parameters. Secondly, the cvt->buf and cvt->len fields must be setup. cvt->buf should point to the audio data and cvt->len should be set to the length of the audio data in bytes. Remember, the length of the buffer pointed to by buf show be len*len_mult bytes in length. \par
Once the SDL_AudioCVTstructure is initilized then we can pass it to SDL_ConvertAudio, which will convert the audio data pointer to by cvt->buf. If SDL_ConvertAudio returned 0 then the conversion was completed successfully, otherwise -1 is returned. \par
If the conversion completed successfully then the converted audio data can be read from cvt->buf. The amount of valid, converted, audio data in the buffer is equal to cvt->len*cvt->len_ratio. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_ConvertAudio(SDL_AudioCVT *cvt)\par
}
\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             /* Converting some WAV data to hardware format */\par
                        void my_audio_callback(void *userdata, Uint8 *stream, int len);\par
\par
                        SDL_AudioSpec *desired, *obtained;\par
                        SDL_AudioSpec wav_spec;\par
                        SDL_AudioCVT  wav_cvt;\par
                        Uint32 wav_len;\par
                        Uint8 *wav_buf;\par
                        int ret;\par
\par
                        /* Allocated audio specs */\par
                        desired = malloc(sizeof(SDL_AudioSpec));\par
                        obtained = malloc(sizeof(SDL_AudioSpec));\par
\par
                        /* Set desired format */\par
                        desired-&gt;freq=22050;\par
                        desired-&gt;format=AUDIO_S16LSB;\par
                        desired-&gt;samples=8192;\par
                        desired-&gt;callback=my_audio_callback;\par
                        desired-&gt;userdata=NULL;\par
\par
                        /* Open the audio device */\par
                        if ( SDL_OpenAudio(desired, obtained) &lt; 0 )\par
                \{\par
                        fprintf(stderr, "Couldn't open audio: %s\\n", SDL_GetError());\par
                        exit(-1);\par
                \}\par
\par
                free(desired);\par
\par
                /* Load the test.wav */\par
                if( SDL_LoadWAV("test.wav", &amp;wav_spec, &amp;wav_buf, &amp;wav_len) == NULL )\par
           \{\par
                fprintf(stderr, "Could not open test.wav: %s\\n", SDL_GetError());\par
                SDL_CloseAudio();\par
                free(obtained);\par
                exit(-1);\par
\par
                /* Build AudioCVT */\par
                ret = SDL_BuildAudioCVT(&amp;wav_cvt,\par
                wav_spec.format, wav_spec.channels, wav_spec.freq,\par
                obtained-&gt;format, obtained-&gt;channels, obtained-&gt;freq);\par
\par
                /* Check that the convert was built */\par
                if(ret==-1)\par
           \{\par
                fprintf(stderr, "Couldn't build converter!\\n");\par
                SDL_CloseAudio();\par
                free(obtained);\par
                SDL_FreeWAV(wav_buf);\par
           \}\par
\par
                /* Setup for conversion */\par
                wav_cvt.buf = malloc(wav_len * wav_cvt.len_mult);\par
                wav_cvt.len = wav_len;\par
                memcpy(wav_cvt.buf, wav_buf, wav_len);\par
\par
                /* We can delete to original WAV data now */\par
                SDL_FreeWAV(wav_buf);\par
\par
                /* And now we're ready to convert */\par
                SDL_ConvertAudio(&amp;wav_cvt);\par
\par
                /* do whatever */\par
                .\par
                .\par
                .\par
                .\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cvt} IntPtr to SDL_AudioCVT struct. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If SDL_ConvertAudio returned 0 then the conversion was completed successfully, otherwise -1 is returned. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_AudioCVT, {\b SDL_BuildAudioCVT(IntPtr, short, byte, int, short, byte, int)}\par
}}}
{\xe \v SDL_ConvertSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ConvertSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_ConvertSurface (IntPtr {\i src}, IntPtr {\i fmt}, int {\i flags})}
}\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a surface to the same format as another surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new surface of the specified format, and then copies and maps the given surface to it. If this function fails, it returns NULL. \par
The flags parameter is passed to {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} and has those semantics. \par
This function is used internally by {\b SDL_DisplayFormat}. \par
This function can only be called after SDL_Init. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_Surface *SDL_ConvertSurface(SDL_Surface *src, SDL_PixelFormat *fmt, Uint32 flags)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} IntPtr to {\b SDL_Surface}\par
{\i fmt} IntPTr to {\b SDL_PixelFormat}\par
{\i flags} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns either a pointer to the new surface, or NULL on error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)}\par
}SDL_CreateRGBSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_DisplayFormat}\par
}SDL_DisplayFormat\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}\par
}{\b SDL_PixelFormat}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
}}
{\xe \v SDL_ConvertSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ConvertSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_ConvertSurface (IntPtr {\i src}, IntPtr {\i fmt}, uint {\i flags})}
}\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a surface to the same format as another surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new surface of the specified format, and then copies and maps the given surface to it. If this function fails, it returns NULL. \par
The flags parameter is passed to {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} and has those semantics. \par
This function is used internally by {\b SDL_DisplayFormat}. \par
This function can only be called after SDL_Init. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_Surface *SDL_ConvertSurface(SDL_Surface *src, SDL_PixelFormat *fmt, Uint32 flags)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} IntPtr to {\b SDL_Surface}\par
{\i fmt} IntPTr to {\b SDL_PixelFormat}\par
{\i flags} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns either a pointer to the new surface, or NULL on error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)}\par
}SDL_CreateRGBSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_DisplayFormat}\par
}SDL_DisplayFormat\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}\par
}{\b SDL_PixelFormat}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
}}
{\xe \v SDL_CreateCond\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateCond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateCond ()}
}\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a condition variable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid intPtr to variable \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_cond * SDLCALL SDL_CreateCond(void)\par
}
  \par
}}
{\xe \v SDL_CreateCursor\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_CreateCursor (ref byte {\i data}, ref byte {\i mask}, int {\i w}, int {\i h}, int {\i hot_x}, int {\i hot_y})}
}\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new mouse cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a cursor using the specified data and mask (in MSB format). The cursor width must be a multiple of 8 bits. \par
The cursor is created in black and white according to the following: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             data  mask    resulting pixel on screen\par
             0     1       White\par
             1     1       Black\par
             0     0       Transparent\par
             1     0       Inverted color if possible, black if not.\par
}
 Cursors created with this function must be freed with {\b SDL_FreeCursor}. \par
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_Cursor *SDL_CreateCursor(Uint8 *data, Uint8 *mask, int w, int h, int hot_x, int hot_y);\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             /* Stolen from the mailing list */\par
 Creates a new mouse cursor from an XPM */\par
\par
            /* XPM */\par
           static const char *arrow[] = \{\par
             /* width height num_colors chars_per_pixel */\par
             "    32    32        3            1",\par
             /* colors */\par
            "X c #000000",\par
             ". c #ffffff",\par
             "  c None",\par
             /* pixels */\par
             "X                               ",\par
             "XX                              ",\par
             "X.X                             ",\par
             "X..X                            ",\par
             "X...X                           ",\par
             "X....X                          ",\par
             "X.....X                         ",\par
             "X......X                        ",\par
             "X.......X                       ",\par
             "X........X                      ",\par
             "X.....XXXXX                     ",\par
             "X..X..X                         ",\par
             "X.X X..X                        ",\par
             "XX  X..X                        ",\par
             "X    X..X                       ",\par
             "     X..X                       ",\par
             "      X..X                      ",\par
             "      X..X                      ",\par
             "       XX                       ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "                                ",\par
             "0,0"\par
           \};\par
\par
           static SDL_Cursor *init_system_cursor(const char *image[])\par
           \{\par
             int i, row, col;\par
             Uint8 data[4*32];\par
             Uint8 mask[4*32];\par
             int hot_x, hot_y;\par
\par
             i = -1;\par
             for ( row=0; row&lt;32; ++row ) \{\par
               for ( col=0; col&lt;32; ++col ) \{\par
                 if ( col % 8 ) \{\par
                   data[i] &lt;&lt;= 1;\par
                   mask[i] &lt;&lt;= 1;\par
                 \} else \{\par
                   ++i;\par
                   data[i] = mask[i] = 0;\par
                 \}\par
                 switch (image[4+row][col]) \{\par
                   case 'X':\par
                     data[i] |= 0x01;\par
                     mask[i] |= 0x01;\par
                     break;\par
                   case '.':\par
                     mask[i] |= 0x01;\par
                     break;\par
                   case ' ':\par
                     break;\par
                 \}\par
               \}\par
             \}\par
             sscanf(image[4+row], "%d,%d", &amp;hot_x, &amp;hot_y);\par
             return SDL_CreateCursor(data, mask, 32, 32, hot_x, hot_y);\par
           \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i data} \par
{\i h} \par
{\i hot_x} \par
{\i hot_y} \par
{\i mask} \par
{\i w} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_FreeCursor}, {\b SDL_SetCursor}, {\b SDL_ShowCursor}\par
}}}
{\xe \v SDL_CreateMutex\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateMutex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateMutex ()}
}\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a mutex, initialized unlocked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to mutex \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_mutex * SDLCALL SDL_CreateMutex(void)\par
}
  \par
}}
{\xe \v SDL_CreateRGBSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateRGBSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
</example><paramname="flags"></param><paramname="width"></param><paramname="height"></param><paramname="depth"></param><paramname="Rmask"></param><paramname="Gmask"></param><paramname="Bmask"></param><paramname="Amask"></param><returns> IntPtr or NULL upon error.</returns><seealsocref="SDL_CreateRGBSurfaceFrom(System.IntPtr,int,int,int,int,int,int,int,int)"> SDL_CreateRGBSurfaceFrom</seealso><seealsocref="SDL_FreeSurface"> SDL_FreeSurface</seealso><seealsocref="SDL_SetVideoMode(int,int,int,int)"> SDL_SetVideoMode</seealso><seealsocref="SDL_LockSurface"> SDL_LockSurface</seealso><seealsocref="SDL_PixelFormat"> SDL_PixelFormat</seealso><seealsocref="SDL_Surface"> SDL_Surface</seealso><seealsocref="SDL_SetAlpha(IntPtr,int,byte)"> SDL_SetAlpha</seealso><seealsocref="SDL_SetColorKey(IntPtr,int,int)"> SDL_SetColorKey</seealso>* static IntPtr SDL_CreateRGBSurface (uint {\i flags}, int {\i width}, int {\i height}, int {\i depth}, uint {\i Rmask}, uint {\i Gmask}, uint {\i Bmask}, uint {\i Amask})}
}\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_CreateRGBSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateRGBSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
</example><paramname="flags"></param><paramname="width"></param><paramname="height"></param><paramname="depth"></param><paramname="Rmask"></param><paramname="Gmask"></param><paramname="Bmask"></param><paramname="Amask"></param><returns> IntPtr or NULL upon error.</returns><seealsocref="SDL_CreateRGBSurfaceFrom(System.IntPtr,int,int,int,int,int,int,int,int)"> SDL_CreateRGBSurfaceFrom</seealso><seealsocref="SDL_FreeSurface"> SDL_FreeSurface</seealso><seealsocref="SDL_SetVideoMode(int,int,int,int)"> SDL_SetVideoMode</seealso><seealsocref="SDL_LockSurface"> SDL_LockSurface</seealso><seealsocref="SDL_PixelFormat"> SDL_PixelFormat</seealso><seealsocref="SDL_Surface"> SDL_Surface</seealso><seealsocref="SDL_SetAlpha(IntPtr,int,byte)"> SDL_SetAlpha</seealso><seealsocref="SDL_SetColorKey(IntPtr,int,int)"> SDL_SetColorKey</seealso>* static IntPtr SDL_CreateRGBSurface (int {\i flags}, int {\i width}, int {\i height}, int {\i depth}, int {\i Rmask}, int {\i Gmask}, int {\i Bmask}, int {\i Amask})}
}\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_CreateRGBSurfaceFrom\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateRGBSurfaceFrom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateRGBSurfaceFrom (IntPtr {\i pixels}, int {\i width}, int {\i height}, int {\i depth}, int {\i pitch}, int {\i Rmask}, int {\i Gmask}, int {\i Bmask}, int {\i Amask})}
}\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an {\b SDL_Surface} from pixel data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\b SDL_Surface} from the provided pixel data. \par
The data stored in pixels is assumed to be of the depth specified in the parameter list. The pixel data is not copied into the {\b SDL_Surface} structure so it should not be freed until the surface has been freed with a called to {\b SDL_FreeSurface}. pitch is the length of each scanline in bytes.  \par
See {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} for a more detailed description of the other parameters. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Surface *SDL_CreateRGBSurfaceFrom(void *pixels, int width, int height, int depth, int pitch, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pixels} \par
{\i width} \par
{\i height} \par
{\i depth} \par
{\i pitch} length of each scanline in bytes.\par
{\i Rmask} \par
{\i Gmask} \par
{\i Bmask} \par
{\i Amask} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created surface, or NULL upon error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)}, {\b SDL_FreeSurface}\par
}}}
{\xe \v SDL_CreateRGBSurfaceFrom\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateRGBSurfaceFrom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateRGBSurfaceFrom (IntPtr {\i pixels}, int {\i width}, int {\i height}, int {\i depth}, int {\i pitch}, uint {\i Rmask}, uint {\i Gmask}, uint {\i Bmask}, uint {\i Amask})}
}\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an {\b SDL_Surface} from pixel data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an {\b SDL_Surface} from the provided pixel data. \par
The data stored in pixels is assumed to be of the depth specified in the parameter list. The pixel data is not copied into the {\b SDL_Surface} structure so it should not be freed until the surface has been freed with a called to {\b SDL_FreeSurface}. pitch is the length of each scanline in bytes.  \par
See {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)} for a more detailed description of the other parameters. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Surface *SDL_CreateRGBSurfaceFrom(void *pixels, int width, int height, int depth, int pitch, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pixels} \par
{\i width} \par
{\i height} \par
{\i depth} \par
{\i pitch} length of each scanline in bytes.\par
{\i Rmask} \par
{\i Gmask} \par
{\i Bmask} \par
{\i Amask} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the created surface, or NULL upon error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)}, {\b SDL_FreeSurface}\par
}}}
{\xe \v SDL_CreateSemaphore\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateSemaphore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateSemaphore (int {\i initial_value})}
}\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a semaphore, initialized with value, returns NULL on failure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Create a semaphore, initialized with value, returns NULL on failure. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_sem * SDLCALL SDL_CreateSemaphore(Uint32 initial_value)\par
}
  \par
}}
{\xe \v SDL_CreateSemaphore\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateSemaphore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateSemaphore (uint {\i initial_value})}
}\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a semaphore, initialized with value, returns NULL on failure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Create a semaphore, initialized with value, returns NULL on failure. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_sem * SDLCALL SDL_CreateSemaphore(Uint32 initial_value)\par
}
  \par
}}
{\xe \v SDL_CreateThread\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateThread (ThreadDelegate {\i fn}, object {\i data})}
}\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to SDL_Thread struct \par
}Binds to C-function call in SDL_thread.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_Thread * SDLCALL SDL_CreateThread(int (SDLCALL *fn)(void *), void *data)\par
}
  \par
}}
{\xe \v SDL_CreateYUVOverlay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateYUVOverlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateYUVOverlay (int {\i width}, int {\i height}, int {\i format}, IntPtr {\i display})}
}\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a YUV video overlay. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_CreateYUVOverlay creates a YUV overlay of the specified width, height and format (see {\b SDL_Overlay} for a list of available formats), for the provided display. A {\b SDL_Overlay} structure is returned. \par
The term 'overlay' is a misnomer since, unless the overlay is created in hardware, the contents for the display surface underneath the area where the overlay is shown will be overwritten when the overlay is displayed. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Overlay *SDL_CreateYUVOverlay(int width, int height, Uint32 format, SDL_Surface *display)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i width} \par
{\i height} \par
{\i format} \par
{\i display} IntPtr to {\b SDL_Surface}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to {\b SDL_Overlay}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Overlay}, {\b SDL_DisplayYUVOverlay}, {\b SDL_FreeYUVOverlay}\par
}}}
{\xe \v SDL_CreateYUVOverlay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_CreateYUVOverlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_CreateYUVOverlay (int {\i width}, int {\i height}, uint {\i format}, IntPtr {\i display})}
}\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a YUV video overlay. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_CreateYUVOverlay creates a YUV overlay of the specified width, height and format (see {\b SDL_Overlay} for a list of available formats), for the provided display. A {\b SDL_Overlay} structure is returned. \par
The term 'overlay' is a misnomer since, unless the overlay is created in hardware, the contents for the display surface underneath the area where the overlay is shown will be overwritten when the overlay is displayed. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Overlay *SDL_CreateYUVOverlay(int width, int height, Uint32 format, SDL_Surface *display)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i width} \par
{\i height} \par
{\i format} \par
{\i display} IntPtr to {\b SDL_Surface}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to {\b SDL_Overlay}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Overlay}, {\b SDL_DisplayYUVOverlay}, {\b SDL_FreeYUVOverlay}\par
}}}
{\xe \v SDL_Delay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_Delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_Delay (int {\i ms})}
}\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait a specified number of milliseconds before returning. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ms} The number of milliseconds to wait. \par
}
{\b SDL_Delay}  will wait at least the specified time, but possible longer due to OS scheduling. Count on a delay granularity of at least 10 ms. Some platforms have shorter clock ticks but this is the most common. \par
Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_Delay(Uint32 ms)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AddTimer(int, SDL_NewTimerCallback)}\par
}}}
{\xe \v SDL_Delay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_Delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_Delay (uint {\i ms})}
}\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait a specified number of milliseconds before returning. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i ms} The number of milliseconds to wait. \par
}
{\b SDL_Delay}  will wait at least the specified time, but possible longer due to OS scheduling. Count on a delay granularity of at least 10 ms. Some platforms have shorter clock ticks but this is the most common. \par
Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_Delay(Uint32 ms)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AddTimer(int, SDL_NewTimerCallback)}\par
}}}
{\xe \v SDL_DestroyCond\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_DestroyCond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_DestroyCond (IntPtr {\i cond})}
}\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a condition variable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_DestroyCond(SDL_cond *cond)\par
}
  \par
}}
{\xe \v SDL_DestroyMutex\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_DestroyMutex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_DestroyMutex (IntPtr {\i mutex})}
}\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a mutex. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_DestroyMutex(SDL_mutex *mutex)\par
}
  \par
}}
{\xe \v SDL_DestroySemaphore\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_DestroySemaphore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_DestroySemaphore (IntPtr {\i sem})}
}\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy a semaphore. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_DestroySemaphore(SDL_sem *sem)\par
}
  \par
}}
{\xe \v SDL_DisplayFormat\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_DisplayFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_DisplayFormat (IntPtr {\i surface})}
}\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a surface to the display format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function takes a surface and copies it to a new surface of the pixel format and colors of the video framebuffer, suitable for fast blitting onto the display surface. It calls {\b SDL_ConvertSurface(IntPtr, IntPtr, int)}. \par
If you want to take advantage of hardware colorkey or alpha blit acceleration, you should set the colorkey and alpha value before calling this function. \par
If you want an alpha channel, see {\b SDL_DisplayFormatAlpha}. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Surface *SDL_DisplayFormat(SDL_Surface *surface)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} IntPtr to {\b SDL_Surface}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to {\b SDL_Surface}. If the conversion fails or runs out of memory, it returns NULL\par
}}}
{\xe \v SDL_DisplayFormatAlpha\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_DisplayFormatAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_DisplayFormatAlpha (IntPtr {\i surface})}
}\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert a surface to the display format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function takes a surface and copies it to a new surface of the pixel format and colors of the video framebuffer plus an alpha channel, suitable for fast blitting onto the display surface. It calls {\b SDL_ConvertSurface(IntPtr, IntPtr, int)}. \par
If you want to take advantage of hardware colorkey or alpha blit acceleration, you should set the colorkey and alpha value before calling this function. \par
This function can be used to convert a colourkey to an alpha channel, if the SDL_SRCCOLORKEY flag is set on the surface. The generated surface will then be transparent (alpha=0) where the pixels match the colourkey, and opaque (alpha=255) elsewhere. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Surface *SDL_DisplayFormatAlpha(SDL_Surface *surface)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to {\b SDL_Surface}. If the conversion fails or runs out of memory, it returns NULL\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_ConvertSurface(IntPtr, IntPtr, int)}, {\b SDL_SetAlpha(IntPtr, int, byte)}, {\b SDL_SetColorKey(IntPtr, int, int)}, {\b SDL_DisplayFormat}, {\b SDL_Surface}\par
}}}
{\xe \v SDL_DisplayYUVOverlay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_DisplayYUVOverlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_DisplayYUVOverlay (IntPtr {\i overlay}, ref {\b SDL_Rect} {\i dstrect})}
}\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blit the overlay to the display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blit the overlay to the surface specified when it was {\b created}. The {\b SDL_Rect} structure, dstrect, specifies the position and size of the destination. If the dstrect is a larger or smaller than the overlay then the overlay will be scaled, this is optimized for 2x scaling. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_DisplayYUVOverlay(SDL_Overlay *overlay, SDL_Rect *dstrect)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i overlay} IntPtr to {\b SDL_Overlay}\par
{\i dstrect} {\b SDL_Rect}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Overlay}, {\b SDL_CreateYUVOverlay(int, int, int, IntPtr)}\par
}}}
{\xe \v SDL_EnableKeyRepeat\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_EnableKeyRepeat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_EnableKeyRepeat (int {\i rate}, int {\i delay})}
}\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set keyboard repeat rate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables or disables the keyboard repeat rate. delay specifies how long the key must be pressed before it begins repeating, it then repeats at the speed specified by interval. Both delay and interval are expressed in milliseconds. \par
Setting delay to 0 disables key repeating completely. Good default values are SDL_DEFAULT_REPEAT_DELAY and SDL_DEFAULT_REPEAT_INTERVAL. p>Binds to C-function in SDL_keyboard.h code>int {\b SDL_EnableKeyRepeat(int delay, int interval)}; /code>\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rate} \par
{\i delay} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success and -1 on failure.\par
}}}
{\xe \v SDL_EnableUNICODE\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_EnableUNICODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_EnableUNICODE (int {\i enable})}
}\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable UNICODE translation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables/Disables Unicode keyboard translation. \par
To obtain the character codes corresponding to received keyboard events, Unicode translation must first be turned on using this function. The translation incurs a slight overhead for each keyboard event and is therefore disabled by default. For each subsequently received key down event, the unicode member of the SDL_keysym structure will then contain the corresponding character code, or zero for keysyms that do not correspond to any character code. \par
A value of 1 for enable enables Unicode translation; 0 disables it, and -1 leaves it unchanged (useful for querying the current translation mode). \par
Note that only key press events will be translated, not release events. \par
Binds to C-function in SDL_keyboard.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_EnableUNICODE(int enable);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i enable} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the previous translation mode (0 or 1). \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_keysym\par
}}}
{\xe \v SDL_EventFilter\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_EventFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int SDL_EventFilter ([Out] SDL_Event {\i evt})}
}\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function sets up a filter to process all events before they change internal state and are posted to the internal event queue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i evt} Event. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the filter returns 1, then the event will be added to the internal queue. If it returns 0, then the event will be dropped from the queue. This allows selective filtering of dynamically. \par
}Binds to C callback in SDL_events.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid typedef Uint32 (SDLCALL *SDL_EventFilter)(const SDL_Event *event)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetEventFilter}, {\b SDL_GetEventFilter}\par
}}}
{\xe \v SDL_EventState\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_EventState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_EventState (byte {\i type}, int {\i state})}
}\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function allows you to set the state of processing certain events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function allows you to set the state of processing certain event type's. \par
If 'state' is set to SDL_IGNORE, that event will be automatically dropped from the event queue and will not be filtered. \par
If 'state' is set to SDL_ENABLE, that event will be processed normally. \par
If 'state' is set to SDL_QUERY, SDL_EventState will return the current processing state of the specified event type. \par
A list of event type's can be found in the SDL_Event section.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i type} \par
{\i state} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success or -1 if the event couldn't be pushed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Event\par
}}}
{\xe \v SDL_FillRect\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_FillRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_FillRect (IntPtr {\i surface}, ref {\b SDL_Rect} {\i rect}, uint {\i color})}
}\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function performs a fast fill of the given rectangle with some color. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function performs a fast fill of the given rectangle with color. If dstrect is NULL, the whole surface will be filled with color. \par
The color should be a pixel of the format used by the surface, and can be generated by the {\b SDL_MapRGB} or {\b SDL_MapRGBA} functions. If the color value contains an alpha value then the destination is simply "filled" with that alpha information, no blending takes place. \par
If there is a clip rectangle set on the destination (set via {\b SDL_SetClipRect}) then this function will clip based on the intersection of the clip rectangle and the dstrect rectangle and the dstrect rectangle will be modified to represent the area actually filled. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_FillRect(SDL_Surface *dst, SDL_Rect *dstrect, Uint32 color);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} IntPtr to {\b SDL_Surface}\par
{\i rect} IntPtr to {\b SDL_Rect}\par
{\i color} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns 0 on success, or -1 on error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}, {\b SDL_MapRGBA}, {\b SDL_BlitSurface}, {\b SDL_Rect}\par
}}}
{\xe \v SDL_FillRect\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_FillRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_FillRect (IntPtr {\i surface}, ref {\b SDL_Rect} {\i rect}, int {\i color})}
}\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function performs a fast fill of the given rectangle with some color. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function performs a fast fill of the given rectangle with color. If dstrect is NULL, the whole surface will be filled with color. \par
The color should be a pixel of the format used by the surface, and can be generated by the {\b SDL_MapRGB} or {\b SDL_MapRGBA} functions. If the color value contains an alpha value then the destination is simply "filled" with that alpha information, no blending takes place. \par
If there is a clip rectangle set on the destination (set via {\b SDL_SetClipRect}) then this function will clip based on the intersection of the clip rectangle and the dstrect rectangle and the dstrect rectangle will be modified to represent the area actually filled. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_FillRect(SDL_Surface *dst, SDL_Rect *dstrect, Uint32 color);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} IntPtr to {\b SDL_Surface}\par
{\i rect} IntPtr to {\b SDL_Rect}\par
{\i color} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns 0 on success, or -1 on error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}, {\b SDL_MapRGBA}, {\b SDL_BlitSurface}, {\b SDL_Rect}\par
}}}
{\xe \v SDL_Flip\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_Flip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_Flip (IntPtr {\i screen})}
}\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swaps screen buffers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
On hardware that supports double-buffering, this function sets up a flip and returns. The hardware will wait for vertical retrace, and then swap video buffers before the next video surface blit or lock will return. On hardware that does not support double-buffering, this is equivalent to calling SDL_UpdateRect(System.IntPtr, int, int, int, int)(screen, 0, 0, 0, 0) \par
The SDL_DOUBLEBUF flag must have been passed to {\b SDL_SetVideoMode(int, int, int, int)} when setting the video mode for this function to perform hardware flipping.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i screen} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns 0 if successful, or -1 if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetVideoMode(int, int, int, int)}\par
}SDL_SetVideoMode\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_UpdateRect(System.IntPtr, int, int, int, int)\par
}SDL_UpdateRect\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
}}
{\xe \v SDL_FreeCursor\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_FreeCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_FreeCursor (ref {\b SDL_Cursor} {\i cursor})}
}\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees a cursor created with SDL_CreateCursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_FreeCursor(SDL_Cursor *cursor)\par
}
  Frees a {\b SDL_Cursor} that was created using {\b SDL_CreateCursor}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cursor} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateCursor}\par
}}}
{\xe \v SDL_FreeRW\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_FreeRW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_FreeRW (IntPtr {\i context})}
}\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees an SDL_RWops structure allocated by {\b SDL_AllocRW}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_FreeRW} frees an SDL_RWops structure previously allocated by {\b SDL_AllocRW}. Only use it on memory allocated by {\b SDL_AllocRW}. Any extra memory allocated during creation of the RWops is not freed by {\b SDL_FreeRW}; the programmer must be responsible for it. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i context} \par
}
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             #include "SDL_rwops.h"\par
            void dumb_example()\par
            \{\par
                SDL_RWops *rw=SDL_AllocRW();\par
                if(rw==NULL) return;\par
                SDL_FreeRW(rw);\par
            \}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_FreeSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_FreeSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_FreeSurface (IntPtr {\i surface})}
}\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees (deletes) a {\b SDL_Surface}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees the resources used by a previously created {\b SDL_Surface}. If the surface was created using SDL_CreateRGBSurfaceFrom(System.IntPtr, int, int, int, int, int, int, int, int) then the pixel data is not freed. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_FreeSurface(SDL_Surface *surface)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateRGBSurface(int, int, int, int, int, int, int, int)}\par
}SDL_CreateRGBSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_CreateRGBSurfaceFrom(System.IntPtr, int, int, int, int, int, int, int, int)\par
}SDL_CreateRGBSurfaceFrom\par
}}
{\xe \v SDL_FreeWAV\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_FreeWAV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_FreeWAV (ref IntPtr {\i audio_buf})}
}\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees previously opened WAV data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
After a WAVE file has been opened with SDL_LoadWAV(string, out IntPtr, out IntPtr, out int) its data can eventually be freed with SDL_FreeWAV. audio_buf is a pointer to the buffer created by SDL_LoadWAV. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_FreeWAV(Uint8 *audio_buf)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i audio_buf} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_LoadWAV(string, out IntPtr, out IntPtr, out int)\par
}}}
{\xe \v SDL_FreeYUVOverlay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_FreeYUVOverlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_FreeYUVOverlay (IntPtr {\i overlay})}
}\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free a YUV video overlay. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees an {\b overlay} created by {\b SDL_CreateYUVOverlay(int, int, int, IntPtr)} \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_FreeYUVOverlay(SDL_Overlay *overlay)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i overlay} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Overlay}, {\b SDL_DisplayYUVOverlay}, {\b SDL_CreateYUVOverlay(int, int, int, IntPtr)}\par
}{\b SDL_Overlay}, SDL_DisplayYUVOverlay, SDL_FreeYUVOverlay \par
}}
{\xe \v SDL_GetAppState\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetAppState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte SDL_GetAppState ()}
}\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns the current state of the application, which is a bitwise combination of SDL_APPMOUSEFOCUS, SDL_APPINPUTFOCUS, and SDL_APPACTIVE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If SDL_APPACTIVE is set, then the user is able to see your application, otherwise it has been iconified or disabled.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current state of the application, which is a bitwise combination of SDL_APPMOUSEFOCUS, SDL_APPINPUTFOCUS, and SDL_APPACTIVE \par
}}}
{\xe \v SDL_GetAudioStatus\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetAudioStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetAudioStatus ()}
}\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current audio state. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_audiostatus SDL_GetAudioStatus(void)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns either SDL_AUDIO_STOPPED, SDL_AUDIO_PAUSED or SDL_AUDIO_PLAYING (SDLaudiostatus enum) depending on the current audio state.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PauseAudio}\par
}}}
{\xe \v SDL_GetClipRect\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetClipRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_GetClipRect (IntPtr {\i surface}, ref {\b SDL_Rect} {\i rect})}
}\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the clipping rectangle for a surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the clipping rectangle for a surface. When this surface is the destination of a blit, only the area within the clip rectangle is drawn into. \par
The rectangle pointed to by rect will be filled with the clipping rectangle of the surface. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_GetClipRect(SDL_Surface *surface, SDL_Rect *rect)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} IntPtr to {\b SDL_Surface}\par
{\i rect} {\b SDL_Rect}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetClipRect}\par
}SDL_SetClipRect\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_BlitSurface}\par
}SDL_BlitSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
}}
{\xe \v SDL_GetCursor\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_GetCursor ()}
}\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the currently active cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_Cursor *SDL_GetCursor(void);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to {\b SDL_Cursor}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateCursor}, {\b SDL_SetCursor}, {\b SDL_ShowCursor}\par
}}}
{\xe \v SDL_GetEventFilter\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetEventFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static SDL_EventFilter SDL_GetEventFilter ()}
}\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves a pointer to the event filter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function retrieces a pointer to the event filter that was previously set using {\b SDL_SetEventFilter}. An SDL_EventFilter function is defined as: \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid              typedef int (*SDL_EventFilter)(const SDL_Event *event);\par
}
 \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_EventFilter SDL_GetEventFilter(void);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to the event filter or NULL if no filter has been set. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Event, {\b SDL_SetEventFilter}\par
}}}
{\xe \v SDL_GetGammaRamp\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetGammaRamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetGammaRamp ([In, Out] short[] {\i red}, [In, Out] short[] {\i green}, [In, Out] short[] {\i blue})}
}\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the color gamma lookup tables for the display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gamma translation lookup tables currently used by the display. Each table is an array of 256 short values. \par
You must pass in valid pointers to arrays of 256 16-bit quantities. Any of the pointers may be NULL to ignore that channel.  \par
Not all display hardware is able to change gamma.  \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDLCALL SDL_GetGammaRamp(Uint16 *red, Uint16 *green, Uint16 *blue)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the call succeeds, it will return 0. If the display driver or hardware does not support gamma translation, or otherwise fails, this function will return -1. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetGamma}\par
}SDL_SetGamma\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetGammaRamp}\par
}SDL_SetGammaRamp\par
}}
{\xe \v SDL_GetGammaRamp\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetGammaRamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetGammaRamp ([In, Out] ushort[] {\i red}, [In, Out] ushort[] {\i green}, [In, Out] ushort[] {\i blue})}
}\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the color gamma lookup tables for the display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the gamma translation lookup tables currently used by the display. Each table is an array of 256 short values. \par
You must pass in valid pointers to arrays of 256 16-bit quantities. Any of the pointers may be NULL to ignore that channel.  \par
Not all display hardware is able to change gamma.  \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDLCALL SDL_GetGammaRamp(Uint16 *red, Uint16 *green, Uint16 *blue)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the call succeeds, it will return 0. If the display driver or hardware does not support gamma translation, or otherwise fails, this function will return -1. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetGamma}\par
}SDL_SetGamma\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetGammaRamp}\par
}SDL_SetGammaRamp\par
}}
{\xe \v SDL_GetKeyRepeat\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetKeyRepeat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetKeyRepeat (out int {\i rate}, out int {\i delay})}
}\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get keyboard repeat rate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keyboard repeat rate. delay specifies how long the key must be pressed before it begins repeating, it then repeats at the speed specified by interval. Both delay and interval are expressed in milliseconds. \par
Setting delay to 0 disables key repeating completely. Good default values are SDL_DEFAULT_REPEAT_DELAY and SDL_DEFAULT_REPEAT_INTERVAL. p>Binds to C-function in SDL_keyboard.h code>int SDL_GetKeyRepeat(int delay, int interval); /code>\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i rate} \par
{\i delay} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success and -1 on failure.\par
}}}
{\xe \v SDL_GetModState\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetModState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetModState ()}
}\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the state of modifier keys. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current state of the modifier keys (CTRL, ALT, etc.). \par
Binds to C-function in SDL_keyboard.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDLMod SDL_GetModState(void)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The return value can be an OR'd combination of the SDLMod enum. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_GetKeyState\par
}}}
{\xe \v SDL_GetMouseState\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetMouseState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte SDL_GetMouseState (out int {\i x}, out int {\i y})}
}\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the current state of the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current button state is returned as a button bitmask, w hich can be tested using the SDL_BUTTON(X) macros, and x and y are set to the current mouse cursor position. You can pass NULL for either x or y. \par
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             Uint8 SDL_GetMouseState(int *x, int *y)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_PumpEvents();\par
                        if(SDL_GetMouseState(NULL, NULL)&amp;SDL_BUTTON(1))\par
                        printf("Mouse Button 1(left) is pressed.\\n");\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRelativeMouseState}, {\b SDL_PumpEvents}\par
}}}
{\xe \v SDL_GetRelativeMouseState\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetRelativeMouseState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte SDL_GetRelativeMouseState (out int {\i x}, out int {\i y})}
}\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the current state of the mouse. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current button state is returned as a button bitmask, which can be tested using the SDL_BUTTON(X) macros, and x and y are set to the change in the mouse position since the last call to SDL_GetRelativeMouseState or since event initialization. You can pass NULL for either x or y. \par
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             Uint8 SDL_GetRelativeMouseState(int *x, int *y);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The current button state is returned as a button bitmask \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetMouseState}\par
}}}
{\xe \v SDL_GetRGB\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetRGB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_GetRGB (int {\i pixel}, IntPtr {\i fmt}, out byte {\i r}, out byte {\i g}, out byte {\i b})}
}\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGB values from a pixel in the specified pixel format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGB component values from a pixel stored in the specified pixel format. \par
This function uses the entire 8-bit [0..255] range when converting color components from pixel formats with less than 8-bits per RGB component (e.g., a completely white pixel in 16-bit RGB565 format would return [0xff, 0xff, 0xff] not [0xf8, 0xfc, 0xf8]). \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_GetRGB(Uint32 pixel, SDL_PixelFormat *fmt, Uint8 *r, Uint8 *g, Uint8 *b);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pixel} \par
{\i fmt} \par
{\i r} \par
{\i g} \par
{\i b} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGBA}\par
}SDL_GetRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}\par
}SDL_MapRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGBA}\par
}SDL_MapRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}\par
}{\b SDL_PixelFormat}\par
}}
{\xe \v SDL_GetRGB\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetRGB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_GetRGB (uint {\i pixel}, IntPtr {\i fmt}, out byte {\i r}, out byte {\i g}, out byte {\i b})}
}\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGB values from a pixel in the specified pixel format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGB component values from a pixel stored in the specified pixel format. \par
This function uses the entire 8-bit [0..255] range when converting color components from pixel formats with less than 8-bits per RGB component (e.g., a completely white pixel in 16-bit RGB565 format would return [0xff, 0xff, 0xff] not [0xf8, 0xfc, 0xf8]). \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_GetRGB(Uint32 pixel, SDL_PixelFormat *fmt, Uint8 *r, Uint8 *g, Uint8 *b);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pixel} \par
{\i fmt} \par
{\i r} \par
{\i g} \par
{\i b} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGBA}\par
}SDL_GetRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}\par
}SDL_MapRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGBA}\par
}SDL_MapRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}\par
}{\b SDL_PixelFormat}\par
}}
{\xe \v SDL_GetRGBA\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetRGBA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_GetRGBA (int {\i pixel}, IntPtr {\i fmt}, out byte {\i r}, out byte {\i g}, out byte {\i b}, out byte {\i a})}
}\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGBA values from a pixel in the specified pixel format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get RGBA component values from a pixel stored in the specified pixel format. \par
This function uses the entire 8-bit [0..255] range when converting color components from pixel formats with less than 8-bits per RGB component (e.g., a completely white pixel in 16-bit RGB565 format would return [0xff, 0xff, 0xff] not [0xf8, 0xfc, 0xf8]). \par
If the surface has no alpha component, the alpha will be returned as 0xff (100% opaque). \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_GetRGBA(Uint32 pixel, SDL_PixelFormat *fmt, Uint8 *r, Uint8 *g, Uint8 *b, Uint8 *a)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pixel} \par
{\i fmt} \par
{\i r} \par
{\i g} \par
{\i b} \par
{\i a} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGB(int, IntPtr, out byte, out byte, out byte)}\par
}SDL_GetRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}\par
}SDL_MapRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGBA}\par
}SDL_MapRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}\par
}{\b SDL_PixelFormat}\par
}}
{\xe \v SDL_GetThreadID\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetThreadID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetThreadID (IntPtr {\i thread})}
}\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 32-bit thread identifier for the specified thread, equivalent to {\b SDL_ThreadID()} if the specified thread is NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid ID \par
}Binds to C-function call in SDL_thread.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_GetThreadID(SDL_Thread *thread)\par
}
  \par
}}
{\xe \v SDL_GetTicks\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetTicks ()}
}\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of milliseconds since the SDL library initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of milliseconds since SDL was initialized. \par
}Note that this value wraps if the program runs for more than ~49 days. \par
Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_GetTicks(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Delay(int)}\par
}}}
{\xe \v SDL_GetVideoInfo\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetVideoInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_GetVideoInfo ()}
}\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns a read-only pointer to information about the video hardware. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If this is called before {\b SDL_SetVideoMode(int, int, int, int)}, the 'vfmt' member of the returned structure will contain the pixel format of the "best" video mode. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC const SDL_VideoInfo * SDLCALL SDL_GetVideoInfo(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to {\b SDL_VideoInfo} struct\par
}{\b SDL_SetVideoMode(int, int, int, int)} {\b SDL_VideoInfo} \par
}}
{\xe \v SDL_GetVideoSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetVideoSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_GetVideoSurface ()}
}\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns a pointer to the current display surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If SDL is doing format conversion on the display surface, this function returns the publicly visible surface, not the real video surface. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_Surface * SDLCALL SDL_GetVideoSurface(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It returns a pointer to a {\b SDL_Surface} struct. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}}}
{\xe \v SDL_GetWMInfo\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetWMInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetWMInfo (out Sdl.SDL_SysWMinfo_Unix {\i info})}
}\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function gives you custom hooks into the window manager information. It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0.\par
You typically use this function like this: SDL_SysWMInfo info; SDL_VERSION(&info.version); if ( SDL_GetWMInfo(&info) ) \{ ... \} \par
Binds to C-function call in SDL_rwops.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_GetWMInfo(SDL_SysWMinfo *info)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i info} IntPtr to {\b SDL_SysWMinfo} struct \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0. \par
}}}
{\xe \v SDL_GetWMInfo\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetWMInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetWMInfo (out Sdl.SDL_SysWMinfo_Windows {\i info})}
}\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function gives you custom hooks into the window manager information. It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0.\par
You typically use this function like this: SDL_SysWMInfo info; SDL_VERSION(&info.version); if ( SDL_GetWMInfo(&info) ) \{ ... \} \par
Binds to C-function call in SDL_rwops.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_GetWMInfo(SDL_SysWMinfo *info)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i info} IntPtr to {\b SDL_SysWMinfo} struct \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0. \par
}}}
{\xe \v SDL_GetWMInfo\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetWMInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetWMInfo (out Sdl.SDL_SysWMinfo_RiscOS {\i info})}
}\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function gives you custom hooks into the window manager information. It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0.\par
You typically use this function like this: SDL_SysWMInfo info; SDL_VERSION(&info.version); if ( SDL_GetWMInfo(&info) ) \{ ... \} \par
Binds to C-function call in SDL_rwops.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_GetWMInfo(SDL_SysWMinfo *info)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i info} IntPtr to {\b SDL_SysWMinfo} struct \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0. \par
}}}
{\xe \v SDL_GetWMInfo\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GetWMInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GetWMInfo (out Sdl.SDL_SysWMinfo {\i info})}
}\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gives you custom hooks into the window manager information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function gives you custom hooks into the window manager information. It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0.\par
You typically use this function like this: SDL_SysWMInfo info; SDL_VERSION(&info.version); if ( SDL_GetWMInfo(&info) ) \{ ... \} \par
Binds to C-function call in SDL_rwops.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_GetWMInfo(SDL_SysWMinfo *info)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i info} IntPtr to {\b SDL_SysWMinfo} struct \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It fills the structure pointed to by 'info' with custom information and returns 1 if the function is implemented. If it's not implemented, or the version member of the 'info' structure is invalid, it returns 0. \par
}}}
{\xe \v SDL_GL_GetAttribute\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GL_GetAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GL_GetAttribute (int {\i attr}, out int {\i val})}
}\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the value of a special SDL/OpenGL attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Places the value of the SDL/OpenGL attribute attr into value. This is useful after a call to {\b SDL_SetVideoMode(int, int, int, int)} to check whether your attributes have been {\b set} as you expected. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_GL_GetAttribute(SDLGLattr attr, int *value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i attr} SDL_GLattr enum\par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success, or -1 on an error.\par
}}}
{\xe \v SDL_GL_GetProcAddress\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GL_GetProcAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_GL_GetProcAddress (string {\i proc})}
}\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the address of a GL function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the address of the GL function proc, or NULL if the function is not found. If the GL library is loaded at runtime, with SDL_GL_LoadLibrary, then all GL functions must be retrieved this way. Usually this is used to retrieve function pointers to OpenGL extensions. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void *SDL_GL_GetProcAddress(const char* proc);\par
}
  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             typedef void (*GL_ActiveTextureARB_Func)(unsigned int);\par
                        GL_ActiveTextureARB_Func glActiveTextureARB_ptr = 0;\par
                        int has_multitexture=1;\par
                        .\par
                        .\par
                        .\par
                        /* Get function pointer */\par
                        glActiveTextureARB_ptr=(GL_ActiveTextureARB_Func) SDL_GL_GetProcAddress("glActiveTextureARB");\par
\par
                        /* Check for a valid function ptr */\par
                        if(!glActiveTextureARB_ptr)\par
                                \{\par
                        fprintf(stderr, "Multitexture Extensions not present.\\n");\par
                        has_multitexture=0;\par
                \}\par
                .\par
                .\par
                .\par
                .\par
                if(has_multitexture)\par
           \{\par
                glActiveTextureARB_ptr(GL_TEXTURE0_ARB);\par
                .\par
                .\par
           \}\par
                else\par
           \{\par
                .\par
                .\par
           \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i proc} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GL_LoadLibrary}\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the address of the GL function proc, or NULL if the function is not found.\par
}}}
{\xe \v SDL_GL_LoadLibrary\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GL_LoadLibrary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GL_LoadLibrary (string {\i path})}
}\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specify an OpenGL library. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If you wish, you may load the OpenGL library at runtime, this must be done before {\b SDL_SetVideoMode(int, int, int, int)} is called. The path of the GL library is passed to SDL_GL_LoadLibrary and it returns 0 on success, or -1 on an error. You must then use {\b SDL_GL_GetProcAddress} to retrieve function pointers to GL functions. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_GL_LoadLibrary(const char *path);\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i path} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success, or -1 on an error.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GL_GetProcAddress}\par
}}}
{\xe \v SDL_GL_SetAttribute\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GL_SetAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_GL_SetAttribute (int {\i attr}, int {\i val})}
}\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a special SDL/OpenGL attribute. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the OpenGL attribute attr to value. The attributes you set don't take effect until after a call to {\b SDL_SetVideoMode(int, int, int, int)}. You should use {\b SDL_GL_GetAttribute} to check the values after a SDL_SetVideoMode call. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_GL_SetAttribute(SDL_GLattr attr, int value);\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i attr} SDL_GLattr enum\par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success, or -1 on error.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GL_GetAttribute}\par
}}}
{\xe \v SDL_GL_SwapBuffers\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_GL_SwapBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_GL_SwapBuffers ()}
}\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swap OpenGL framebuffers/Update Display. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swap the OpenGL buffers, if double-buffering is supported. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_GL_SwapBuffers(void )\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetVideoMode(int, int, int, int)}, {\b SDL_GL_SetAttribute}\par
}}}
{\xe \v SDL_Has3DNow\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_Has3DNow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_Has3DNow ()}
}\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has 3DNow features. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_cpuinfo.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_SDL_Has3DNow(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns SDL_TRUE if the CPU has 3DNow features.\par
}}}
{\xe \v SDL_HasAltiVec\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_HasAltiVec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_HasAltiVec ()}
}\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has AltiVec features. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_cpuinfo.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_SDL_HasAltiVec(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns SDL_TRUE if the CPU has AltiVec features.\par
}}}
{\xe \v SDL_HasMMX\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_HasMMX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_HasMMX ()}
}\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has MMX features. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_cpuinfo.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_HasMMX(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns SDL_TRUE if the CPU has MMX features.\par
}}}
{\xe \v SDL_HasMMXExt\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_HasMMXExt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_HasMMXExt ()}
}\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has MMX Ext. features. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_cpuinfo.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_HasMMXExt(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns SDL_TRUE if the CPU has MMX Ext. features.\par
}}}
{\xe \v SDL_HasRDTSC\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_HasRDTSC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_HasRDTSC ()}
}\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has the RDTSC instruction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_cpuinfo.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_HasRDTSC(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns SDL_TRUE if the CPU has the RDTSC instruction.\par
}}}
{\xe \v SDL_HasSSE\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_HasSSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_HasSSE ()}
}\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has SSE features. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_cpuinfo.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_SDL_HasSSE(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns SDL_TRUE if the CPU has SSE features.\par
}}}
{\xe \v SDL_HasSSE2\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_HasSSE2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_HasSSE2 ()}
}\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function returns true if the CPU has SSE2 features. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_cpuinfo.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_SDL_HasSSE2void()\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns SDL_TRUE if the CPU has SSE2 features.\par
}}}
{\xe \v SDL_JoystickClose\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickClose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_JoystickClose (IntPtr {\i joystick})}
}\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Closes a previously opened joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close a joystick that was previously opened with {\b SDL_JoystickOpen}. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_JoystickClose(SDL_Joystick *joystick);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickOpened}\par
}}}
{\xe \v SDL_JoystickEventState\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickEventState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickEventState (int {\i state})}
}\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable/disable joystick event polling. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is used to enable or disable joystick event processing. With joystick event processing disabled you will have to update joystick states with SDL_JoystickUpdate and read the joystick information manually. state is either SDL_QUERY, SDL_ENABLE or SDL_IGNORE. \par
Note: Joystick event handling is preferred  \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickEventState(int state)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickGetButton}, {\b SDL_JoystickUpdate}, SDL_JoyAxisEvent, SDL_JoyBallEvent, SDL_JoyButtonEvent, SDL_JoyHatEvent\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If state is SDL_QUERY then the current state is returned, otherwise the new processing state is returned. \par
}}}
{\xe \v SDL_JoystickGetAxis\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickGetAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short SDL_JoystickGetAxis (IntPtr {\i joystick}, int {\i axis})}
}\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current state of an axis. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JoystickGetAxis returns the current state of the given axis on the given joystick. \par
On most modern joysticks the X axis is usually represented by axis 0 and the Y axis by axis 1. The value returned by SDL_JoystickGetAxis is a signed integer (-32768 to 32768) representing the current position of the axis, it maybe necessary to impose certain tolerances on these values to account for jitter. It is worth noting that some joysticks use axes 2 and 3 for extra buttons. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Sint16 SDL_JoystickGetAxis(SDL_Joystick *joystick, int axis);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
{\i axis} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a short representing the current position of the axis. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             Sint16 x_move, y_move;\par
                        SDL_Joystick *joy1;\par
                        .\par
                        .\par
                        x_move=SDL_JoystickGetAxis(joy1, 0);\par
                        y_move=SDL_JoystickGetAxis(joy1, 1);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickNumAxes}\par
}}}
{\xe \v SDL_JoystickGetBall\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickGetBall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickGetBall (IntPtr {\i joystick}, int {\i ball}, out int {\i dx}, out int {\i dy})}
}\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get relative trackball motion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the ball axis change. \par
Trackballs can only return relative motion since the last call to SDL_JoystickGetBall, these motion deltas a placed into dx and dy.  \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickGetBall(SDL_Joystick *joystick, int ball, int *dx, int *dy);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
{\i ball} \par
{\i dx} \par
{\i dy} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success or -1 on failure \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int delta_x, delta_y;\par
                        SDL_Joystick *joy;\par
                        .\par
                        .\par
                        .\par
                        SDL_JoystickUpdate();\par
                        if(SDL_JoystickGetBall(joy, 0, &amp;delta_x, &amp;delta_y)==-1)\par
                        printf("TrackBall Read Error!\\n");\par
                        printf("Trackball Delta- X:%d, Y:%d\\n", delta_x, delta_y);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickNumBalls}\par
}}}
{\xe \v SDL_JoystickGetButton\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickGetButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte SDL_JoystickGetButton (IntPtr {\i joystick}, int {\i button})}
}\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current state of a given button on a given joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JoystickGetButton returns the current state of the given button on the given joystick. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Uint8 SDL_JoystickGetButton(SDL_Joystick *joystick, int button);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
{\i button} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 1 if the button is pressed. Otherwise, 0. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickNumButtons}\par
}}}
{\xe \v SDL_JoystickGetHat\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickGetHat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte SDL_JoystickGetHat (IntPtr {\i joystick}, int {\i hat})}
}\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the current state of a joystick hat. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_JoystickGetHat returns the current state of the given hat on the given joystick. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Uint8 SDL_JoystickGetHat(SDL_Joystick *joystick, int hat)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
{\i hat} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The current state is returned as a byte which is defined as an OR'd combination of one or more of the following: {
\par
\pard\plain \s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_HAT_CENTERED \par
                SDL_HAT_UP \par
                SDL_HAT_RIGHT \par
                SDL_HAT_DOWN \par
                SDL_HAT_LEFT \par
                SDL_HAT_RIGHTUP \par
                SDL_HAT_RIGHTDOWN \par
                SDL_HAT_LEFTUP \par
            SDL_HAT_LEFTDOWN \par
}
 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickNumHats}\par
}}}
{\xe \v SDL_JoystickIndex\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickIndex (IntPtr {\i joystick})}
}\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the index of an SDL_Joystick. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the index of a given SDL_Joystick structure. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickIndex(SDL_Joystick *joystick)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Index number of the joystick. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}\par
}}}
{\xe \v SDL_JoystickNumAxes\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickNumAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickNumAxes (IntPtr {\i joystick})}
}\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick axes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the number of axes available from a previously opened SDL_Joystick. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickNumAxes(SDL_Joystick *joystick)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of axes. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickGetAxis}\par
}}}
{\xe \v SDL_JoystickNumBalls\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickNumBalls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickNumBalls (IntPtr {\i joystick})}
}\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick trackballs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the number of trackballs available from a previously opened SDL_Joystick. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickNumBalls(SDL_Joystick *joystick)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of trackballs. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickGetBall}\par
}}}
{\xe \v SDL_JoystickNumButtons\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickNumButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickNumButtons (IntPtr {\i joystick})}
}\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick buttons. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the number of buttons available from a previously opened SDL_Joystick. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickNumButtons(SDL_Joystick *joystick)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of buttons. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickGetButton}\par
}}}
{\xe \v SDL_JoystickNumHats\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickNumHats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickNumHats (IntPtr {\i joystick})}
}\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the number of joystick hats. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickNumHats(SDL_Joystick *joystick);\par
}
\par
Return the number of hats available from a previously opened SDL_Joystick. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i joystick} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of hats. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickGetHat}\par
}}}
{\xe \v SDL_JoystickOpen\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickOpen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_JoystickOpen (int {\i device_index})}
}\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open a joystick for use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens a joystick for use within SDL. The index refers to the N'th joystick in the system. A joystick must be opened before it game be used. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid }
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i device_index} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a IntPtr to a SDL_Joystick structure on success. NULL on failure. \par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_Joystick *joy;\par
            Check for joystick\par
                        if(SDL_NumJoysticks()>0)\par
                \{\par
                        // Open joystick\par
                        joy=SDL_JoystickOpen(0);\par
\par
                        if(joy)\par
                \{\par
                        printf("Opened Joystick 0\\n");\par
                        printf("Name: %s\\n", SDL_JoystickName(0));\par
                        printf("Number of Axes: %d\\n", SDL_JoystickNumAxes(joy));\par
                        printf("Number of Buttons: %d\\n", SDL_JoystickNumButtons(joy));\par
                        printf("Number of Balls: %d\\n", SDL_JoystickNumBalls(joy));\par
                \}\par
                else\par
                printf("Couldn't open Joystick 0\\n");\par
\par
                // Close if opened\par
                if(SDL_JoystickOpened(0))\par
                SDL_JoystickClose(joy);\par
           \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickClose}\par
}}}
{\xe \v SDL_JoystickOpened\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickOpened}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_JoystickOpened (int {\i device_index})}
}\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if a joystick has been opened. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether a joystick has already been opened within the application. index refers to the N'th joystick on the system. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_JoystickOpened(int index)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i device_index} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 1 if the joystick has been opened, or 0 if it has not. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickClose}\par
}}}
{\xe \v SDL_JoystickUpdate\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_JoystickUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_JoystickUpdate ()}
}\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the state of all joysticks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the state(position, buttons, etc.) of all open joysticks. If joystick events have been enabled with {\b SDL_JoystickEventState} then this is called automatically in the event loop. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_JoystickUpdate(void)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_JoystickOpen}, {\b SDL_JoystickGetButton}\par
}}}
{\xe \v SDL_KillThread\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_KillThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_KillThread (IntPtr {\i thread})}
}\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forcefully kill a thread without worrying about its state. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_thread.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_KillThread(SDL_Thread *thread)\par
}
  \par
}}
{\xe \v SDL_LoadBMP_RW\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LoadBMP_RW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_LoadBMP_RW (IntPtr {\i src}, int {\i freesrc})}
}\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a surface from a seekable SDL data source (memory or file.). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If 'freesrc' is non-zero, the source will be closed after being read. Returns the new surface, or NULL if there was an error. The new surface should be freed with {\b SDL_FreeSurface()}. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Surface * SDLCALL SDL_LoadBMP_RW(SDL_RWops *src, int freesrc)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} IntPtr to {\b SDL_Surface}\par
{\i freesrc} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_LoadFunction\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LoadFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_LoadFunction (IntPtr {\i handle}, string {\i name})}
}\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given an object handle, this function looks up the address of the named function in the shared object and returns it. This address is no longer valid after calling {\b SDL_UnloadObject()}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_loadso.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void * SDLCALL SDL_LoadFunction(void *handle, const char *name)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i handle} Object handle\par
{\i name} Name of function in the shared object.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LoadObject}, {\b SDL_UnloadObject}\par
}}}
{\xe \v SDL_LoadObject\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LoadObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_LoadObject (string {\i sofile})}
}\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function dynamically loads a shared object and returns a pointer to the object handle (or NULL if there was an error). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_loadso.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void * SDLCALL SDL_LoadObject(const char *sofile)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i sofile} System dependent name of the object file.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LoadFunction}, {\b SDL_UnloadObject}\par
}}}
{\xe \v SDL_LoadWAV_RW\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LoadWAV_RW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_LoadWAV_RW (IntPtr {\i src}, int {\i freesrc}, out IntPtr {\i spec}, out IntPtr {\i audio_buf}, out uint {\i audio_len})}
}\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function loads a WAVE from the data source, automatically freeing that source if 'freesrc' is non-zero. For example, to load a WAVE file, you could do: SDL_LoadWAV_RW(SDL_RWFromFile("sample.wav", "rb"), 1, ...);. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If this function succeeds, it returns the given SDL_AudioSpec, filled with the audio data format of the wave data, and sets 'audio_buf' to a malloc()'d buffer containing the audio data, and sets 'audio_len' to the length of that audio buffer, in bytes. You need to free the audio buffer with {\b SDL_FreeWAV()} when you are done with it. \par
This function returns NULL and sets the SDL error message if the wave file cannot be opened, uses an unknown data format, or is corrupt. Currently raw and MS-ADPCM WAVE files are supported. \par
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_AudioSpec * SDL_LoadWAV_RW(SDL_RWops *src, int freesrc, SDL_AudioSpec *spec, Uint8 **audio_buf, Uint32 *audio_len)\par
}
  {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i audio_buf} \par
{\i audio_len} \par
{\i freesrc} \par
{\i spec} \par
{\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_LoadWAV_RW\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LoadWAV_RW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_LoadWAV_RW (IntPtr {\i src}, int {\i freesrc}, out IntPtr {\i spec}, out IntPtr {\i audio_buf}, out int {\i audio_len})}
}\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function loads a WAVE from the data source, automatically freeing that source if 'freesrc' is non-zero. For example, to load a WAVE file, you could do: SDL_LoadWAV_RW(SDL_RWFromFile("sample.wav", "rb"), 1, ...);. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If this function succeeds, it returns the given SDL_AudioSpec, filled with the audio data format of the wave data, and sets 'audio_buf' to a malloc()'d buffer containing the audio data, and sets 'audio_len' to the length of that audio buffer, in bytes. You need to free the audio buffer with {\b SDL_FreeWAV()} when you are done with it. \par
This function returns NULL and sets the SDL error message if the wave file cannot be opened, uses an unknown data format, or is corrupt. Currently raw and MS-ADPCM WAVE files are supported. \par
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_AudioSpec * SDL_LoadWAV_RW(SDL_RWops *src, int freesrc, SDL_AudioSpec *spec, Uint8 **audio_buf, Uint32 *audio_len)\par
}
  {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i audio_buf} \par
{\i audio_len} \par
{\i freesrc} \par
{\i spec} \par
{\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_LockAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LockAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_LockAudio ()}
}\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock out the callback function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The lock manipulated by these functions protects the callback function. During a LockAudio period, you can be guaranteed that the callback function is not running. Do not call these from the callback function or you will cause deadlock. \par
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_LockAudio(void);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_OpenAudio}\par
}}}
{\xe \v SDL_LockSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LockSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
.</code><p> Binds to C function call in SDL_video.or if the {\b surface} couldn t be locked.</returns><seealsocref="SDL_UnlockSurface"> SDL_UnlockSurface</seealso>* static int SDL_LockSurface (IntPtr {\i surface})}
}\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_LockSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LockSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_LockSurface ({\b surface})}
}\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock a surface for directly access. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_LockSurface sets up a surface for directly accessing the pixels. Between calls to SDL_LockSurface and SDL_UnlockSurface, you can write to and read from {\i surface.pixels} , using the pixel format stored in {\i surface.format} . Once you are done accessing the surface, you should use SDL_UnlockSurface to release it. \par
Not all surfaces require locking. If SDL_MUSTLOCK(surface) evaluates to 0, then you can read and write to the surface at any time, and the pixel format of the surface will not change.  \par
No operating system or library calls should be made between lock/unlock pairs, as critical system locks may be held during this time.  \par
It should be noted, that since SDL 1.1.8 surface locks are recursive. This means that you can lock a surface multiple times, but each lock must have a match unlock.  code> {\b SDL_LockSurface( surface )}; /* Surface is locked \par
}}
{\xe \v SDL_LockYUVOverlay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_LockYUVOverlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_LockYUVOverlay (IntPtr {\i overlay})}
}\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock an overlay. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Much the same as {\b SDL_LockSurface}, SDL_LockYUVOverlay locks the overlay for direct access to pixel data. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_LockYUVOverlay(SDL_Overlay *overlay)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i overlay} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success, or -1 on an error\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_UnlockYUVOverlay}, {\b SDL_CreateYUVOverlay(int, int, int, IntPtr)}, {\b SDL_Overlay}\par
}}}
{\xe \v SDL_MapRGB\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_MapRGB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_MapRGB (IntPtr {\i format}, byte {\i r}, byte {\i g}, byte {\i b})}
}\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map a RGB color value to a pixel format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maps the RGB color value to the specified pixel format and returns the pixel value as a 32-bit int. \par
If the format has a palette (8-bit) the index of the closest matching color in the palette will be returned. \par
If the specified pixel format has an alpha component it will be returned as all 1 bits (fully opaque). \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_MapRGB (SDL_PixelFormat *format, Uint8 r, Uint8 g, Uint8 b)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i format} IntPtr to {\b SDL_PixelFormat}\par
{\i r} \par
{\i g} \par
{\i b} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pixel value best approximating the given RGB color value for a given pixel format. If the pixel format bpp (color depth) is less than 32-bpp then the unused upper bits of the return value can safely be ignored (e.g., with a 16-bpp format the return value can be assigned to a Uint16, and similarly a Uint8 for an 8-bpp format).\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGB(int, IntPtr, out byte, out byte, out byte)}\par
}SDL_GetRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGBA}\par
}SDL_GetRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGBA}\par
}SDL_MapRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}\par
}{\b SDL_PixelFormat}\par
}}
{\xe \v SDL_MapRGBA\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_MapRGBA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_MapRGBA (IntPtr {\i format}, byte {\i r}, byte {\i g}, byte {\i b}, byte {\i a})}
}\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map a RGBA color value to a pixel format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maps the RGBA color value to the specified pixel format and returns the pixel value as a 32-bit int. \par
If the format has a palette (8-bit) the index of the closest matching color in the palette will be returned. \par
If the specified pixel format has no alpha component the alpha value will be ignored (as it will be in formats with a palette). \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_MapRGBA (SDL_PixelFormat *format, Uint8 r, Uint8 g, Uint8 b, Uint8 a)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i format} \par
{\i r} \par
{\i g} \par
{\i b} \par
{\i a} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A pixel value best approximating the given RGBA color value for a given pixel format. If the pixel format bpp (color depth) is less than 32-bpp then the unused upper bits of the return value can safely be ignored (e.g., with a 16-bpp format the return value can be assigned to a Uint16, and similarly a Uint8 for an 8-bpp format).\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGB(int, IntPtr, out byte, out byte, out byte)}\par
}SDL_GetRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGBA}\par
}SDL_GetRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}\par
}SDL_MapRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PixelFormat}\par
}{\b SDL_PixelFormat}\par
}}
{\xe \v SDL_MixAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_MixAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_MixAudio (IntPtr {\i dst}, IntPtr {\i src}, int {\i len}, int {\i volume})}
}\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mix audio data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function takes two audio buffers of len bytes each of the playing audio format and mixes them, performing addition, volume adjustment, and overflow clipping. The volume ranges from 0 to SDL_MIX_MAXVOLUME and should be set to the maximum value for full audio volume. Note this does not change hardware volume. This is provided for convenience -- you can mix your own audio data. \par
Note: Do not use this function for mixing together more than two streams of sample data. The output from repeated application of this function may be distorted by clipping, because there is no accumulator with greater range than the input (not to mention this being an inefficient way of doing it). Use mixing functions from SDL_mixer, OpenAL, or write your own mixer instead. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_MixAudio(Uint8 *dst, Uint8 *src, Uint32 len, int volume)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i src} \par
{\i len} \par
{\i volume} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_OpenAudio}\par
}}}
{\xe \v SDL_MixAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_MixAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_MixAudio (IntPtr {\i dst}, IntPtr {\i src}, uint {\i len}, int {\i volume})}
}\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mix audio data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function takes two audio buffers of len bytes each of the playing audio format and mixes them, performing addition, volume adjustment, and overflow clipping. The volume ranges from 0 to SDL_MIX_MAXVOLUME and should be set to the maximum value for full audio volume. Note this does not change hardware volume. This is provided for convenience -- you can mix your own audio data. \par
Note: Do not use this function for mixing together more than two streams of sample data. The output from repeated application of this function may be distorted by clipping, because there is no accumulator with greater range than the input (not to mention this being an inefficient way of doing it). Use mixing functions from SDL_mixer, OpenAL, or write your own mixer instead. \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_MixAudio(Uint8 *dst, Uint8 *src, Uint32 len, int volume)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i src} \par
{\i len} \par
{\i volume} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_OpenAudio}\par
}}}
{\xe \v SDL_mutexP\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_mutexP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_mutexP (IntPtr {\i mutex})}
}\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock the mutex (Returns 0, or -1 on error). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Lock the mutex (Returns 0, or -1 on error) \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_mutexP(SDL_mutex *mutex)\par
}
  \par
}}
{\xe \v SDL_mutexV\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_mutexV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_mutexV (IntPtr {\i mutex})}
}\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlock the mutex (Returns 0, or -1 on error). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Unlock the mutex (Returns 0, or -1 on error) \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_mutexV(SDL_mutex *mutex)\par
}
  \par
}}
{\xe \v SDL_NewTimerCallback\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_NewTimerCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int SDL_NewTimerCallback (int {\i interval})}
}\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prototype for the new timer callback. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i interval} The current timer interval. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The next timer interval. \par
}The callback function is passed the current timer interval and returns the next timer interval. If the returned value is the same as the one passed in, the periodic alarm continues, otherwise a new alarm is scheduled. If the callback returns 0, the periodic alarm is cancelled. \par
Binds to C callback in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid typedef Uint32 (SDLCALL *SDL_NewTimerCallback)(Uint32 interval, void *param)\par
}
  \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_RemoveTimer}\par
}}}
{\xe \v SDL_NumJoysticks\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_NumJoysticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_NumJoysticks ()}
}\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Count the number of joysticks attached to the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Counts the number of joysticks attached to the system. \par
Binds to C-function in SDL_joystick.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_NumJoysticks(void)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the number of attached joysticks \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_JoystickName, {\b SDL_JoystickOpen}\par
}}}
{\xe \v SDL_OpenAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_OpenAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_OpenAudio (IntPtr {\i desired}, IntPtr {\i obtained})}
}\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens the audio device with the desired parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function opens the audio device with the desired parameters, and returns 0 if successful, placing the actual hardware parameters in the structure pointed to by obtained. If obtained is NULL, the audio data passed to the callback function will be guaranteed to be in the requested format, and will be automatically converted to the hardware audio format if necessary. This function returns -1 if it failed to open the audio device, or couldn't set up the audio thread. \par
To open the audio device a desired SDL_AudioSpec must be created. {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_AudioSpec *desired;\par
            .\par
            .\par
            desired = malloc(sizeof(SDL_AudioSpec)); \par
}
 \par
You must then fill this structure with your desired audio specifications. \par
desired->freq The desired audio frequency in samples-per-second. \par
desired->format The desired audio format (see SDL_AudioSpec) \par
desired->samples The desired size of the audio buffer in samples. This number should be a power of two, and may be adjusted by the audio driver to a value more suitable for the hardware. Good values seem to range between 512 and 8192 inclusive, depending on the application and CPU speed. Smaller values yield faster response time, but can lead to underflow if the application is doing heavy processing and cannot fill the audio buffer in time. A stereo sample consists of both right and left channels in LR ordering. Note that the number of samples is directly related to time by the following formula: ms = (samples*1000)/freq \par
desired->callback This should be set to a function that will be called when the audio device is ready for more data. It is passed a pointer to the audio buffer, and the length in bytes of the audio buffer. This function usually runs in a separate thread, and so you should protect data structures that it accesses by calling {\b SDL_LockAudio} and {\b SDL_UnlockAudio} in your code. The callback prototype is: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void callback(void *userdata, Uint8 *stream, int len);\par
}
 \par
userdata is the pointer stored in userdata field of the SDL_AudioSpec. stream is a pointer to the audio buffer you want to fill with information and len is the length of the audio buffer in bytes. \par
desired->userdata p> This pointer is passed as the first parameter to the callback function. p> SDL_OpenAudio reads these fields from the desired SDL_AudioSpec structure pass to the function and attempts to find an audio configuration matching your desired. As mentioned above, if the obtained parameter is NULL then SDL with convert from your desired audio settings to the hardware settings as it plays. p>If obtained is NULL then the desired SDL_AudioSpec is your working specification, otherwise the obtained SDL_AudioSpec becomes the working specification and the desirec specification can be deleted. The data in the working specification is used when building SDL_AudioCVT's for converting loaded data to the hardware format. p>SDL_OpenAudio calculates the size and silence fields for both the desired and obtained specifications. The size field stores the total size of the audio buffer in bytes, while the silence stores the value used to represent silence in the audio buffer.  \par
The audio device starts out playing silence when it's opened, and should be enabled for playing by calling {\b SDL_PauseAudio}(0) when you are ready for your audio callback function to be called. Since the audio driver may modify the requested size of the audio buffer, you should allocate any local mixing buffers after you open the audio device. \par
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpec *obtained);\par
}
\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             /* Prototype of our callback function */\par
                        void my_audio_callback(void *userdata, Uint8 *stream, int len);\par
\par
                        /* Open the audio device */\par
                        SDL_AudioSpec *desired, *obtained;\par
                        SDL_AudioSpec *hardware_spec;\par
\par
                        /* Allocate a desired SDL_AudioSpec */\par
                        desired = malloc(sizeof(SDL_AudioSpec));\par
\par
                        /* Allocate space for the obtained SDL_AudioSpec */\par
                        obtained = malloc(sizeof(SDL_AudioSpec));\par
\par
                        /* 22050Hz - FM Radio quality */\par
                        desired-&gt;freq=22050;\par
\par
                        /* 16-bit signed audio */\par
                        desired-&gt;format=AUDIO_S16LSB;\par
\par
                        /* Mono */\par
                        desired-&gt;channels=0;\par
\par
                /* Large audio buffer reduces risk of dropouts but \par
                increases response time */\par
                        desired-&gt;samples=8192;\par
\par
                        /* Our callback function */\par
                        desired-&gt;callback=my_audio_callback;\par
\par
                        desired-&gt;userdata=NULL;\par
\par
                        /* Open the audio device */\par
                        if ( SDL_OpenAudio(desired, obtained) &lt; 0 )\par
                \{\par
                        fprintf(stderr, "Couldn't open audio: %s\\n", SDL_GetError());\par
                        exit(-1);\par
                \}\par
                /* desired spec is no longer needed */\par
                free(desired);\par
                hardware_spec=obtained;\par
                .\par
                .\par
                /* Prepare callback for playing */\par
                .\par
                .\par
                .\par
                /* Start playing */\par
                SDL_PauseAudio(0);\par
}
 /example> {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i desired} IntPtr to SDL_AudioSpec\par
{\i obtained} IntPtr to SDL_AudioSpec\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_AudioSpec, {\b SDL_LockAudio}, {\b SDL_UnlockAudio}, {\b SDL_PauseAudio}\par
}}}
{\xe \v SDL_PauseAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_PauseAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_PauseAudio (int {\i pause_on})}
}\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses and unpauses the audio callback processing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function pauses and unpauses the audio callback processing. It should be called with pause_on=0 after opening the audio device to start playing sound. This is so you can safely initialize data for your callback function after opening the audio device. Silence will be written to the audio device during the pause. \par
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_PauseAudio(int pause_on)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pause_on} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetAudioStatus}, {\b SDL_OpenAudio}\par
}}}
{\xe \v SDL_PeepEvents\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_PeepEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_PeepEvents ([In, Out] SDL_Event[] {\i events}, int {\i numevents}, int {\i action}, uint {\i mask})}
}\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the event queue for messages and optionally returns them. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the event queue for messages and optionally returns them. \par
If action is SDL_ADDEVENT, up to numevents events will be added to the back of the event queue. \par
If action is SDL_PEEKEVENT, up to numevents events at the front of the event queue, matching mask, will be returned and will not be removed from the queue. \par
If action is SDL_GETEVENT, up to numevents events at the front of the event queue, matching mask, will be returned and will be removed from the queue. \par
The mask parameter is an bitwise OR of SDL_EVENTMASK(event_type), for all event types you are interested in.  \par
This function is thread-safe. \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_PeepEvents(SDL_Event *events, int numevents, SDL_eventaction action, Uint32 mask);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i events} \par
{\i numevents} \par
{\i action} SDL_eventaction enum\par
{\i mask} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns the number of events actually stored, or -1 if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PollEvent}, SDL_Event, {\b SDL_PushEvent}\par
}}}
{\xe \v SDL_PeepEvents\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_PeepEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_PeepEvents ([In, Out] SDL_Event[] {\i events}, int {\i numevents}, int {\i action}, int {\i mask})}
}\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the event queue for messages and optionally returns them. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the event queue for messages and optionally returns them. \par
If action is SDL_ADDEVENT, up to numevents events will be added to the back of the event queue. \par
If action is SDL_PEEKEVENT, up to numevents events at the front of the event queue, matching mask, will be returned and will not be removed from the queue. \par
If action is SDL_GETEVENT, up to numevents events at the front of the event queue, matching mask, will be returned and will be removed from the queue. \par
The mask parameter is an bitwise OR of SDL_EVENTMASK(event_type), for all event types you are interested in.  \par
This function is thread-safe. \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_PeepEvents(SDL_Event *events, int numevents, SDL_eventaction action, Uint32 mask);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i events} \par
{\i numevents} \par
{\i action} SDL_eventaction enum\par
{\i mask} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns the number of events actually stored, or -1 if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PollEvent}, SDL_Event, {\b SDL_PushEvent}\par
}}}
{\xe \v SDL_PollEvent\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_PollEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_PollEvent (out SDL_Event {\i sdlEvent})}
}\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Polls for currently pending events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Polls for currently pending events, and returns 1 if there are any pending events, or 0 if there are none available. \par
If event is not NULL, the next event is removed from the queue and stored in that area. \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_PollEvent(SDL_Event *event);\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_Event event; /* Event structure */\par
\par
                        .\par
                        .\par
                        .\par
                        /* Check for events */\par
                        while(SDL_PollEvent(&amp;event))\par
                \{  /* Loop until there are no events left on the queue */\par
                        switch(event.type)\par
                                                 \{  /* Process the appropiate event type */\par
                        case SDL_KEYDOWN:  /* Handle a KEYDOWN event */         \par
                        printf("Oh! Key press\\n");\par
                        break;\par
                        case SDL_MOUSEMOTION:\par
                        .\par
                        .\par
                        .\par
                        default: /* Report an unhandled event */\par
                        printf("I don't know what this event is!\\n");\par
                \}\par
           \}\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i sdlEvent} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 1 if there are any pending events, or 0 if there are none available\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_WaitEvent}, SDL_Event, SDL_PeepEvents(SDL_Event[], int, int, int)\par
}}}
{\xe \v SDL_PumpEvents\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_PumpEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_PumpEvents ()}
}\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pumps the event loop, gathering events from the input devices. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pumps the event loop, gathering events from the input devices. \par
SDL_PumpEvents gathers all the pending input information from devices and places it on the event queue. Without calls to SDL_PumpEvents no events would ever be placed on the queue. Often calls the need for SDL_PumpEvents is hidden from the user since {\b SDL_PollEvent} and {\b SDL_WaitEvent} implicitly call SDL_PumpEvents. However, if you are not polling or waiting for events (e.g. you are filtering them), then you must call SDL_PumpEvents to force an event queue update.  \par
Note: You can only call this function in the thread that set the video mode. \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_PumpEvents(void);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_PollEvent}\par
}}}
{\xe \v SDL_PushEvent\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_PushEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_PushEvent (out SDL_Event {\i evt})}
}\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pushes an event onto the event queue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The event queue can actually be used as a two way communication channel. Not only can events be read from the queue, but the user can also push their own events onto it. event is a pointer to the event structure you wish to push onto the queue. \par
Note: Pushing device input events onto the queue doesn't modify the state of the device within SDL. \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_PushEvent(SDL_Event *event)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i evt} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on success or -1 if the event couldn't be pushed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Event, {\b SDL_PollEvent}, SDL_PeepEvents(SDL_Event[], int, int, int)\par
}}}
{\xe \v SDL_putenv\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_putenv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_putenv (string {\i variable})}
}\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puts a variable of the form "name=value" into the environment. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i variable} The "name=value" pair to write to the environment. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns -1 on an error or 0 on success. \par
}Not all environments have a working putenv(). {\b SDL_putenv()} is not available on Windows. \par
Binds to C-function call in SDL_getenv.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_putenv(const char *variable)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_getenv\par
}}}
{\xe \v SDL_Quit\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_Quit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_Quit ()}
}\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down SDL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_Quit}  shuts down all SDL subsystems and frees the resources allocated to them. This should always be called before you exit. \par
Binds to C-function call in SDL.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_Quit(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Init(int), {\b SDL_QuitSubSystem(int)}\par
}}}
{\xe \v SDL_QuitSubSystem\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_QuitSubSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_QuitSubSystem (uint {\i flags})}
}\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down specified subsystems. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i flags} Specifies what part(s) of SDL to shut down: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Flag}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_TIMER}  \cell }{Shuts down the timer subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_AUDIO}  \cell }{Shuts down the audio subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_VIDEO}  \cell }{Shuts down the video subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_CDROM}  \cell }{Shuts down the CD-ROM subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_JOYSTICK}  \cell }{Shuts down the joystick subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVERYTHING}  \cell }{Shuts down all subsystems.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_NOPARACHUTE}  \cell }{Prevents SDL from catching fatal signals.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVENTTHREAD}  \cell }{Not supported on all OS's.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
\par
}
{\b SDL_QuitSubSystem}  allows you to shut down a subsystem that has been previously initialized by SDL_Init(int) or SDL_InitSubSystem(int). \par
Binds to C-function call in SDL.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_QuitSubSystem(Uint32 flags)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Init(int), SDL_InitSubSystem(int), {\b SDL_Quit}\par
}}}
{\xe \v SDL_QuitSubSystem\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_QuitSubSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_QuitSubSystem (int {\i flags})}
}\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shuts down specified subsystems. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i flags} Specifies what part(s) of SDL to shut down: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Flag}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_TIMER}  \cell }{Shuts down the timer subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_AUDIO}  \cell }{Shuts down the audio subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_VIDEO}  \cell }{Shuts down the video subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_CDROM}  \cell }{Shuts down the CD-ROM subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_JOYSTICK}  \cell }{Shuts down the joystick subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVERYTHING}  \cell }{Shuts down all subsystems.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_NOPARACHUTE}  \cell }{Prevents SDL from catching fatal signals.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVENTTHREAD}  \cell }{Not supported on all OS's.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
\par
}
{\b SDL_QuitSubSystem}  allows you to shut down a subsystem that has been previously initialized by SDL_Init(int) or SDL_InitSubSystem(int). \par
Binds to C-function call in SDL.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_QuitSubSystem(Uint32 flags)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Init(int), SDL_InitSubSystem(int), {\b SDL_Quit}\par
}}}
{\xe \v SDL_ReadBE16\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ReadBE16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short SDL_ReadBE16 (IntPtr {\i src})}
}\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC Uint16 SDLCALL SDL_ReadBE16(SDL_RWops *src)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_ReadBE32\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ReadBE32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_ReadBE32 (IntPtr {\i src})}
}\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC Uint32 SDLCALL SDL_ReadBE32(SDL_RWops *src)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_ReadBE64\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ReadBE64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static long SDL_ReadBE64 (IntPtr {\i src})}
}\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC Uint64 SDLCALL SDL_ReadBE64(SDL_RWops *src)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_ReadLE16\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ReadLE16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short SDL_ReadLE16 (IntPtr {\i src})}
}\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC Uint16 SDLCALL SDL_ReadLE16(SDL_RWops *src)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_ReadLE32\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ReadLE32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_ReadLE32 (IntPtr {\i src})}
}\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC Uint32 SDLCALL SDL_ReadLE32(SDL_RWops *src)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_ReadLE64\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ReadLE64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static long SDL_ReadLE64 (IntPtr {\i src})}
}\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read an item of the specified endianness and return in native format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC Uint64 SDLCALL SDL_ReadLE64(SDL_RWops *src)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i src} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_RemoveTimer\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_RemoveTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_RemoveTimer ({\b SDL_TimerID} {\i t})}
}\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove a timer which was added with {\b SDL_AddTimer(int, SDL_NewTimerCallback)}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i t} The timer ID to remove. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A boolean value indicating success. SDL_TRUE or SDL_FALSE. \par
}Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_bool SDLCALL SDL_RemoveTimer(SDL_TimerID t)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AddTimer(int, SDL_NewTimerCallback)}\par
}}}
{\xe \v SDL_RWFromConstMem\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_RWFromConstMem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_RWFromConstMem (IntPtr {\i mem}, int {\i size})}
}\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares a constant memory area for use with RWops. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SDL_RWFromConstMem} sets up a RWops struct based on a memory area of a certain size. It assumes the memory area is not writable. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mem} \par
{\i size} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns a pointer to a new RWops struct, or NULL if it fails.\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             char bitmap[] = \{\par
                        66, 77, 86, 2, 0, 0, 0, 0 ...\par
                \}\par
                 SDL_RWops *rw;\par
                 SDL_Surface *img;\par
\par
                 rw = SDL_RWFromConstMem(bitmap, sizeof(bitmap));\par
                 img = SDL_LoadBMP_RW(rw, 1); // Automatically frees the RWops struct for us\par
\par
                 //Do something with img...\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_RWFromMem(IntPtr, int)}\par
}}}
{\xe \v SDL_RWFromFile\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_RWFromFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_RWFromFile (string {\i file}, string {\i mode})}
}\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create SDL_RWops structures from file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_rwops.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_RWops * SDLCALL SDL_RWFromFile(const char *file, const char *mode)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i file} \par
{\i mode} "rb"\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to SDL_RWops\par
}}}
{\xe \v SDL_RWFromFP\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_RWFromFP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_RWFromFP (IntPtr {\i fp}, int {\i autoclose})}
}\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_RWFromFP creates a new SDL_RWops structure from a file pointer, opened with stdio. If autoclose is nonzero, the file will be automatically closed when the RWops structure is closed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is not available under Win32, since files opened in an application on that platform cannot be used by a dynamically linked library. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i fp} \par
{\i autoclose} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns pointer to a new RWops structure, or NULL if it fails.\par
}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             FILE *fp;\par
            SDL_RWops *rw;\par
\par
            fp = fopen("myfile.dat", "rb");\par
            rw = SDL_RWFromFP(fp, 1);\par
\par
            // Do things with rw...\par
            SDL_RWclose(rw); // Automatically does an fclose(fp)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_RWFromFile}\par
}}}
{\xe \v SDL_RWFromMem\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_RWFromMem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_RWFromMem (IntPtr {\i mem}, int {\i size})}
}\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create SDL_RWops structures from memory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_rwops.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             SDL_RWops * SDLCALL SDL_RWFromMem(void *mem, int size)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mem} \par
{\i size} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid IntPtr to SDL_RWops\par
}}}
{\xe \v SDL_SaveBMP_RW\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SaveBMP_RW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SaveBMP_RW (IntPtr {\i surface}, IntPtr {\i dst}, int {\i freedst})}
}\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save a surface to a seekable SDL data source (memory or file.). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If 'freedst' is non-zero, the source will be closed after being written. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDLCALL SDL_SaveBMP_RW (SDL_Surface *surface, SDL_RWops *dst, int freedst)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
{\i dst} \par
{\i freedst} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 if successful or -1 if there was an error.\par
}}}
{\xe \v SDL_SemPost\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SemPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SemPost (IntPtr {\i sem})}
}\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atomically increases the semaphore's count (not blocking), returns 0, or -1 on error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Atomically increases the semaphore's count (not blocking), returns 0, or -1 on error. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SemPost(SDL_sem *sem)\par
}
  \par
}}
{\xe \v SDL_SemtryWait\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SemtryWait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SemtryWait (IntPtr {\i sem})}
}\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-blocking variant of {\b SDL_SemWait()}, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait would block, and -1 on error. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Non-blocking variant of {\b SDL_SemWait()}, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait would block, and -1 on error. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SemTryWait(SDL_sem *sem)\par
}
  \par
}}
{\xe \v SDL_SemValue\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SemValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SemValue (IntPtr {\i sem})}
}\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current count of the semaphore. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns the current count of the semaphore \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_SemValue(SDL_sem *sem)\par
}
  \par
}}
{\xe \v SDL_SemWait\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SemWait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SemWait (IntPtr {\i sem})}
}\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function suspends the calling thread until the semaphore pointed to by sem has a positive count. It then atomically decreases the semaphore count. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SemWait(SDL_sem *sem)\par
}
  \par
}}
{\xe \v SDL_SemWaitTimeout\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SemWaitTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SemWaitTimeout (IntPtr {\i sem}, uint {\i ms})}
}\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variant of {\b SDL_SemWait()} with a timeout in milliseconds, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait does not succeed in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Variant of {\b SDL_SemWait()} with a timeout in milliseconds, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait does not succeed in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SemWaitTimeout(SDL_sem *sem, Uint32 ms)\par
}
  \par
}}
{\xe \v SDL_SemWaitTimeout\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SemWaitTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SemWaitTimeout (IntPtr {\i sem}, int {\i ms})}
}\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variant of {\b SDL_SemWait()} with a timeout in milliseconds, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait does not succeed in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Variant of {\b SDL_SemWait()} with a timeout in milliseconds, returns 0 if the wait succeeds, SDL_MUTEX_TIMEDOUT if the wait does not succeed in the allotted time, and -1 on error. On some platforms this function is implemented by looping with a delay of 1 ms, and so should be avoided if possible. \par
}Binds to C-function call in SDL_mutex.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SemWaitTimeout(SDL_sem *sem, Uint32 ms)\par
}
  \par
}}
{\xe \v SDL_SetAlpha\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetAlpha (IntPtr {\i surface}, int {\i flag}, byte {\i alpha})}
}\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjust the alpha properties of a surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_SetAlpha is used for setting the per-surface alpha value and/or enabling and disabling alpha blending. \par
The surface parameter specifies which surface whose alpha attributes you wish to adjust. flags is used to specify whether alpha blending should be used (SDL_SRCALPHA) and whether the surface should use RLE acceleration for blitting (SDL_RLEACCEL). flags can be an OR'd combination of these two options, one of these options or 0. If SDL_SRCALPHA is not passed as a flag then all alpha information is ignored when blitting the surface. The alpha parameter is the per-surface alpha value; a surface need not have an alpha channel to use per-surface alpha and blitting can still be accelerated with SDL_RLEACCEL. \par
Note: The per-surface alpha value of 128 is considered a special case and is optimised, so it's much faster than other per-surface values. Alpha effects surface blitting in the following ways: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGB with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination, using the alpha channel. SDL_SRCCOLORKEY and the per-surface alpha are ignored.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGB without SDL_SRCALPHA}  \cell }{The RGB data is copied from the source. The source alpha channel and the per-surface alpha value are ignored.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGBA with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination using the per-surface alpha value. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied. The alpha channel of the copied pixels is set to opaque.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGBA without SDL_SRCALPHA}  \cell }{The RGB data is copied from the source and the alpha value of the copied pixels is set to opaque. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGBA with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination using the source alpha channel. The alpha channel in the destination surface is left untouched. SDL_SRCCOLORKEY is ignored.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGBA without SDL_SRCALPHA}  \cell }{The RGBA data is copied to the destination surface. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGB with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination using the per-surface alpha value. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGB without SDL_SRCALPHA}  \cell }{The RGB data is copied from the source. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
Note: Note that RGBA->RGBA blits (with SDL_SRCALPHA set) keep the alpha of the destination surface. This means that you cannot compose two arbitrary RGBA surfaces this way and get the result you would expect from "overlaying" them; the destination alpha will work as a mask. \par
Also note that per-pixel and per-surface alpha cannot be combined; the per-pixel alpha is always used if available. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_SetAlpha(SDL_Surface *surface, Uint32 flag, Uint8 alpha);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
{\i flag} \par
{\i alpha} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns 0, or -1 if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGBA}\par
}SDL_MapRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGBA}\par
}SDL_GetRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_DisplayFormatAlpha}\par
}SDL_DisplayFormatAlpha\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_BlitSurface}\par
}SDL_BlitSurface\par
}}
{\xe \v SDL_SetAlpha\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetAlpha (IntPtr {\i surface}, uint {\i flag}, byte {\i alpha})}
}\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjust the alpha properties of a surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_SetAlpha is used for setting the per-surface alpha value and/or enabling and disabling alpha blending. \par
The surface parameter specifies which surface whose alpha attributes you wish to adjust. flags is used to specify whether alpha blending should be used (SDL_SRCALPHA) and whether the surface should use RLE acceleration for blitting (SDL_RLEACCEL). flags can be an OR'd combination of these two options, one of these options or 0. If SDL_SRCALPHA is not passed as a flag then all alpha information is ignored when blitting the surface. The alpha parameter is the per-surface alpha value; a surface need not have an alpha channel to use per-surface alpha and blitting can still be accelerated with SDL_RLEACCEL. \par
Note: The per-surface alpha value of 128 is considered a special case and is optimised, so it's much faster than other per-surface values. Alpha effects surface blitting in the following ways: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGB with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination, using the alpha channel. SDL_SRCCOLORKEY and the per-surface alpha are ignored.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGB without SDL_SRCALPHA}  \cell }{The RGB data is copied from the source. The source alpha channel and the per-surface alpha value are ignored.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGBA with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination using the per-surface alpha value. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied. The alpha channel of the copied pixels is set to opaque.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGBA without SDL_SRCALPHA}  \cell }{The RGB data is copied from the source and the alpha value of the copied pixels is set to opaque. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGBA with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination using the source alpha channel. The alpha channel in the destination surface is left untouched. SDL_SRCCOLORKEY is ignored.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGBA->RGBA without SDL_SRCALPHA}  \cell }{The RGBA data is copied to the destination surface. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGB with SDL_SRCALPHA}  \cell }{The source is alpha-blended with the destination using the per-surface alpha value. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{RGB->RGB without SDL_SRCALPHA}  \cell }{The RGB data is copied from the source. If SDL_SRCCOLORKEY is set, only the pixels not matching the colorkey value are copied.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
Note: Note that RGBA->RGBA blits (with SDL_SRCALPHA set) keep the alpha of the destination surface. This means that you cannot compose two arbitrary RGBA surfaces this way and get the result you would expect from "overlaying" them; the destination alpha will work as a mask. \par
Also note that per-pixel and per-surface alpha cannot be combined; the per-pixel alpha is always used if available. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_SetAlpha(SDL_Surface *surface, Uint32 flag, Uint8 alpha);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
{\i flag} \par
{\i alpha} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns 0, or -1 if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGBA}\par
}SDL_MapRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetRGBA}\par
}SDL_GetRGBA\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_DisplayFormatAlpha}\par
}SDL_DisplayFormatAlpha\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_BlitSurface}\par
}SDL_BlitSurface\par
}}
{\xe \v SDL_SetClipRect\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetClipRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_SetClipRect (IntPtr {\i surface}, ref {\b SDL_Rect} {\i rect})}
}\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the clipping rectangle for a surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the clipping rectangle for a surface. When this surface is the destination of a blit, only the area within the clip rectangle will be drawn into. \par
The rectangle pointed to by rect will be clipped to the edges of the surface so that the clip rectangle for a surface can never fall outside the edges of the surface. \par
If rect is NULL the clipping rectangle will be set to the full size of the surface. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_SetClipRect(SDL_Surface *surface, SDL_Rect *rect)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} IntPtr to {\b SDL_Surface}\par
{\i rect} {\b SDL_Rect}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetClipRect}\par
}SDL_GetClipRect\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_BlitSurface}\par
}SDL_BlitSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
}}
{\xe \v SDL_SetColorKey\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetColorKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetColorKey (IntPtr {\i surface}, int {\i flag}, int {\i key})}
}\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the color key (transparent pixel) in a blittable surface and RLE acceleration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the color key (transparent pixel) in a blittable surface and enables or disables RLE blit acceleration. \par
RLE acceleration can substantially speed up blitting of images with large horizontal runs of transparent pixels (i.e., pixels that match the key value). The key must be of the same pixel format as the surface, {\b SDL_MapRGB} is often useful for obtaining an acceptable value. \par
If flag is SDL_SRCCOLORKEY then key is the transparent pixel value in the source image of a blit. \par
If flag is OR'd with SDL_RLEACCEL then the surface will be draw using RLE acceleration when drawn with {\b SDL_BlitSurface}. The surface will actually be encoded for RLE acceleration the first time {\b SDL_BlitSurface} or {\b SDL_DisplayFormat} is called on the surface. \par
If flag is 0, this function clears any current color key. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_SetColorKey(SDL_Surface *surface, Uint32 flag, Uint32 key);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
{\i flag} \par
{\i key} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns 0, or -1 if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_BlitSurface}\par
}SDL_BlitSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_DisplayFormat}\par
}SDL_DisplayFormat\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}\par
}SDL_MapRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetAlpha(IntPtr, int, byte)}\par
}SDL_SetAlpha\par
}}
{\xe \v SDL_SetColorKey\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetColorKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetColorKey (IntPtr {\i surface}, uint {\i flag}, uint {\i key})}
}\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the color key (transparent pixel) in a blittable surface and RLE acceleration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the color key (transparent pixel) in a blittable surface and enables or disables RLE blit acceleration. \par
RLE acceleration can substantially speed up blitting of images with large horizontal runs of transparent pixels (i.e., pixels that match the key value). The key must be of the same pixel format as the surface, {\b SDL_MapRGB} is often useful for obtaining an acceptable value. \par
If flag is SDL_SRCCOLORKEY then key is the transparent pixel value in the source image of a blit. \par
If flag is OR'd with SDL_RLEACCEL then the surface will be draw using RLE acceleration when drawn with {\b SDL_BlitSurface}. The surface will actually be encoded for RLE acceleration the first time {\b SDL_BlitSurface} or {\b SDL_DisplayFormat} is called on the surface. \par
If flag is 0, this function clears any current color key. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_SetColorKey(SDL_Surface *surface, Uint32 flag, Uint32 key);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
{\i flag} \par
{\i key} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function returns 0, or -1 if there was an error. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_BlitSurface}\par
}SDL_BlitSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_DisplayFormat}\par
}SDL_DisplayFormat\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_MapRGB}\par
}SDL_MapRGB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetAlpha(IntPtr, int, byte)}\par
}SDL_SetAlpha\par
}}
{\xe \v SDL_SetColors\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
....</example><paramname="surface"></param><paramname="firstcolor"></param><paramname="ncolors"></param><paramname="colors"></param><returns> If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to SDL_SetColors ()}
}\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_SetColors\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
....</example><paramname="surface"></param><paramname="firstcolor"></param><paramname="ncolors"></param><paramname="colors"></param><returns> If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to it will return.If not all the color entries were set exactly as it will and you should look at the {\b surface} palette to determine the actual color palette.</returns><seealsocref="SDL_Color"> SDL_Color</seealso><seealsocref="SDL_Surface"> SDL_Surface</seealso><seealsocref="SDL_SetPalette"> SDL_SetPalette</seealso><seealsocref="SDL_SetVideoMode(int,int,int,int)"> SDL_SetVideoMode</seealso>* static int SDL_SetColors (IntPtr {\i surface}, [In, Out] {\b SDL_Color}[] {\i colors}, int {\i firstcolor}, int {\i ncolors})}
}\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_SetColors\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_SetColors ({\b screen}, {\b colors}, 0, 256)}
}\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_SetCursor\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_SetCursor (ref {\b SDL_Cursor} {\i cursor})}
}\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the currently active cursor to the specified one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the currently active cursor to the specified one. If the cursor is currently visible, the change will be immediately represented on the display. \par
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void *SDL_SetCursor(SDL_Cursor *cursor);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cursor} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetCursor}, {\b SDL_CreateCursor}, {\b SDL_ShowCursor}\par
}}}
{\xe \v SDL_SetError\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_SetError (string {\i message})}
}\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an SDL error string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i message} The error message to set. \par
}
Binds to C-function call in SDL_error.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_SetError(const char *fmt, ...)\par
}
  \par
}}
{\xe \v SDL_SetEventFilter\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetEventFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_SetEventFilter (SDL_EventFilter {\i filter})}
}\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up a filter to process all events before they are posted to the event queue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function sets up a filter to process all events before they are posted to the event queue. This is a very powerful and flexible feature. The filter is prototyped as: \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid typedef int (*SDL_EventFilter)(const SDL_Event *event);\par
}
 \par
If the filter returns 1, then the event will be added to the internal queue. If it returns 0, then the event will be dropped from the queue. This allows selective filtering of dynamically.  \par
There is one caveat when dealing with the SDL_QUITEVENT event type. The event filter is only called when the window manager desires to close the application window. If the event filter returns 1, then the window will be closed, otherwise the window will remain open if possible. If the quit event is generated by an interrupt signal, it will bypass the internal queue and be delivered to the application at the next event poll. \par
Note: Events pushed onto the queue with {\b SDL_PushEvent} or SDL_PeepEvents(SDL_Event[], int, int, int) do not get passed through the event filter. \par
Note: Be Careful! The event filter function may run in a different thread so be careful what you do within it. \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_SetEventFilter(SDL_EventFilter filter);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i filter} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Event, {\b SDL_GetEventFilter}, {\b SDL_PushEvent}\par
}}}
{\xe \v SDL_SetGamma\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetGamma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetGamma (float {\i red}, float {\i green}, float {\i blue})}
}\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the gamma correction for each of the color channels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the "gamma function" for the display of each color component. Gamma controls the brightness/contrast of colors displayed on the screen. A gamma value of 1.0 is identity (i.e., no adjustment is made).  \par
This function adjusts the gamma based on the "gamma function" parameter, you can directly specify lookup tables for gamma adjustment with SDL_SetGammaRamp. \par
Not all display hardware is able to change gamma. \par
The gamma values range (approximately) between 0.1 and 10.0. \par
If this function isn't supported directly by the hardware, it will be emulated using gamma ramps, if available. If successful, this function returns 0, otherwise it returns -1. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SetGamma(float red, float green, float blue)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i blue} \par
{\i green} \par
{\i red} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If successful, this function returns 0, otherwise it returns -1. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_GetGammaRamp(short[], short[], short[])\par
}SDL_GetGammaRamp\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetGammaRamp}\par
}SDL_SetGammaRamp\par
}}
{\xe \v SDL_SetGammaRamp\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetGammaRamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetGammaRamp ([In, Out] short[] {\i red}, [In, Out] short[] {\i green}, [In, Out] short[] {\i blue})}
}\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the gamma translation table for the red, green, and blue channels of the video hardware. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Each table is an array of 256 16-bit quantities, representing a mapping between the input and output for that channel. The input is the index into the array, and the output is the 16-bit gamma value at that index, scaled to the output color precision. You may pass NULL for any of the channels to leave it unchanged.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the call succeeds, it will return 0. If the display driver or hardware does not support gamma translation, or otherwise fails, this function will return -1. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i blue} \par
{\i green} \par
{\i red} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetGamma}\par
}SDL_SetGamma\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_GetGammaRamp(short[], short[], short[])\par
}SDL_GetGammaRamp\par
}}
{\xe \v SDL_SetModState\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetModState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_SetModState (int {\i modstate})}
}\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the current key modifier state. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The inverse of SDL_GetModState, SDL_SetModState allows you to impose modifier key states on your application. \par
Simply pass your desired modifier states into modstate. This value my be a logical OR'd combination of SDLMod. \par
Binds to C-function in SDL_keyboard.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_SetModState(SDLMod modstate)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i modstate} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_GetModState}\par
}}}
{\xe \v SDL_SetPalette\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetPalette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_SetPalette ({\b screen}, SDL_LOGPAL| {\i SDL_PHYSPAL}, {\b colors}, 0, 256)}
}\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_SetPalette\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetPalette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
....</code></example><paramname="surface"></param><paramname="colors"></param><paramname="firstcolor"></param><paramname="flags"></param><paramname="ncolors"></param><returns> If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to it will return.If not all the color entries were set exactly as it will and you should look at the {\b surface} palette to determine the actual color palette.</returns> * static int SDL_SetPalette (IntPtr {\i surface}, int {\i flags}, [In, Out] {\b SDL_Color}[] {\i colors}, int {\i firstcolor}, int {\i ncolors})}
}\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_SetTimer\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetTimer (int {\i interval}, SDL_TimerCallback {\i callback})}
}\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a callback to run after the specified number of milliseconds has elapsed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i interval} The timer interval. \par
{\i callback} The callback to run. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The next timer interval. \par
}The callback function is passed the current timer interval and returns the next timer interval. If the returned value is the same as the one passed in, the periodic alarm continues, otherwise a new alarm is scheduled. \par
To cancel a currently running timer, call {\f2 Sdl.SDL_SetTimer(0, null);}  \par
The timer callback function may run in a different thread than your main constant, and so shouldn't call any functions from within itself. \par
The maximum resolution of this timer is 10 ms, which means that if you request a 16 ms timer, your callback will run approximately 20 ms later on an unloaded system. If you wanted to set a flag signaling a frame update at 30 frames per second (every 33 ms), you might set a timer for 30 ms. \par
If you use this function, you need to pass SDL_INIT_TIMER to SDL_Init(int). \par
This function is kept for compatibility but has been superseded by the new timer functions {\b SDL_AddTimer(int, SDL_NewTimerCallback)} and {\b SDL_RemoveTimer} which support multiple timers. \par
Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SetTimer(Uint32 interval, \par
                SDL_TimerCallback callback)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AddTimer(int, SDL_NewTimerCallback)}, {\b SDL_TimerCallback}\par
}}}
{\xe \v SDL_SetTimer\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_SetTimer (uint {\i interval}, SDL_TimerCallback {\i callback})}
}\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a callback to run after the specified number of milliseconds has elapsed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i interval} The timer interval. \par
{\i callback} The callback to run. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The next timer interval. \par
}The callback function is passed the current timer interval and returns the next timer interval. If the returned value is the same as the one passed in, the periodic alarm continues, otherwise a new alarm is scheduled. \par
To cancel a currently running timer, call {\f2 Sdl.SDL_SetTimer(0, null);}  \par
The timer callback function may run in a different thread than your main constant, and so shouldn't call any functions from within itself. \par
The maximum resolution of this timer is 10 ms, which means that if you request a 16 ms timer, your callback will run approximately 20 ms later on an unloaded system. If you wanted to set a flag signaling a frame update at 30 frames per second (every 33 ms), you might set a timer for 30 ms. \par
If you use this function, you need to pass SDL_INIT_TIMER to SDL_Init(int). \par
This function is kept for compatibility but has been superseded by the new timer functions {\b SDL_AddTimer(int, SDL_NewTimerCallback)} and {\b SDL_RemoveTimer} which support multiple timers. \par
Binds to C-function call in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SetTimer(Uint32 interval, \par
                SDL_TimerCallback callback)\par
}
  \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_TimerCallback}\par
}}}
{\xe \v SDL_SetVideoMode\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetVideoMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_SetVideoMode (int {\i width}, int {\i height}, int {\i bpp}, uint {\i flags})}
}\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up a video mode with the specified width, height and bits-per-pixel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If 'bpp' is 0, it is treated as the current display bits per pixel. \par
The flags parameter is the same as the flags field of the {\b SDL_Surface} structure. OR'd combinations of the following values are valid.  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Flag}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_SWSURFACE}  \cell }{Create the video surface in system memory.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_HWSURFACE}  \cell }{Create the video surface in video memory ,if possible, and you may have to call {\b SDL_LockSurface()} in order to access the raw framebuffer. Otherwise, the video surface will be created in system memory.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_ASYNCBLIT}  \cell }{Enables the use of asynchronous updates of the display surface, but you must always lock before accessing pixels. SDL will wait for updates to complete before returning from the lock. This will usually slow down blitting on single CPU machines, but may provide a speed increase on SMP systems.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_ANYFORMAT}  \cell }{Normally, if a video surface of the requested bits-per-pixel (bpp) is not available, SDL will emulate one with a shadow surface. Passing SDL_ANYFORMAT prevents this and causes SDL to use the video surface, regardless of its pixel depth.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_HWPALETTE}  \cell }{Give SDL exclusive palette access. Without this flag you may not always get the the colors you request with {\b SDL_SetColors} or {\b SDL_SetPalette}. You should look at the video surface structure to determine the actual palette. If SDL cannot guarantee that the colors you request can be set, i.e. if the colormap is shared, then the video surface may be created under emulation in system memory, overriding the SDL_HWSURFACE flag.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_DOUBLEBUF}  \cell }{Enable hardware double buffering; only valid with SDL_HWSURFACE. Calling {\b SDL_Flip} will flip the buffers and update the screen. All drawing will take place on the surface that is not displayed at the moment. If double buffering could not be enabled then SDL_Flip will just perform a SDL_UpdateRect(System.IntPtr, int, int, int, int) on the entire screen. This is usually slower than the normal single-buffering scheme, but prevents "tearing" artifacts caused by modifying video memory while the monitor is refreshing. It should only be used by applications that redraw the entire screen on every update.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_FULLSCREEN}  \cell }{SDL will attempt to use a fullscreen mode. If a hardware resolution change is not possible (for whatever reason), the next higher resolution will be used and the display window centered on a black background. The default is to create a windowed mode if the current graphics system has a window manager. If the SDL library is able to set a fullscreen video mode, this flag will be set in the surface that is returned.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_OPENGL}  \cell }{Create an OpenGL rendering context. You should have previously set OpenGL video attributes with {\b SDL_GL_SetAttribute}.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_OPENGLBLIT}  \cell }{Create an OpenGL rendering context, like above, but allow normal blitting operations. The screen (2D) surface may have an alpha channel, and {\b SDL_UpdateRects} must be used for updating changes to the screen surface. NOTE: This option is kept for compatibility only, and is not recommended for new code.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_RESIZABLE}  \cell }{Create a resizable window. When the window is resized by the user a SDL_VIDEORESIZE event is generated and SDL_SetVideoMode can be called again with the new size.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_NOFRAME}  \cell }{If possible, SDL_NOFRAME causes SDL to create a window with no title bar or frame decoration. Fullscreen modes automatically have this flag set.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If you rely on functionality provided by certain video flags, check the flags of the returned surface to make sure that functionality is available. SDL will fall back to reduced functionality if the exact flags you wanted are not available. \par
Whatever flags SDL_SetVideoMode could satisfy are set in the flags member of the returned surface. \par
The bpp parameter is the number of bits per pixel, so a bpp of 24 uses the packed representation of 3 bytes/pixel. For the more common 4 bytes/pixel mode, use a bpp of 32. Somewhat oddly, both 15 and 16 will request a 2 bytes/pixel mode, but different pixel formats.  \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_Surface * SDLCALL SDL_SetVideoMode\par
            (int width, int height, int bpp, Uint32 flags);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LockSurface}\par
}SDL_LockSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetColors}\par
}SDL_SetColors\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Flip}\par
}SDL_Flip\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i width} \par
{\i height} \par
{\i bpp} \par
{\i flags} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The framebuffer surface, or NULL if it fails. The surface returned is freed by {\b SDL_Quit()} and should not be freed by the caller. \par
}}}
{\xe \v SDL_SetVideoMode\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetVideoMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IntPtr SDL_SetVideoMode (int {\i width}, int {\i height}, int {\i bpp}, int {\i flags})}
}\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up a video mode with the specified width, height and bits-per-pixel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If 'bpp' is 0, it is treated as the current display bits per pixel. \par
The flags parameter is the same as the flags field of the {\b SDL_Surface} structure. OR'd combinations of the following values are valid.  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Flag}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_SWSURFACE}  \cell }{Create the video surface in system memory.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_HWSURFACE}  \cell }{Create the video surface in video memory ,if possible, and you may have to call {\b SDL_LockSurface()} in order to access the raw framebuffer. Otherwise, the video surface will be created in system memory.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_ASYNCBLIT}  \cell }{Enables the use of asynchronous updates of the display surface, but you must always lock before accessing pixels. SDL will wait for updates to complete before returning from the lock. This will usually slow down blitting on single CPU machines, but may provide a speed increase on SMP systems.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_ANYFORMAT}  \cell }{Normally, if a video surface of the requested bits-per-pixel (bpp) is not available, SDL will emulate one with a shadow surface. Passing SDL_ANYFORMAT prevents this and causes SDL to use the video surface, regardless of its pixel depth.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_HWPALETTE}  \cell }{Give SDL exclusive palette access. Without this flag you may not always get the the colors you request with {\b SDL_SetColors} or {\b SDL_SetPalette}. You should look at the video surface structure to determine the actual palette. If SDL cannot guarantee that the colors you request can be set, i.e. if the colormap is shared, then the video surface may be created under emulation in system memory, overriding the SDL_HWSURFACE flag.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_DOUBLEBUF}  \cell }{Enable hardware double buffering; only valid with SDL_HWSURFACE. Calling {\b SDL_Flip} will flip the buffers and update the screen. All drawing will take place on the surface that is not displayed at the moment. If double buffering could not be enabled then SDL_Flip will just perform a SDL_UpdateRect(System.IntPtr, int, int, int, int) on the entire screen. This is usually slower than the normal single-buffering scheme, but prevents "tearing" artifacts caused by modifying video memory while the monitor is refreshing. It should only be used by applications that redraw the entire screen on every update.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_FULLSCREEN}  \cell }{SDL will attempt to use a fullscreen mode. If a hardware resolution change is not possible (for whatever reason), the next higher resolution will be used and the display window centered on a black background. The default is to create a windowed mode if the current graphics system has a window manager. If the SDL library is able to set a fullscreen video mode, this flag will be set in the surface that is returned.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_OPENGL}  \cell }{Create an OpenGL rendering context. You should have previously set OpenGL video attributes with {\b SDL_GL_SetAttribute}.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_OPENGLBLIT}  \cell }{Create an OpenGL rendering context, like above, but allow normal blitting operations. The screen (2D) surface may have an alpha channel, and {\b SDL_UpdateRects} must be used for updating changes to the screen surface. NOTE: This option is kept for compatibility only, and is not recommended for new code.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_RESIZABLE}  \cell }{Create a resizable window. When the window is resized by the user a SDL_VIDEORESIZE event is generated and SDL_SetVideoMode can be called again with the new size.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_NOFRAME}  \cell }{If possible, SDL_NOFRAME causes SDL to create a window with no title bar or frame decoration. Fullscreen modes automatically have this flag set.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
If you rely on functionality provided by certain video flags, check the flags of the returned surface to make sure that functionality is available. SDL will fall back to reduced functionality if the exact flags you wanted are not available. \par
Whatever flags SDL_SetVideoMode could satisfy are set in the flags member of the returned surface. \par
The bpp parameter is the number of bits per pixel, so a bpp of 24 uses the packed representation of 3 bytes/pixel. For the more common 4 bytes/pixel mode, use a bpp of 32. Somewhat oddly, both 15 and 16 will request a 2 bytes/pixel mode, but different pixel formats.  \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC SDL_Surface * SDLCALL SDL_SetVideoMode\par
            (int width, int height, int bpp, Uint32 flags);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LockSurface}\par
}SDL_LockSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetColors}\par
}SDL_SetColors\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Flip}\par
}SDL_Flip\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i width} \par
{\i height} \par
{\i bpp} \par
{\i flags} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The framebuffer surface, or NULL if it fails. The surface returned is freed by {\b SDL_Quit()} and should not be freed by the caller. \par
}}}
{\xe \v SDL_ShowCursor\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ShowCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_ShowCursor (int {\i toggle})}
}\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toggle whether or not the cursor is shown on the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toggle whether or not the cursor is shown on the screen. Passing SDL_ENABLE displays the cursor and passing SDL_DISABLE hides it. The current state of the mouse cursor can be queried by passing SDL_QUERY, either SDL_DISABLE or SDL_ENABLE will be returned. \par
The cursor starts off displayed, but can be turned off.  \par
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             int SDL_ShowCursor(int toggle);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i toggle} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_CreateCursor}, {\b SDL_SetCursor}\par
}}}
{\xe \v SDL_ThreadID\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_ThreadID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_ThreadID ()}
}\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the 32-bit thread identifier for the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid ID \par
}Binds to C-function call in SDL_thread.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_ThreadID(void)\par
}
  \par
}}
{\xe \v SDL_TimerCallback\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_TimerCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int SDL_TimerCallback (int {\i interval})}
}\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prototype for the timer callback. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i interval} The current timer interval. \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The next timer interval. \par
}Binds to C callback in SDL_timer.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid typedef Uint32 (SDLCALL *SDL_TimerCallback)(Uint32 interval, void *param)\par
}
  \par
}}
{\xe \v SDL_UnloadObject\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UnloadObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_UnloadObject (IntPtr {\i handle})}
}\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unload a shared object from memory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_loadso.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void * SDLCALL SDL_UnloadObject(void *handle)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i handle} Object handle\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LoadFunction}, {\b SDL_LoadObject}\par
}}}
{\xe \v SDL_UnlockAudio\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UnlockAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_UnlockAudio ()}
}\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlock the callback function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlocks a previous {\b SDL_LockAudio} call. \par
Binds to C-function call in SDL_audio.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_UnlockAudio(void)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_OpenAudio}\par
}}}
{\xe \v SDL_UnlockSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UnlockSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SDL_UnlockSurface ({\b surface})}
}\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SDL_UnlockSurface\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UnlockSurface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_UnlockSurface (IntPtr {\i surface})}
}\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlocks a previously locked surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Surfaces that were previously locked using {\b SDL_LockSurface} must be unlocked with SDL_UnlockSurface. Surfaces should be unlocked as soon as possible. \par
It should be noted that since 1.1.8, surface locks are recursive. See {\b SDL_LockSurface}. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_UnlockSurface(SDL_Surface *surface)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LockSurface}\par
}SDL_LockSurface\par
}}
{\xe \v SDL_UnlockYUVOverlay\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UnlockYUVOverlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_UnlockYUVOverlay (IntPtr {\i overlay})}
}\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlock an overlay. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The opposite to {\b SDL_LockYUVOverlay}. Unlocks a previously locked overlay. An overlay must be unlocked before it can be displayed. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDLCALL SDL_UnlockYUVOverlay(SDL_Overlay *overlay)\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i overlay} IntPtr to {\b SDL_Overlay}\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_UnlockYUVOverlay}, {\b SDL_CreateYUVOverlay(int, int, int, IntPtr)}, {\b SDL_Overlay}\par
}}}
{\xe \v SDL_UpdateRect\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UpdateRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_UpdateRect (IntPtr {\i screen}, int {\i x}, int {\i y}, int {\i w}, int {\i h})}
}\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure the given area is updated on the given screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rectangle must be confined within the screen boundaries (no clipping is done).  \par
If 'x', 'y', 'w' and 'h' are all 0, SDL_UpdateRect will update the entire screen. \par
These functions should not be called while 'screen' is {\b locked}. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_UpdateRect (SDL_Surface *screen, Sint32 x, Sint32 y, Uint32 w, Uint32 h)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i screen} \par
{\i w} \par
{\i h} \par
{\i x} \par
{\i y} \par
}
}}
{\xe \v SDL_UpdateRect\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UpdateRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_UpdateRect (IntPtr {\i screen}, int {\i x}, int {\i y}, uint {\i w}, uint {\i h})}
}\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure the given area is updated on the given screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rectangle must be confined within the screen boundaries (no clipping is done).  \par
If 'x', 'y', 'w' and 'h' are all 0, SDL_UpdateRect will update the entire screen. \par
These functions should not be called while 'screen' is {\b locked}. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_UpdateRect (SDL_Surface *screen, Sint32 x, Sint32 y, Uint32 w, Uint32 h)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i screen} \par
{\i w} \par
{\i h} \par
{\i x} \par
{\i y} \par
}
}}
{\xe \v SDL_UpdateRects\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_UpdateRects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_UpdateRects (IntPtr {\i screen}, int {\i numrects}, [In, Out] {\b SDL_Rect}[] {\i rects})}
}\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure the given list of rectangles is updated on the given screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rectangles must all be confined within the screen boundaries (no clipping is done). \par
This function should not be called while screen is locked.  \par
Note: It is adviced to call this function only once per frame, since each call has some processing overhead. This is no restriction since you can pass any number of rectangles each time.  \par
The rectangles are not automatically merged or checked for overlap. In general, the programmer can use his knowledge about his particular rectangles to merge them in an efficient way, to avoid overdraw. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_UpdateRects (SDL_Surface *screen, int numrects, SDL_Rect *rects)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_UpdateRect(System.IntPtr, int, int, int, int)\par
}SDL_UpdateRect\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Rect}\par
}{\b SDL_Rect}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_Surface}\par
}{\b SDL_Surface}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_LockSurface}\par
}SDL_LockSurface\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i screen} \par
{\i numrects} \par
{\i rects} \par
}
}}
{\xe \v SDL_VideoModeOK\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_VideoModeOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_VideoModeOK (int {\i width}, int {\i height}, int {\i bpp}, int {\i flags})}
}\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check to see if a particular video mode is supported. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_VideoModeOK returns 0 if the requested mode is not supported under any bit depth, or returns the bits-per-pixel of the closest available mode with the given width, height and requested {\b SDL_Surface} flags. See {\b SDL_SetVideoMode(int, int, int, int)}. \par
The bits-per-pixel value returned is only a suggested mode. You can usually request and bpp you want when setting the video mode and SDL will emulate that color depth with a shadow video surface.  \par
The arguments to {\b SDL_VideoModeOK()} are the same ones you would pass to {\b SDL_SetVideoMode(int, int, int, int)}  \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_VideoModeOK(int width, int height, int bpp, Uint32 flags)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i width} Width of mode\par
{\i height} Height of mode\par
{\i bpp} bit depth of Mode\par
{\i flags} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_VideoModeOK\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_VideoModeOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_VideoModeOK (int {\i width}, int {\i height}, int {\i bpp}, uint {\i flags})}
}\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check to see if a particular video mode is supported. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_VideoModeOK returns 0 if the requested mode is not supported under any bit depth, or returns the bits-per-pixel of the closest available mode with the given width, height and requested {\b SDL_Surface} flags. See {\b SDL_SetVideoMode(int, int, int, int)}. \par
The bits-per-pixel value returned is only a suggested mode. You can usually request and bpp you want when setting the video mode and SDL will emulate that color depth with a shadow video surface.  \par
The arguments to {\b SDL_VideoModeOK()} are the same ones you would pass to {\b SDL_SetVideoMode(int, int, int, int)}  \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_VideoModeOK(int width, int height, int bpp, Uint32 flags)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i width} Width of mode\par
{\i height} Height of mode\par
{\i bpp} bit depth of Mode\par
{\i flags} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SDL_WaitEvent\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WaitEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WaitEvent (out SDL_Event {\i evt})}
}\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits indefinitely for the next available event. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits indefinitely for the next available event, returning 1, or 0 if there was an error while waiting for events. \par
If 'event' is not NULL, the next event is removed from the queue and stored in that area. \par
Binds to C-function in SDL_events.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_WaitEvent(SDL_Event *event);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i evt} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 1, or 0 if there was an error while waiting for events\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Event, {\b SDL_PollEvent}\par
}}}
{\xe \v SDL_WaitThread\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WaitThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_WaitThread (IntPtr {\i thread}, out int {\i status})}
}\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for a thread to finish. The return code for the thread function is placed in the area pointed to by 'status', if 'status' is not NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_thread.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_WaitThread(SDL_Thread *thread, int *status)\par
}
  \par
}}
{\xe \v SDL_WarpMouse\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WarpMouse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_WarpMouse (short {\i x}, short {\i y})}
}\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position of the mouse cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position of the mouse cursor (generates a mouse motion event). \par
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_WarpMouse(Uint16 x, Uint16 y);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_MouseMotionEvent\par
}}}
{\xe \v SDL_WarpMouse\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WarpMouse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_WarpMouse (ushort {\i x}, ushort {\i y})}
}\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position of the mouse cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the position of the mouse cursor (generates a mouse motion event). \par
Binds to C-function call in SDL_mouse.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             void SDL_WarpMouse(Uint16 x, Uint16 y);\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i x} \par
{\i y} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_MouseMotionEvent\par
}}}
{\xe \v SDL_WasInit\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WasInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WasInit (int {\i flags})}
}\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks which SDL subsystems are initialized. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i flags} Specifies the subsystems you wish to check: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Flag}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_TIMER}  \cell }{The timer subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_AUDIO}  \cell }{The audio subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_VIDEO}  \cell }{The video subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_CDROM}  \cell }{The CD-ROM subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_JOYSTICK}  \cell }{The joystick subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVERYTHING}  \cell }{All subsystems.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_NOPARACHUTE}  \cell }{Prevents SDL from catching fatal signals.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVENTTHREAD}  \cell }{Not supported on all OS's.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A bitwised OR'd combination of the initialized subsystems. \par
}{\b SDL_WasInit}  allows you to see which SDL subsytems have been initialized. \par
Binds to C-function call in SDL.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_WasInit(Uint32 flags)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Init(int), SDL_InitSubSystem(int)\par
}}}
{\xe \v SDL_WasInit\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WasInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint SDL_WasInit (uint {\i flags})}
}\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks which SDL subsystems are initialized. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i flags} Specifies the subsystems you wish to check: \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Flag}  \cell }{Description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_TIMER}  \cell }{The timer subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_AUDIO}  \cell }{The audio subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_VIDEO}  \cell }{The video subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_CDROM}  \cell }{The CD-ROM subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_JOYSTICK}  \cell }{The joystick subsystem.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVERYTHING}  \cell }{All subsystems.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_NOPARACHUTE}  \cell }{Prevents SDL from catching fatal signals.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_INIT_EVENTTHREAD}  \cell }{Not supported on all OS's.  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A bitwised OR'd combination of the initialized subsystems. \par
}{\b SDL_WasInit}  allows you to see which SDL subsytems have been initialized. \par
Binds to C-function call in SDL.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC Uint32 SDLCALL SDL_WasInit(Uint32 flags)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid SDL_Init(int), SDL_InitSubSystem(int)\par
}}}
{\xe \v SDL_WM_GetCaption\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WM_GetCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_WM_GetCaption (out string {\i title}, out string {\i icon})}
}\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the title and icon text of the display window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_WM_GetCaption(char **title, char **icon)\par
}
  {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i title} \par
{\i icon} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_WM_SetCaption}\par
}SDL_WM_SetCaption\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_WM_SetIcon}\par
}SDL_WM_SetIcon\par
}}
{\xe \v SDL_WM_GrabInput\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WM_GrabInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WM_GrabInput (int {\i mode})}
}\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grabs mouse and keyboard input. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grabbing means that the mouse is confined to the application window, and nearly all keyboard input is passed directly to the application, and not interpreted by a window manager, if any. \par
When mode is SDL_GRAB_QUERY the grab mode is not changed, but the current grab mode is returned.  \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_GrabMode SDL_WM_GrabInput(SDL_GrabMode mode)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mode} SDL_GrabMode\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The current/new SDL_GrabMode. \par
}}}
{\xe \v SDL_WM_IconifyWindow\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WM_IconifyWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WM_IconifyWindow ()}
}\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iconify/Minimise the window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function iconifies/minimizes the window, and returns 1 if it succeeded. If the function succeeds, it generates an SDL_APPACTIVE loss event. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_WM_IconifyWindow(void)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 1 if it succeeded. This function is a noop and returns 0 in non-windowed environments.\par
}}}
{\xe \v SDL_WM_SetCaption\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WM_SetCaption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_WM_SetCaption (string {\i title}, string {\i icon})}
}\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the title and icon text of the display window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the title-bar and icon name of the display window. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC void SDLCALL SDL_WM_SetCaption(const char *title, const char *icon)\par
}
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_WM_GetCaption}\par
}SDL_WM_GetCaption\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_WM_SetIcon}\par
}SDL_WM_SetIcon\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i title} \par
{\i icon} \par
}
}}
{\xe \v SDL_WM_SetIcon\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WM_SetIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SDL_WM_SetIcon (IntPtr {\i icon}, byte[] {\i mask})}
}\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the icon for the display window. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the icon for the display window. Win32 icons must be 32x32. \par
This function must be called before the first call to {\b SDL_SetVideoMode(int, int, int, int)}. \par
The mask is a bitmask that describes the shape of the icon. If mask is NULL, then the shape is determined by the colorkey of icon, if any, or makes the icon rectangular (no transparency) otherwise. \par
If mask is non-NULL, it points to a bitmap with bits set where the corresponding pixel should be visible. The format of the bitmap is as follows: Scanlines come in the usual top-down order. Each scanline consists of (width / 8) bytes, rounded up. The most significant bit of each byte represents the leftmost pixel. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void SDL_WM_SetIcon(SDL_Surface *icon, Uint8 *mask);\par
}
\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_WM_SetIcon(SDL_LoadBMP("icon.bmp"), NULL);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i icon} Pointer to an {\b SDL_Surface}\par
{\i mask} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_SetVideoMode(int, int, int, int)}, {\b SDL_WM_SetCaption}\par
}}}
{\xe \v SDL_WM_ToggleFullScreen\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WM_ToggleFullScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WM_ToggleFullScreen (IntPtr {\i surface})}
}\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toggle fullscreen mode without changing the contents of the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the display surface does not require locking before accessing the pixel information, then the memory pointers will not change. p>If this function was able to toggle fullscreen mode (change from running in a window to fullscreen, or vice-versa), it will return 1. If it is not implemented, or fails, it returns 0. \par
The next call to {\b SDL_SetVideoMode()} will set the mode fullscreen attribute based on the flags parameter - if SDL_FULLSCREEN is not set, then the display will be windowed by default where supported. \par
This is currently only implemented in the X11 video driver. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid int SDL_WM_ToggleFullScreen(SDL_Surface *surface);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i surface} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns 0 on failure or 1 on success.\par
}}}
{\xe \v SDL_WriteBE16\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteBE16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteBE16 (IntPtr {\i dst}, short {\i val})}
}\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteBE16(SDL_RWops *dst, Uint16 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteBE16\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteBE16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteBE16 (IntPtr {\i dst}, ushort {\i val})}
}\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteBE16(SDL_RWops *dst, Uint16 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteBE32\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteBE32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteBE32 (IntPtr {\i dst}, int {\i val})}
}\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteBE32(SDL_RWops *dst, Uint32 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteBE32\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteBE32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteBE32 (IntPtr {\i dst}, uint {\i val})}
}\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteBE32(SDL_RWops *dst, Uint32 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteBE64\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteBE64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteBE64 (IntPtr {\i dst}, long {\i val})}
}\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteBE64(SDL_RWops *dst, Uint64 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteLE16\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteLE16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteLE16 (IntPtr {\i dst}, short {\i val})}
}\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteLE16(SDL_RWops *dst, Uint16 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteLE16\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteLE16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteLE16 (IntPtr {\i dst}, ushort {\i val})}
}\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteLE16(SDL_RWops *dst, Uint16 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteLE32\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteLE32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteLE32 (IntPtr {\i dst}, int {\i val})}
}\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteLE32(SDL_RWops *dst, Uint32 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteLE32\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteLE32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteLE32 (IntPtr {\i dst}, uint {\i val})}
}\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteLE32(SDL_RWops *dst, Uint32 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v SDL_WriteLE64\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_WriteLE64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SDL_WriteLE64 (IntPtr {\i dst}, long {\i val})}
}\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write an item of native format to the specified endianness. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Binds to C-function in SDL_rwops.h {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             extern DECLSPEC int SDLCALL SDL_WriteLE64(SDL_RWops *dst, Uint64 value)\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dst} \par
{\i val} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b SDL_AllocRW}\par
}}}
{\xe \v ThreadDelegate\:Sdl.cs}
{\xe \v Sdl.cs\:ThreadDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate int ThreadDelegate ()}
}\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int (SDLCALL *fn)(void *) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Aloss\:Sdl.cs}
{\xe \v Sdl.cs\:Aloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Aloss}}
}\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha\:Sdl.cs}
{\xe \v Sdl.cs\:alpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b alpha} = (Uint8){\b temp}}
}\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v amask\:Sdl.cs}
{\xe \v Sdl.cs\:amask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Uint32 {\b amask} = 0x000000ff}
}\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Amask\:Sdl.cs}
{\xe \v Sdl.cs\:Amask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Amask}}
}\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Ashift\:Sdl.cs}
{\xe \v Sdl.cs\:Ashift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Ashift}}
}\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Bloss\:Sdl.cs}
{\xe \v Sdl.cs\:Bloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Bloss}}
}\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v blue\:Sdl.cs}
{\xe \v Sdl.cs\:blue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b blue} = (Uint8){\b temp}}
}\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Bmask\:Sdl.cs}
{\xe \v Sdl.cs\:Bmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Bmask}}
}\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bmask\:Sdl.cs}
{\xe \v Sdl.cs\:bmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Uint32 {\b bmask} = 0x0000ff00}
}\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Bshift\:Sdl.cs}
{\xe \v Sdl.cs\:Bshift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Bshift}}
}\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colors\:Sdl.cs}
{\xe \v Sdl.cs\:colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_Color} {\b colors}}
}\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fmt\:Sdl.cs}
{\xe \v Sdl.cs\:fmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b fmt} = surface.format}
}\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores surface format information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A {\b SDL_PixelFormat} describes the format of the pixel data stored at the pixels field of a {\b SDL_Surface}. Every surface stores a {\b SDL_PixelFormat} in the format field. \par
If you wish to do pixel level modifications on a surface, then understanding how SDL stores its color information is essential.  \par
8-bit pixel formats are the easiest to understand. Since its an 8-bit format, we have 8 BitsPerPixel and 1 BytesPerPixel. Since BytesPerPixel is 1, all pixels are represented by a Uint8 which contains an index into palette.colors. So, to determine the color of a pixel in a 8-bit surface: we read the color index from surface.pixels and we use that index to read the {\b SDL_Color} structure from surface.format.palette.colors. Like so:  \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                         SDL_Surface *surface;\par
                        SDL_PixelFormat *fmt;\par
                        SDL_Color *color;\par
                        Uint8 index;\par
\par
                        .\par
                        .\par
\par
                        /* Create surface */\par
                        .\par
                        .\par
                        fmt=surface.format;\par
\par
                        /* Check the bitdepth of the surface */\par
                        if(fmt.BitsPerPixel!=8)\par
                \{\par
                        fprintf(stderr, "Not an 8-bit surface.\\n");\par
                        return(-1);\par
                \}\par
\par
                /* Lock the surface */\par
                SDL_LockSurface(surface);\par
\par
                /* Get the topleft pixel */\par
                index=*(Uint8 *)surface.pixels;\par
                color=fmt.palette.colors[index];\par
\par
                /* Unlock the surface */\par
                SDL_UnlockSurface(surface);\par
                printf("Pixel Color- Red: %d, Green: %d, Blue: %d. Index: %d\\n",\par
                color.r, color.g, color.b, index);\par
                .\par
                .\par
}
  \par
Pixel formats above 8-bit are an entirely different experience. They are considered to be "TrueColor" formats and the color information is stored in the pixels themselves, not in a palette. The mask, shift and loss fields tell us how the color information is encoded. The mask fields allow us to isolate each color component, the shift fields tell us the number of bits to the right of each component in the pixel value and the loss fields tell us the number of bits lost from each component when packing 8-bit color component in a pixel. \par
code> /* Extracting color components from a 32-bit color value \par
}}
{\xe \v given\:Sdl.cs}
{\xe \v Sdl.cs\:given}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
</code ></example >< paramname="surface"></param >< paramname="colors"></param >< paramname="firstcolor"></param >< paramname="flags"></param >< paramname="ncolors"></param >< returns > If {\b surface} is not a palettized this function does returning If all of the {\b colors} were set as passed to it will {\b return} If not all the color entries were set exactly as {\b given}}
}\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Gloss\:Sdl.cs}
{\xe \v Sdl.cs\:Gloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Gloss}}
}\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gmask\:Sdl.cs}
{\xe \v Sdl.cs\:gmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Uint32 {\b gmask} = 0x00ff0000}
}\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Gmask\:Sdl.cs}
{\xe \v Sdl.cs\:Gmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Gmask}}
}\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v green\:Sdl.cs}
{\xe \v Sdl.cs\:green}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b green} = (Uint8){\b temp}}
}\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Gshift\:Sdl.cs}
{\xe \v Sdl.cs\:Gshift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Gshift}}
}\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gt\:Sdl.cs}
{\xe \v Sdl.cs\:gt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
& {\b gt}}
}\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v h\:Sdl.cs}
{\xe \v Sdl.cs\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
.</code><p> Binds to C function call in SDL_video. {\b h}}
}\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v i\:Sdl.cs}
{\xe \v Sdl.cs\:i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b i}}
}\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lt\:Sdl.cs}
{\xe \v Sdl.cs\:lt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
& {\b lt}}
}\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nothing\:Sdl.cs}
{\xe \v Sdl.cs\:nothing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
</code ></example >< paramname="surface"></param >< paramname="colors"></param >< paramname="firstcolor"></param >< paramname="flags"></param >< paramname="ncolors"></param >< returns > If {\b surface} is not a palettized this function does {\b nothing}}
}\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixel\:Sdl.cs}
{\xe \v Sdl.cs\:pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel} = *((Uint32*)surface.pixels)}
}\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v red\:Sdl.cs}
{\xe \v Sdl.cs\:red}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b red} = (Uint8){\b temp}}
}\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v return\:Sdl.cs}
{\xe \v Sdl.cs\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
</code ></example >< paramname="surface"></param >< paramname="colors"></param >< paramname="firstcolor"></param >< paramname="flags"></param >< paramname="ncolors"></param >< returns > If {\b surface} is not a palettized this function does returning If all of the {\b colors} were set as passed to it will {\b return} If not all the color entries were set exactly as it will {\b return}}
}\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rloss\:Sdl.cs}
{\xe \v Sdl.cs\:Rloss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Rloss}}
}\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rmask\:Sdl.cs}
{\xe \v Sdl.cs\:rmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
else {\b rmask} = 0x000000ff}
}\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rmask\:Sdl.cs}
{\xe \v Sdl.cs\:Rmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Rmask}}
}\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rshift\:Sdl.cs}
{\xe \v Sdl.cs\:Rshift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
fmt. {\b Rshift}}
}\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v screen\:Sdl.cs}
{\xe \v Sdl.cs\:screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SDL_Surface} * {\b screen} = SDL_SetVideoMode(640, 480, 8, SDL_HWPALETTE)}
}\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets a portion of the colormap for the given 8-bit surface. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the colors in the palette of an 8-bit surface.\par
When surface is the surface associated with the current display, the display colormap will be updated with the requested colors. If SDL_HWPALETTE was set in {\b SDL_SetVideoMode(int, int, int, int)} flags, SDL_SetColors will always return 1, and the palette is guaranteed to be set the way you desire, even if the window colormap has to be warped or run under emulation.\par
The color components of a {\b SDL_Color} structure are 8-bits in size, giving you a total of 256^3 =16777216 colors. \par
Palettized (8-bit) screen surfaces with the SDL_HWPALETTE flag have two palettes, a logical palette that is used for mapping blits to/from the surface and a physical palette (that determines how the hardware will map the colors to the display). SDL_SetColors modifies both palettes (if present), and is equivalent to calling SDL_SetPalette with the flags set to (SDL_LOGPAL | SDL_PHYSPAL).  \par
When 'surface' is the surface associated with the current display, the display colormap will be updated with the requested colors. If SDL_HWPALETTE was set in {\b SDL_SetVideoMode()} flags, {\b SDL_SetColors()} will always return 1, and the palette is guaranteed to be set the way you desire, even if the window colormap has to be warped or run under emulation. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SetColors(SDL_Surface *surface, SDL_Color *colors, int firstcolor, int ncolors)\par
}
 \par
/* Create a display surface with a grayscale palette\par
Palettized (8-bit) screen surfaces with the SDL_HWPALETTE flag have two palettes, a logical palette that is used for mapping blits to/from the surface and a physical palette (that determines how the hardware will map the colors to the display). SDL_BlitSurface always uses the logical palette when blitting surfaces (if it has to convert between surface pixel formats). Because of this, it is often useful to modify only one or the other palette to achieve various special color effects (e.g., screen fading, color flashes, screen dimming).\par
This function can modify either the logical or physical palette by specifing SDL_LOGPAL or SDL_PHYSPALthe in the flags parameter.\par
When surface is the surface associated with the current display, the display colormap will be updated with the requested colors. If SDL_HWPALETTE was set in SDL_SetVideoMode flags, SDL_SetPalette will always return 1, and the palette is guaranteed to be set the way you desire, even if the window colormap has to be warped or run under emulation. \par
The color components of a {\b SDL_Color} structure are 8-bits in size, giving you a total of 2563=16777216 colors. \par
'flags' is one or both of: SDL_LOGPAL -- set logical palette, which controls how blits are mapped to/from the surface, SDL_PHYSPAL -- set physical palette, which controls how pixels look on the screen Only screens have physical palettes. Separate change of physical/logical palettes is only possible if the screen has SDL_HWPALETTE set. /p>\par
{\b SDL_SetColors()} is equivalent to calling this function with flags = (SDL_LOGPAL|SDL_PHYSPAL). \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid extern DECLSPEC int SDLCALL SDL_SetPalette(SDL_Surface *surface, int flags, SDL_Color *colors, int firstcolor, int ncolors)\par
}
 \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                 /* Create a display surface with a grayscale palette  \par
}
\par
}}
{\xe \v SDL_SetPalette\:Sdl.cs}
{\xe \v Sdl.cs\:SDL_SetPalette}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
....</code></example><paramname="surface"></param><paramname="colors"></param><paramname="firstcolor"></param><paramname="flags"></param><paramname="ncolors"></param><returns> If {\b surface} is not a palettized this function does returning.If all of the {\b colors} were set as passed to SDL_SetPalette}
}\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surface\:Sdl.cs}
{\xe \v Sdl.cs\:surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
endif {\b surface}}
}\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  SDL_CreateRGBSurface(SDL_SWSURFACE, width, height, 32,\par
                        rmask, gmask, bmask, amask)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an empty {\b SDL_Surface}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocate an empty surface (must be called after {\b SDL_SetVideoMode(int, int, int, int)}). \par
If depth is 8 bits an empty palette is allocated for the surface, otherwise a 'packed-pixel' {\b SDL_PixelFormat} is created using the [RGBA]mask's provided (see {\b SDL_PixelFormat}). The flags specifies the type of surface that should be created, it is an OR'd combination of the following possible values. \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_SWSURFACE}  \cell }{SDL will create the surface in system memory. This improves the performance of pixel level access, however you may not be able to take advantage of some types of hardware blitting.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_HWSURFACE}  \cell }{SDL will attempt to create the surface in video memory. This will allow SDL to take advantage of Video->Video blits (which are often accelerated).   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_SRCCOLORKEY}  \cell }{This flag turns on colourkeying for blits from this surface. If SDL_HWSURFACE is also specified and colourkeyed blits are hardware-accelerated, then SDL will attempt to place the surface in video memory. Use {\b SDL_SetColorKey(IntPtr, int, int)} to set or clear this flag after surface creation.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{SDL_SRCALPHA}  \cell }{This flag turns on alpha-blending for blits from this surface. If SDL_HWSURFACE is also specified and alpha-blending blits are hardware-accelerated, then the surface will be placed in video memory if possible. Use {\b SDL_SetAlpha(IntPtr, int, byte)} to set or clear this flag after surface creation.   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard
{\b Note:}  If an alpha-channel is specified (that is, if Amask is nonzero), then the SDL_SRCALPHA flag is automatically set. You may remove this flag by calling {\b SDL_SetAlpha(IntPtr, int, byte)} after surface creation. \par
Binds to C-function call in SDL_video.h: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SDL_Surface *SDL_CreateRGBSurface(Uint32 flags, int width, int height, int depth, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)\par
}
 \par
/* Create a 32-bit surface with the bytes of each pixel in R,G,B,A order, as expected by OpenGL for textures \par
}}
{\xe \v temp\:Sdl.cs}
{\xe \v Sdl.cs\:temp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b temp} = {\b pixel}&amp}
}\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v to< see cref="SDL_Surface"/>\:Sdl.cs}
{\xe \v Sdl.cs\:to< see cref="SDL_Surface"/>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
</example >< paramname="flags"></param >< paramname="width"></param >< paramname="height"></param >< paramname="depth"></param >< paramname="Rmask"></param >< paramname="Gmask"></param >< paramname="Bmask"></param >< paramname="Amask"></param >< returns > IntPtr to< see cref="SDL_Surface"/>}
}\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/SdlGfx.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/SdlGfx.cs}
{\xe \v src/Tao.Sdl/SdlGfx.cs}
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.SdlGfx}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL graphics drawing primitives and other support functions The SDL_gfx library evolved out of the SDL_gfxPrimitives code which provided basic drawing routines such as lines, circles or polygons and SDL_rotozoom which implemented a interpolating rotozoomer for SDL surfaces. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlGfx.tColorRGBA}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlGfx.tColorY}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlGfx.FPSmanager}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Sdl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/SdlImage.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/SdlImage.cs}
{\xe \v src/Tao.Sdl/SdlImage.cs}
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.SdlImage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_Image bindings for .NET. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Sdl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/SdlMixer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/SdlMixer.cs}
{\xe \v src/Tao.Sdl/SdlMixer.cs}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.SdlMixer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Mix_Chunk}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Sdl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Tao::Sdl.MusicFinishedDelegate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Tao::Sdl.MixFunctionDelegate} (IntPtr udata,[Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] byte[] stream, int len)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Tao::Sdl.ChannelFinishedDelegate} (int channel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Tao::Sdl.MixEffectFunctionDelegate} (int chan, IntPtr stream, int len, IntPtr udata)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special effect callback function pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Tao::Sdl.MixEffectDoneDelegate} (int chan, IntPtr udata)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special effect done callback function pointer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_OpenAudio} (int frequency, short format, int channels, int chunksize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the mixer with a certain audio format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_AllocateChannels} (int numchans)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dynamically change the number of channels managed by the mixer. If decreasing the number of channels, the upper channels are stopped. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_QuerySpec} (out int frequency, out short format, out int channels)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get output format. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Tao::Sdl.Mix_LoadWAV_RW} (IntPtr src, int freesrc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a wave file or a music (.mod .s3m .it .xm) file. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Tao::Sdl.Mix_LoadMUS} (string file)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a music file into a Mix_Music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Tao::Sdl.Mix_LoadMUS_RW} (IntPtr rw)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a music file from an SDL_RWop object (Ogg and MikMod specific currently). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Tao::Sdl.Mix_QuickLoad_WAV} (IntPtr mem)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a wave file of the mixer format from a memory buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Tao::Sdl.Mix_QuickLoad_RAW} (IntPtr mem, int len)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load raw audio data of the mixer format from a memory buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_FreeChunk} (IntPtr chunk)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free an audio chunk previously loaded. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_FreeMusic} (IntPtr music)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Free a Mix_Music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GetMusicType} (IntPtr music)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find out the music format of a mixer music, or the currently playing music, if 'music' is NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_SetPostMix} (MixFunctionDelegate mix_func, IntPtr arg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook in a postmix processor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_HookMusic} (MixFunctionDelegate mix_func, IntPtr arg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook for a custom music player. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_HookMusicFinished} (MusicFinishedDelegate music_finished)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add your own callback when the music has finished playing. This callback is only called if the music finishes naturally. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Tao::Sdl.Mix_GetMusicHookData} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a pointer to the user data for the current music hook. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_ChannelFinished} (ChannelFinishedDelegate channel_finished)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set callback for when channel finishes playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_RegisterEffect} (int chan, MixEffectFunctionDelegate f, MixEffectDoneDelegate d, IntPtr arg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hook a processor to a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_UnregisterEffect} (int chan, MixEffectFunctionDelegate f)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unhook a processor from a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_UnregisterAllEffects} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unhook all processors from a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_SetPanning} (int channel, byte left, byte right)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stereo panning. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_SetPosition} (int channel, short angle, byte distance)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Panning(angular) and distance. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_SetDistance} (int channel, byte distance)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Distance attenuation (volume). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_SetReverseStereo} (int channel, int flip)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swap stereo left and right. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_ReserveChannels} (int num)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prevent channels from being used in default group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GroupChannel} (int which, int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add/remove channel to/from group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GroupChannels} (int from, int to, int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assign several consecutive channels to a group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GroupAvailable} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get first inactive channel in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GroupCount} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get number of channels in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GroupOldest} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get oldest busy channel in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GroupNewer} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get youngest busy channel in group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_PlayChannelTimed} (int channel, IntPtr chunk, int loops, int ticks)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play loop and limit by time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_PlayMusic} (IntPtr music, int loops)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music, with looping. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadeInMusic} (IntPtr music, int loops, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music, with looping, and fade in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadeInMusicPos} (IntPtr music, int loops, int ms, double position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play music from a start point, with looping, and fade in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadeInChannelTimed} (int channel, IntPtr chunk, int loops, int ms, int ticks)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Play loop with fade in and limit by time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_Volume} (int channel, int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the mix volume of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_VolumeChunk} (IntPtr chunk, int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set mix volume. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_VolumeMusic} (int volume)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set music volume. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_HaltChannel} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop playing on a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_HaltGroup} (int tag)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop a group. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_HaltMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop music playback. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_ExpireChannel} (int channel, int ticks)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change the timed stoppage of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadeOutChannel} (int which, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop playing channel after timed fade out. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadeOutGroup} (int tag, int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fade out a group over time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadeOutMusic} (int ms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop music, with fade out. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadingMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get status of current music fade activity. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_FadingChannel} (int which)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the fade status of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_Pause} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause a particular channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_Resume} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume a paused channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_Paused} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pause status of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_PauseMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_ResumeMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume paused music. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_RewindMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rewind music to beginning. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_PausedMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test whether music is paused. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_SetMusicPosition} (double position)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set position of playback in stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_Playing} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the active playing status of a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_PlayingMusic} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test whether music is playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_SetMusicCMD} (string command)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use external program for music playback. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_SetSynchroValue} (int value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchro value is set by MikMod from modules while playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Tao::Sdl.Mix_GetSynchroValue} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchro value is set by MikMod from modules while playing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IntPtr {\b Tao::Sdl.Mix_GetChunk} (int channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the sample playing on a channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Tao::Sdl.Mix_CloseAudio} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close sound mixer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Tao::Sdl.Mix_Chunk}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/SdlNet.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/SdlNet.cs}
{\xe \v src/Tao.Sdl/SdlNet.cs}
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.SdlNet}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDL_net is a portable network library for use with SDL. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlNet.IPaddress}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IP Address and Port number. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlNet.UDPpacket}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP packet data encapsulation. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlNet.TCPsocket}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCP socket type (opaque). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlNet.UDPsocket}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP socket type (opaque). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlNet.SDLNet_SocketSet}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket Set type (opaque). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlNet.SDLNet_GenericSocket}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A generic type for UDP and TCP sockets. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Sdl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/SdlTtf.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/SdlTtf.cs}
{\xe \v src/Tao.Sdl/SdlTtf.cs}
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.SdlTtf}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This library supports Sdl_ttf 2.0.8. This library is a wrapper around the excellent {\b FreeType} 1.2 library, available at: {\f2 http://www.freetype.org.} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.SdlTtf.TTF_Font}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The opaque holder of a loaded font. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Sdl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Tao.Sdl/Smpeg.cs File Reference\par \pard\plain 
{\tc\tcl2 \v src/Tao.Sdl/Smpeg.cs}
{\xe \v src/Tao.Sdl/Smpeg.cs}
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tao.Sdl.Smpeg}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SMPEG bindings for .NET. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Smpeg.SMPEG_FilterInfo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Filter info from SMPEG. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Smpeg.SMPEG_Filter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The filter definition itself. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Smpeg.SMPEG_version}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure to hold version number of the SMPEG library. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Tao.Sdl.Smpeg.SMPEG_Info}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to get information about the SMPEG object. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Packages\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tao.Sdl}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}