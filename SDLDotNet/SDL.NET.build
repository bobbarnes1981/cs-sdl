<?xml version="1.0" ?>
<project name="SDL.NET" default="build">
    <!--
	Targets:
	build (default): builds all library assemblies for default framework (typically .NET)
	examples: builds all examples.
	buildrelease: builds release versions of libraries and examples.
	doc: creates docs.
	schema: creates XML schema.
	packagedefault: creates release zip file for default framework.
	package: creates release zip file for .NET and Mono. Must have both frameworks installed.

	you can combine targets easily. If .NET is your default framework but you want to compile 
	against Mono (mcs) you can use the command:
	'nant mono build'
	This sets mono parameters and then runs the build.
    -->
    <echo message="Using '${nant.settings.currentframework}' Framework"/>

    <!-- global project settings -->
    <property name="project.name" value="SDL.NET" />
    <property name="project.version" value="1.5.2" />
    <property name="project.html-help.dir" value="C:\Program Files\HTML Help Workshop" />
    <property name="src.dir" value="src" />
    <property name="examples.dir" value="examples" />
    <property name="bin.dir" value="bin" />
    <property name="lib.dir" value="lib" />
    <property name="Image.dir" value="Image" />
    <property name="TTF.dir" value="TTF" />
    <property name="project.main.dir" value="${nant.project.basedir}" />
    <property name="project.name.simple" value="SDLDotNet" />
    <property name="project.name.Image" value="SDL.Image.NET" />
    <property name="project.name.TTF" value="SDL.TTF.NET" />
    <property name="project.name.All" value="SDL.All.NET" />

    <!-- default configuration -->
    <property name="project.config" value="Debug" /> <!-- Debug|Release -->

    <!-- named project configurations (used by self-test and self-doc tasks) -->
    <target name="Debug" description="Perform a 'debug' build">
	<property name="project.config" value="Debug" />
	<property name="build.debug" value="true" />
    </target>

    <target name="Release" description="Perform a 'release' build">
	<property name="project.config" value="Release" />
	<property name="build.debug" value="false" />
    </target>

    <!-- build tasks -->
    <target name="init" description="Initializes build properties">
	<call target="${project.config}" />
	<call target="${nant.settings.currentframework}" />
	<property name="build.dir" value="${bin.dir}/${project.config}-${platform.dir}"/>
    </target>

    <target name="clean" description="Deletes every build configuration">
	<echo message="Deleting all builds from all configurations" />
	<delete dir="${nant.project.basedir}/${bin.dir}" failonerror="false" />
	<nant buildfile="${src.dir}/${nant.project.name}.dll.build" target="clean" />
	<nant buildfile="${src.dir}/${Image.dir}/${project.name.Image}.dll.build" target="clean" />
	<nant buildfile="${src.dir}/${TTF.dir}/${project.name.TTF}.dll.build" target="clean" />
	<nant buildfile="${examples.dir}/Rectangles/Rectangles.build" target="clean" />
	<nant buildfile="${examples.dir}/CDTest/CDTest.build" target="clean" />
	<nant buildfile="${examples.dir}/FontTest/FontTest.build" target="clean" />
	<nant buildfile="${examples.dir}/ImageExample/ImageExample.build" target="clean" />
    </target>

    <!--run this target to create a mono build -->
    <target name = "mono-1.0" description="sets parameters for a mono build">
	<property name="platform.dir" value="mono"/>
	<property name="nant.settings.currentframework" value="mono-1.0" />
	<property name="mono" value="true"/>
	<property name="net" value="false"/>
    </target>

    <target name = "mono" depends="mono-1.0" description="sets parameters for a mono build">
    </target>

    <target name = "net-1.1" description="sets parameters for a net build">
	<property name="mono" value="false"/>
	<property name="net" value="true"/>
	<property name="platform.dir" value="net"/>
	<property name="nant.settings.currentframework" value="net-1.1" />
    </target>

    <target name = "net" depends="net-1.1" description="sets parameters for a .net build">
    </target>

    <target name="buildSDL" depends="init" description="Builds current configuration">
	<!-- build SDLDotNet assembly -->
	<nant buildfile="${src.dir}/${nant.project.name}.dll.build" target="build" />
    </target>

    <target name="buildImage" depends="init, buildSDL" description="Builds current configuration">
	<!-- build SDLDotNet assembly -->
	<nant buildfile="${src.dir}/${Image.dir}/${project.name.Image}.dll.build" target="build" />
    </target>

    <target name="buildTTF" depends="init, buildSDL" description="Builds current configuration">
	<!-- build SDLDotNet assembly -->
	<nant buildfile="${src.dir}/${TTF.dir}/${project.name.TTF}.dll.build" target="build" />
    </target>

    <target name="buildSDLAll" depends="init" description="Build the All assembly">
	<nant buildfile="${src.dir}/${project.name.All}.dll.build" target="build" />
    </target>

    <target name="buildsub" depends="init, buildSDL, buildImage, buildTTF" description="Builds all three separate assemblies">
    </target>

    <target name="setrelease" description="Sets Release configuration">
	<!-- build SDLDotNet assembly -->
	<property name="project.config" value="Release" /> <!-- Debug|Release -->
	<call target="${project.config}" />
    </target>

    <target name="examples" depends="build" description="Build examples">
	<echo message="Building examples" />
	<nant buildfile="${examples.dir}/Rectangles/Rectangles.build" target="build" />
	<nant buildfile="${examples.dir}/CDTest/CDTest.build" target="build" />
	<nant buildfile="${examples.dir}/FontTest/FontTest.build" target="build" />
	<nant buildfile="${examples.dir}/ImageExample/ImageExample.build" target="build" />
    </target>

    <target name="build" depends="buildsub, buildSDLAll" description="Builds all four assemblies">
    </target>

    <target name="buildrelease" depends="clean, setrelease, examples" description="Build all Release assemblies">
	<echo message="Building all Release assemblies" />
    </target>

    <target name="prepackage" depends="buildrelease, doc, schema" description="Build all Release items for default framework">
	<echo message="Building all Release assemblies" />
    </target>

    <target name="doc" depends="init, build">
	<nant buildfile="${src.dir}/${project.name.All}.dll.build" target="doc" />
    </target>

    <target name="schema" depends="init, build">
	<nant buildfile="${src.dir}/${project.name.All}.dll.build" target="schema" />
    </target>

    <target name="package" depends="mono, buildrelease, copyfiles, net">
	<call target="build"/>
	<call target="examples"/>
	<call target="doc" />
	<call target="schema" />
	<call target="copyfiles" />
	<call target="archive" />
    </target>

    <target name="packagedefault" depends="prepackage" description="Package only default framework">
	<call target="copyfiles" />
	<call target="archive" />
    </target>

    <!-- copy project files -->
    <target name="copyfiles">
	<copy todir="${bin.dir}/${nant.project.name}-${project.version}">
	    <fileset>
		<includes name="src/**" />
		<includes name="examples/**" />
		<includes name="*" />

		<!--Start "Exclude VS.Net stuff" -->
		<excludes name="**/*.suo" />
		<excludes name="**/*j.user" />
		<excludes name="**/obj/**" />
		<excludes name="${src.dir}/**/${bin.dir}/**" />
		<excludes name="**/doc/**" />
		<!--End "Exclude VS.Net stuff"-->
		<excludes name="**/*.swp" />
		<excludes name="**/*.bak" />
	    </fileset>
	</copy>
	<copy todir="${bin.dir}/${nant.project.name}-${project.version}/doc">
	    <fileset basedir="${src.dir}/${bin.dir}/${project.config}-${platform.dir}/doc">
		<includes name="*" />
	    </fileset>
	</copy>
	<copy todir="${bin.dir}/${nant.project.name}-${project.version}/${bin.dir}/${platform.dir}">
	    <fileset basedir="${src.dir}/${bin.dir}/${project.config}-${platform.dir}">
		<includes name="*.dll"/>
	    </fileset>
	</copy>
	<copy todir="${bin.dir}/${nant.project.name}-${project.version}/${bin.dir}/${platform.dir}">
	    <fileset basedir="${src.dir}/${Image.dir}/${bin.dir}/${project.config}-${platform.dir}">
		<includes name="SDL.Image.NET.dll"/>
	    </fileset>
	</copy>
	<copy todir="${bin.dir}/${nant.project.name}-${project.version}/${bin.dir}/${platform.dir}">
	    <fileset basedir="${src.dir}/${TTF.dir}/${bin.dir}/${project.config}-${platform.dir}">
		<includes name="SDL.TTF.NET.dll"/>
	    </fileset>
	</copy>
    </target>

    <!-- create zip file -->
    <target name="archive" description="archive files">
	<property name="project.zip-path" value="${nant.project.basedir}/${bin.dir}/${nant.project.name}-${project.version}" />
	<zip zipfile="${project.zip-path}.zip">
	    <fileset basedir="${bin.dir}">
		<includes name="${project.zip-path}/bin/**" />
		<includes name="${project.zip-path}/doc/**" />
	    </fileset>
	</zip>
	<zip zipfile="${project.zip-path}-src.zip">
	    <fileset basedir="${bin.dir}">
		<includes name="${project.zip-path}/src/**" />
		<includes name="${project.zip-path}/*" />
		<excludes name="${project.zip-path}/**/bin/*" />
		<excludes name="${project.zip-path}/**/obj/*" />
	    </fileset>
	</zip>
	<zip zipfile="${project.zip-path}-examples.zip">
	    <fileset basedir="${bin.dir}">
		<includes name="${project.zip-path}/examples/**" />
	    </fileset>
	</zip>
	<echo message="Created '${project.config}' packages at ${project.zip-path}" />
    </target>
</project>
